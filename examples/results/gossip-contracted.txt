statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__S0 = __first_ty'() , this.__S1 = __node_ty'() , this.__S2 = __node_ty'() , this.__S3 = __node_ty'()
statement: this.__S0 = __first_ty'() , this.__S1 = __node_ty'() , this.__S2 = __node_ty'()
statement: this.__S0 = __first_ty'() , this.__S1 = __node_ty'()
statement: this.__S0 = __first_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.infected = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __node_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.infected = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __node_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.infected = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __node_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.infected = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: repeat 15 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (action,node) := this'.scheduler()
particle-size: 3
particle-size: 3
statement: actions := ([]: (R × R)[])
particle-size: 3
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 1
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
loop-index: 2
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
loop-index: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,3));
}
statement: this'.__S1.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
repetition: 2
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (action,node) := this'.scheduler()
particle-size: 3
particle-size: 3
statement: actions := ([]: (R × R)[])
particle-size: 3
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
loop-index: 1
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
loop-index: 2
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
loop-index: 3
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 1
statement: this'.Q_in.dupFront()
particle-size: 1
particle-size: 1
statement: this'.pushFront(this'.front())
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 1
statement: this'.Q_in.dupFront()
particle-size: 1
particle-size: 1
statement: this'.pushFront(this'.front())
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 1
statement: this'.Q_in.dupFront()
particle-size: 1
particle-size: 1
statement: this'.pushFront(this'.front())
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
repetition: 3
statement: __d.__step()
particle-size: 27
particle-size: 27
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (action,node) := this'.scheduler()
particle-size: 27
particle-size: 27
statement: actions := ([]: (R × R)[])
particle-size: 27
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 1
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 2
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 3
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
repetition: 4
statement: __d.__step()
particle-size: 27
particle-size: 27
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (action,node) := this'.scheduler()
particle-size: 27
particle-size: 27
statement: actions := ([]: (R × R)[])
particle-size: 27
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 1
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 2
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 3
particle-size: 27
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__S0.__run()
particle-size: 9
particle-size: 9
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.__S3.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 189
repetition: 5
statement: __d.__step()
particle-size: 189
particle-size: 189
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
particle-size: 189
statement: (action,node) := this'.scheduler()
particle-size: 189
particle-size: 189
statement: actions := ([]: (R × R)[])
particle-size: 189
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 189
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
loop-index: 1
particle-size: 189
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 2
particle-size: 189
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 3
particle-size: 189
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this'.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 111
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 360
particle-size: 360
particle-size: 360
particle-size: 360
particle-size: 360
particle-size: 360
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__S0.__run()
particle-size: 9
particle-size: 9
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.__S3.__run()
particle-size: 6
particle-size: 6
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 6
statement: this'.Q_in.dupFront()
particle-size: 6
particle-size: 6
statement: this'.pushFront(this'.front())
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 504
particle-size: 504
particle-size: 504
particle-size: 333
repetition: 6
statement: __d.__step()
particle-size: 333
particle-size: 333
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: (action,node) := this'.scheduler()
particle-size: 333
particle-size: 333
statement: actions := ([]: (R × R)[])
particle-size: 333
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 333
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
loop-index: 1
particle-size: 333
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(1,i)]
particle-size: 162
loop-index: 2
particle-size: 333
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(1,i)]
particle-size: 162
loop-index: 3
particle-size: 333
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
statement: actions ~= [(1,i)]
particle-size: 162
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 819
particle-size: 819
particle-size: 819
particle-size: 819
particle-size: 819
particle-size: 819
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: this'.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 333
particle-size: 333
statement: return this'.data.length
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: this'.__S1.__run()
particle-size: 74
particle-size: 74
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 38
statement: this'.Q_in.dupFront()
particle-size: 38
particle-size: 38
statement: this'.pushFront(this'.front())
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = [x] ~ this'.data
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.data = this'.data ~ [x]
particle-size: 342
statement: return ()
particle-size: 342
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 378
particle-size: 378
particle-size: 378
particle-size: 378
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 637
particle-size: 637
statement: return this'.data.length
particle-size: 637
particle-size: 637
particle-size: 637
particle-size: 637
statement: this'.__S2.__run()
particle-size: 74
particle-size: 74
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 38
statement: this'.Q_in.dupFront()
particle-size: 38
particle-size: 38
statement: this'.pushFront(this'.front())
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = [x] ~ this'.data
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.data = this'.data ~ [x]
particle-size: 342
statement: return ()
particle-size: 342
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 378
particle-size: 378
particle-size: 378
particle-size: 378
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 941
particle-size: 941
statement: return this'.data.length
particle-size: 941
particle-size: 941
particle-size: 941
particle-size: 941
statement: this'.__S3.__run()
particle-size: 74
particle-size: 74
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 38
statement: this'.Q_in.dupFront()
particle-size: 38
particle-size: 38
statement: this'.pushFront(this'.front())
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = [x] ~ this'.data
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.data = this'.data ~ [x]
particle-size: 342
statement: return ()
particle-size: 342
particle-size: 342
particle-size: 342
particle-size: 342
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 378
particle-size: 378
particle-size: 378
particle-size: 378
statement: return ()
particle-size: 1731
particle-size: 1731
particle-size: 1731
particle-size: 876
repetition: 7
statement: __d.__step()
particle-size: 876
particle-size: 876
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: return this'.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (action,node) := this'.scheduler()
particle-size: 873
particle-size: 873
statement: actions := ([]: (R × R)[])
particle-size: 873
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 873
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(0,i)]
particle-size: 162
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
loop-index: 1
particle-size: 873
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(0,i)]
particle-size: 108
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(1,i)]
particle-size: 543
loop-index: 2
particle-size: 873
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(0,i)]
particle-size: 108
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(1,i)]
particle-size: 543
loop-index: 3
particle-size: 873
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(0,i)]
particle-size: 108
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 873
particle-size: 873
statement: return this'.data.length
particle-size: 873
particle-size: 873
particle-size: 873
statement: actions ~= [(1,i)]
particle-size: 543
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 543
particle-size: 543
statement: r := this'.front()
particle-size: 543
particle-size: 543
statement: return this'.data[0]
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: this'.popFront()
particle-size: 543
particle-size: 543
statement: this'.data = this'.data[1..this'.size()]
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return r
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 543
particle-size: 543
statement: r := this'.front()
particle-size: 543
particle-size: 543
statement: return this'.data[0]
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: this'.popFront()
particle-size: 543
particle-size: 543
statement: this'.data = this'.data[1..this'.size()]
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return r
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 543
particle-size: 543
statement: r := this'.front()
particle-size: 543
particle-size: 543
statement: return this'.data[0]
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: this'.popFront()
particle-size: 543
particle-size: 543
statement: this'.data = this'.data[1..this'.size()]
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return r
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.__S0.__run()
particle-size: 162
particle-size: 162
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.__S1.__run()
particle-size: 108
particle-size: 108
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 54
statement: this'.Q_in.dupFront()
particle-size: 54
particle-size: 54
statement: this'.pushFront(this'.front())
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = [x] ~ this'.data
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = this'.data ~ [x]
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.data = this'.data ~ [x]
particle-size: 486
statement: return ()
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 918
particle-size: 918
statement: return this'.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: this'.__S2.__run()
particle-size: 108
particle-size: 108
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 54
statement: this'.Q_in.dupFront()
particle-size: 54
particle-size: 54
statement: this'.pushFront(this'.front())
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = [x] ~ this'.data
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = this'.data ~ [x]
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.data = this'.data ~ [x]
particle-size: 486
statement: return ()
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1350
particle-size: 1350
statement: return this'.data.length
particle-size: 1350
particle-size: 1350
particle-size: 1350
particle-size: 1350
statement: this'.__S3.__run()
particle-size: 108
particle-size: 108
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 54
statement: this'.Q_in.dupFront()
particle-size: 54
particle-size: 54
statement: this'.pushFront(this'.front())
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = [x] ~ this'.data
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = this'.data ~ [x]
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.data = this'.data ~ [x]
particle-size: 486
statement: return ()
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
statement: return ()
particle-size: 3414
particle-size: 3414
particle-size: 3414
particle-size: 1482
repetition: 8
statement: __d.__step()
particle-size: 1482
particle-size: 1482
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: return this'.data.length
particle-size: 1482
particle-size: 1482
particle-size: 1482
particle-size: 1482
statement: (action,node) := this'.scheduler()
particle-size: 1479
particle-size: 1479
statement: actions := ([]: (R × R)[])
particle-size: 1479
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1479
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(0,i)]
particle-size: 543
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
loop-index: 1
particle-size: 1479
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(0,i)]
particle-size: 362
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(1,i)]
particle-size: 927
loop-index: 2
particle-size: 1479
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(0,i)]
particle-size: 362
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(1,i)]
particle-size: 927
loop-index: 3
particle-size: 1479
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(0,i)]
particle-size: 362
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1479
particle-size: 1479
statement: return this'.data.length
particle-size: 1479
particle-size: 1479
particle-size: 1479
statement: actions ~= [(1,i)]
particle-size: 927
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4410
particle-size: 4410
particle-size: 4410
particle-size: 4410
particle-size: 4410
particle-size: 4410
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2781
particle-size: 2781
statement: return this'.data.length
particle-size: 2781
particle-size: 2781
particle-size: 2781
particle-size: 2781
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2781
particle-size: 2781
statement: return this'.data.length
particle-size: 2781
particle-size: 2781
particle-size: 2781
particle-size: 2781
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 927
particle-size: 927
statement: r := this'.front()
particle-size: 927
particle-size: 927
statement: return this'.data[0]
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: this'.popFront()
particle-size: 927
particle-size: 927
statement: this'.data = this'.data[1..this'.size()]
particle-size: 927
particle-size: 927
statement: return this'.data.length
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return ()
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return r
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2781
particle-size: 2781
statement: return this'.data.length
particle-size: 2781
particle-size: 2781
particle-size: 2781
particle-size: 2781
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 927
particle-size: 927
statement: r := this'.front()
particle-size: 927
particle-size: 927
statement: return this'.data[0]
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: this'.popFront()
particle-size: 927
particle-size: 927
statement: this'.data = this'.data[1..this'.size()]
particle-size: 927
particle-size: 927
statement: return this'.data.length
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return ()
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return r
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2781
particle-size: 2781
statement: return this'.data.length
particle-size: 2781
particle-size: 2781
particle-size: 2781
particle-size: 2781
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 927
particle-size: 927
statement: r := this'.front()
particle-size: 927
particle-size: 927
statement: return this'.data[0]
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: this'.popFront()
particle-size: 927
particle-size: 927
statement: this'.data = this'.data[1..this'.size()]
particle-size: 927
particle-size: 927
statement: return this'.data.length
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return ()
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: return r
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
particle-size: 927
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: this'.__S0.__run()
particle-size: 543
particle-size: 543
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 543
particle-size: 543
statement: this'.data = this'.data[1..this'.size()]
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1629
particle-size: 1629
statement: return this'.data.length
particle-size: 1629
particle-size: 1629
particle-size: 1629
particle-size: 1629
statement: this'.__S1.__run()
particle-size: 362
particle-size: 362
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 46
statement: this'.Q_in.dupFront()
particle-size: 46
particle-size: 46
statement: this'.pushFront(this'.front())
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = [x] ~ this'.data
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.data = this'.data ~ [x]
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 138
particle-size: 138
statement: r := this'.front()
particle-size: 138
particle-size: 138
statement: return this'.data[0]
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.popFront()
particle-size: 138
particle-size: 138
statement: this'.data = this'.data[1..this'.size()]
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return r
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.data = this'.data ~ [x]
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.Q_in.popFront()
particle-size: 316
particle-size: 316
statement: this'.data = this'.data[1..this'.size()]
particle-size: 316
particle-size: 316
statement: return this'.data.length
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 730
particle-size: 730
particle-size: 730
particle-size: 730
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1997
particle-size: 1997
statement: return this'.data.length
particle-size: 1997
particle-size: 1997
particle-size: 1997
particle-size: 1997
statement: this'.__S2.__run()
particle-size: 362
particle-size: 362
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 46
statement: this'.Q_in.dupFront()
particle-size: 46
particle-size: 46
statement: this'.pushFront(this'.front())
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = [x] ~ this'.data
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.data = this'.data ~ [x]
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 138
particle-size: 138
statement: r := this'.front()
particle-size: 138
particle-size: 138
statement: return this'.data[0]
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.popFront()
particle-size: 138
particle-size: 138
statement: this'.data = this'.data[1..this'.size()]
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return r
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.data = this'.data ~ [x]
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.Q_in.popFront()
particle-size: 316
particle-size: 316
statement: this'.data = this'.data[1..this'.size()]
particle-size: 316
particle-size: 316
statement: return this'.data.length
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 730
particle-size: 730
particle-size: 730
particle-size: 730
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2365
particle-size: 2365
statement: return this'.data.length
particle-size: 2365
particle-size: 2365
particle-size: 2365
particle-size: 2365
statement: this'.__S3.__run()
particle-size: 362
particle-size: 362
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 46
statement: this'.Q_in.dupFront()
particle-size: 46
particle-size: 46
statement: this'.pushFront(this'.front())
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = [x] ~ this'.data
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.data = this'.data ~ [x]
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 138
particle-size: 138
statement: r := this'.front()
particle-size: 138
particle-size: 138
statement: return this'.data[0]
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.popFront()
particle-size: 138
particle-size: 138
statement: this'.data = this'.data[1..this'.size()]
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return r
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.data = this'.data ~ [x]
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.Q_in.popFront()
particle-size: 316
particle-size: 316
statement: this'.data = this'.data[1..this'.size()]
particle-size: 316
particle-size: 316
statement: return this'.data.length
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 316
particle-size: 316
particle-size: 316
particle-size: 316
statement: return ()
particle-size: 730
particle-size: 730
particle-size: 730
particle-size: 730
statement: return ()
particle-size: 5517
particle-size: 5517
particle-size: 5517
particle-size: 2073
repetition: 9
statement: __d.__step()
particle-size: 2073
particle-size: 2073
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: return this'.data.length
particle-size: 2073
particle-size: 2073
particle-size: 2073
particle-size: 2073
statement: (action,node) := this'.scheduler()
particle-size: 2070
particle-size: 2070
statement: actions := ([]: (R × R)[])
particle-size: 2070
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2070
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(0,i)]
particle-size: 939
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
loop-index: 1
particle-size: 2070
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(0,i)]
particle-size: 654
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(1,i)]
particle-size: 1086
loop-index: 2
particle-size: 2070
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(0,i)]
particle-size: 654
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(1,i)]
particle-size: 1086
loop-index: 3
particle-size: 2070
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(0,i)]
particle-size: 654
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2070
particle-size: 2070
statement: return this'.data.length
particle-size: 2070
particle-size: 2070
particle-size: 2070
statement: actions ~= [(1,i)]
particle-size: 1086
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6159
particle-size: 6159
particle-size: 6159
particle-size: 6159
particle-size: 6159
particle-size: 6159
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3258
particle-size: 3258
statement: return this'.data.length
particle-size: 3258
particle-size: 3258
particle-size: 3258
particle-size: 3258
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3258
particle-size: 3258
statement: return this'.data.length
particle-size: 3258
particle-size: 3258
particle-size: 3258
particle-size: 3258
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1086
particle-size: 1086
statement: r := this'.front()
particle-size: 1086
particle-size: 1086
statement: return this'.data[0]
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: this'.popFront()
particle-size: 1086
particle-size: 1086
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return ()
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return r
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3258
particle-size: 3258
statement: return this'.data.length
particle-size: 3258
particle-size: 3258
particle-size: 3258
particle-size: 3258
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1086
particle-size: 1086
statement: r := this'.front()
particle-size: 1086
particle-size: 1086
statement: return this'.data[0]
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: this'.popFront()
particle-size: 1086
particle-size: 1086
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return ()
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return r
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3258
particle-size: 3258
statement: return this'.data.length
particle-size: 3258
particle-size: 3258
particle-size: 3258
particle-size: 3258
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1086
particle-size: 1086
statement: r := this'.front()
particle-size: 1086
particle-size: 1086
statement: return this'.data[0]
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: this'.popFront()
particle-size: 1086
particle-size: 1086
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return ()
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return r
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 362
particle-size: 362
particle-size: 362
statement: this'.data = this'.data ~ [x]
particle-size: 362
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 362
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2901
particle-size: 2901
statement: return this'.data.length
particle-size: 2901
particle-size: 2901
particle-size: 2901
particle-size: 2901
statement: this'.__S0.__run()
particle-size: 939
particle-size: 939
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 939
particle-size: 939
statement: this'.data = this'.data[1..this'.size()]
particle-size: 939
particle-size: 939
statement: return this'.data.length
particle-size: 939
particle-size: 939
particle-size: 939
particle-size: 939
particle-size: 939
statement: return ()
particle-size: 939
particle-size: 939
particle-size: 939
particle-size: 939
statement: return ()
particle-size: 939
particle-size: 939
particle-size: 939
particle-size: 939
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2901
particle-size: 2901
statement: return this'.data.length
particle-size: 2901
particle-size: 2901
particle-size: 2901
particle-size: 2901
statement: this'.__S1.__run()
particle-size: 654
particle-size: 654
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 12
statement: this'.Q_in.dupFront()
particle-size: 12
particle-size: 12
statement: this'.pushFront(this'.front())
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.Q_in.popFront()
particle-size: 642
particle-size: 642
statement: this'.data = this'.data[1..this'.size()]
particle-size: 642
particle-size: 642
statement: return this'.data.length
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 750
particle-size: 750
particle-size: 750
particle-size: 750
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2997
particle-size: 2997
statement: return this'.data.length
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
statement: this'.__S2.__run()
particle-size: 654
particle-size: 654
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 12
statement: this'.Q_in.dupFront()
particle-size: 12
particle-size: 12
statement: this'.pushFront(this'.front())
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.Q_in.popFront()
particle-size: 642
particle-size: 642
statement: this'.data = this'.data[1..this'.size()]
particle-size: 642
particle-size: 642
statement: return this'.data.length
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 750
particle-size: 750
particle-size: 750
particle-size: 750
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3093
particle-size: 3093
statement: return this'.data.length
particle-size: 3093
particle-size: 3093
particle-size: 3093
particle-size: 3093
statement: this'.__S3.__run()
particle-size: 654
particle-size: 654
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 12
statement: this'.Q_in.dupFront()
particle-size: 12
particle-size: 12
statement: this'.pushFront(this'.front())
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.Q_in.popFront()
particle-size: 642
particle-size: 642
statement: this'.data = this'.data[1..this'.size()]
particle-size: 642
particle-size: 642
statement: return this'.data.length
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: return ()
particle-size: 750
particle-size: 750
particle-size: 750
particle-size: 750
statement: return ()
particle-size: 6450
particle-size: 6450
particle-size: 6450
particle-size: 1893
repetition: 10
statement: __d.__step()
particle-size: 1893
particle-size: 1893
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: return this'.data.length
particle-size: 1893
particle-size: 1893
particle-size: 1893
particle-size: 1893
statement: (action,node) := this'.scheduler()
particle-size: 1890
particle-size: 1890
statement: actions := ([]: (R × R)[])
particle-size: 1890
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1890
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(0,i)]
particle-size: 1086
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
loop-index: 1
particle-size: 1890
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(0,i)]
particle-size: 760
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(1,i)]
particle-size: 705
loop-index: 2
particle-size: 1890
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(0,i)]
particle-size: 760
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(1,i)]
particle-size: 705
loop-index: 3
particle-size: 1890
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(0,i)]
particle-size: 760
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1890
particle-size: 1890
statement: return this'.data.length
particle-size: 1890
particle-size: 1890
particle-size: 1890
statement: actions ~= [(1,i)]
particle-size: 705
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 5481
particle-size: 5481
particle-size: 5481
particle-size: 5481
particle-size: 5481
particle-size: 5481
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2115
particle-size: 2115
statement: return this'.data.length
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2115
particle-size: 2115
statement: return this'.data.length
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 705
particle-size: 705
statement: r := this'.front()
particle-size: 705
particle-size: 705
statement: return this'.data[0]
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: this'.popFront()
particle-size: 705
particle-size: 705
statement: this'.data = this'.data[1..this'.size()]
particle-size: 705
particle-size: 705
statement: return this'.data.length
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return ()
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return r
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2115
particle-size: 2115
statement: return this'.data.length
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 705
particle-size: 705
statement: r := this'.front()
particle-size: 705
particle-size: 705
statement: return this'.data[0]
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: this'.popFront()
particle-size: 705
particle-size: 705
statement: this'.data = this'.data[1..this'.size()]
particle-size: 705
particle-size: 705
statement: return this'.data.length
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return ()
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return r
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2115
particle-size: 2115
statement: return this'.data.length
particle-size: 2115
particle-size: 2115
particle-size: 2115
particle-size: 2115
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 705
particle-size: 705
statement: r := this'.front()
particle-size: 705
particle-size: 705
statement: return this'.data[0]
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: this'.popFront()
particle-size: 705
particle-size: 705
statement: this'.data = this'.data[1..this'.size()]
particle-size: 705
particle-size: 705
statement: return this'.data.length
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return ()
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: return r
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.data = this'.data ~ [x]
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3366
particle-size: 3366
statement: return this'.data.length
particle-size: 3366
particle-size: 3366
particle-size: 3366
particle-size: 3366
statement: this'.__S0.__run()
particle-size: 1086
particle-size: 1086
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1086
particle-size: 1086
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return ()
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: return ()
particle-size: 1086
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3366
particle-size: 3366
statement: return this'.data.length
particle-size: 3366
particle-size: 3366
particle-size: 3366
particle-size: 3366
statement: this'.__S1.__run()
particle-size: 760
particle-size: 760
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 2
statement: this'.Q_in.dupFront()
particle-size: 2
particle-size: 2
statement: this'.pushFront(this'.front())
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 758
particle-size: 758
statement: this'.data = this'.data[1..this'.size()]
particle-size: 758
particle-size: 758
statement: return this'.data.length
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 776
particle-size: 776
particle-size: 776
particle-size: 776
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3382
particle-size: 3382
statement: return this'.data.length
particle-size: 3382
particle-size: 3382
particle-size: 3382
particle-size: 3382
statement: this'.__S2.__run()
particle-size: 760
particle-size: 760
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 2
statement: this'.Q_in.dupFront()
particle-size: 2
particle-size: 2
statement: this'.pushFront(this'.front())
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 758
particle-size: 758
statement: this'.data = this'.data[1..this'.size()]
particle-size: 758
particle-size: 758
statement: return this'.data.length
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 776
particle-size: 776
particle-size: 776
particle-size: 776
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3398
particle-size: 3398
statement: return this'.data.length
particle-size: 3398
particle-size: 3398
particle-size: 3398
particle-size: 3398
statement: this'.__S3.__run()
particle-size: 760
particle-size: 760
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.infected = 1
particle-size: 2
statement: this'.Q_in.dupFront()
particle-size: 2
particle-size: 2
statement: this'.pushFront(this'.front())
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 758
particle-size: 758
statement: this'.data = this'.data[1..this'.size()]
particle-size: 758
particle-size: 758
statement: return this'.data.length
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 758
particle-size: 758
particle-size: 758
particle-size: 758
statement: return ()
particle-size: 776
particle-size: 776
particle-size: 776
particle-size: 776
statement: return ()
particle-size: 5532
particle-size: 5532
particle-size: 5532
particle-size: 1293
repetition: 11
statement: __d.__step()
particle-size: 1293
particle-size: 1293
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: return this'.data.length
particle-size: 1293
particle-size: 1293
particle-size: 1293
particle-size: 1293
statement: (action,node) := this'.scheduler()
particle-size: 1287
particle-size: 1287
statement: actions := ([]: (R × R)[])
particle-size: 1287
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1287
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(0,i)]
particle-size: 777
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
loop-index: 1
particle-size: 1287
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(0,i)]
particle-size: 524
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(1,i)]
particle-size: 216
loop-index: 2
particle-size: 1287
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(0,i)]
particle-size: 524
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(1,i)]
particle-size: 216
loop-index: 3
particle-size: 1287
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(0,i)]
particle-size: 524
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1287
particle-size: 1287
statement: return this'.data.length
particle-size: 1287
particle-size: 1287
particle-size: 1287
statement: actions ~= [(1,i)]
particle-size: 216
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 216
particle-size: 216
statement: r := this'.front()
particle-size: 216
particle-size: 216
statement: return this'.data[0]
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this'.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return r
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 216
particle-size: 216
statement: r := this'.front()
particle-size: 216
particle-size: 216
statement: return this'.data[0]
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this'.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return r
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 216
particle-size: 216
statement: r := this'.front()
particle-size: 216
particle-size: 216
statement: return this'.data[0]
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this'.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return r
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2349
particle-size: 2349
statement: return this'.data.length
particle-size: 2349
particle-size: 2349
particle-size: 2349
particle-size: 2349
statement: this'.__S0.__run()
particle-size: 777
particle-size: 777
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 777
particle-size: 777
statement: this'.data = this'.data[1..this'.size()]
particle-size: 777
particle-size: 777
statement: return this'.data.length
particle-size: 777
particle-size: 777
particle-size: 777
particle-size: 777
particle-size: 777
statement: return ()
particle-size: 777
particle-size: 777
particle-size: 777
particle-size: 777
statement: return ()
particle-size: 777
particle-size: 777
particle-size: 777
particle-size: 777
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2349
particle-size: 2349
statement: return this'.data.length
particle-size: 2349
particle-size: 2349
particle-size: 2349
particle-size: 2349
statement: this'.__S1.__run()
particle-size: 524
particle-size: 524
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 524
particle-size: 524
statement: this'.data = this'.data[1..this'.size()]
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2349
particle-size: 2349
statement: return this'.data.length
particle-size: 2349
particle-size: 2349
particle-size: 2349
particle-size: 2349
statement: this'.__S2.__run()
particle-size: 524
particle-size: 524
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 524
particle-size: 524
statement: this'.data = this'.data[1..this'.size()]
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2349
particle-size: 2349
statement: return this'.data.length
particle-size: 2349
particle-size: 2349
particle-size: 2349
particle-size: 2349
statement: this'.__S3.__run()
particle-size: 524
particle-size: 524
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 524
particle-size: 524
statement: this'.data = this'.data[1..this'.size()]
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: return ()
particle-size: 3003
particle-size: 3003
particle-size: 3003
particle-size: 494
repetition: 12
statement: __d.__step()
particle-size: 494
particle-size: 494
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: (action,node) := this'.scheduler()
particle-size: 488
particle-size: 488
statement: actions := ([]: (R × R)[])
particle-size: 488
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 488
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 288
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
loop-index: 1
particle-size: 488
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 2
particle-size: 488
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 3
particle-size: 488
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this'.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 27
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 891
particle-size: 891
particle-size: 891
particle-size: 891
particle-size: 891
particle-size: 891
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__S0.__run()
particle-size: 288
particle-size: 288
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 288
particle-size: 288
statement: this'.data = this'.data[1..this'.size()]
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__S1.__run()
particle-size: 174
particle-size: 174
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__S2.__run()
particle-size: 174
particle-size: 174
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__S3.__run()
particle-size: 174
particle-size: 174
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 87
repetition: 13
statement: __d.__step()
particle-size: 87
particle-size: 87
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: (action,node) := this'.scheduler()
particle-size: 81
particle-size: 81
statement: actions := ([]: (R × R)[])
particle-size: 81
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 81
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(0,i)]
particle-size: 36
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
loop-index: 1
particle-size: 81
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 2
particle-size: 81
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 81
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
statement: actions ~= [(1,i)]
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: this'.__S2.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S3.Q_in.pushBack((pkt,3));
}
statement: this'.__S3.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: this'.__S0.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.__S0.__run()
particle-size: 36
particle-size: 36
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.__S1.__run()
particle-size: 22
particle-size: 22
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.__S2.__run()
particle-size: 22
particle-size: 22
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.__S3.__run()
particle-size: 22
particle-size: 22
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 15
repetition: 14
statement: __d.__step()
particle-size: 15
particle-size: 15
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: actions := ([]: (R × R)[])
particle-size: 9
statement: for i in [0..4){
    if (if i == 0 {
        this'.__S0.Q_in;
    } else if i == 1 {
        this'.__S1.Q_in;
    } else if i == 2 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__S0.Q_out;
    } else if i == 1 {
        this'.__S1.Q_out;
    } else if i == 2 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if i == 0 {
    this'.__S0.Q_in;
} else if i == 1 {
    this'.__S1.Q_in;
} else if i == 2 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__S0.Q_out;
} else if i == 1 {
    this'.__S1.Q_out;
} else if i == 2 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 2 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 1 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 2 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 3 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.pushFront((Packet'(),0));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S3.__run()
particle-size: 2
particle-size: 2
statement: if this'.infected == 0 {
    this'.infected = 1;
    this'.Q_in.dupFront();
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],uniformInt(1,3)));
} else {
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 7
repetition: 15
statement: __d.__step()
particle-size: 7
particle-size: 7
statement: if this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 2 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 1 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 2 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 3 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: assert(!(__d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: q₁ := Expectation(((if 0 == 0 {
    __d.__S0.infected;
} else if 0 == 1 {
    __d.__S1.infected;
} else if 0 == 2 {
    __d.__S2.infected;
} else if 0 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 1 == 0 {
    __d.__S0.infected;
} else if 1 == 1 {
    __d.__S1.infected;
} else if 1 == 2 {
    __d.__S2.infected;
} else if 1 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 2 == 0 {
    __d.__S0.infected;
} else if 2 == 1 {
    __d.__S1.infected;
} else if 2 == 2 {
    __d.__S2.infected;
} else if 2 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 3 == 0 {
    __d.__S0.infected;
} else if 3 == 1 {
    __d.__S1.infected;
} else if 3 == 2 {
    __d.__S2.infected;
} else if 3 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 7
statement: q₂ := Expectation(((if 0 == 0 {
    __d.__S0.infected;
} else if 0 == 1 {
    __d.__S1.infected;
} else if 0 == 2 {
    __d.__S2.infected;
} else if 0 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 1 == 0 {
    __d.__S0.infected;
} else if 1 == 1 {
    __d.__S1.infected;
} else if 1 == 2 {
    __d.__S2.infected;
} else if 1 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 2 == 0 {
    __d.__S0.infected;
} else if 2 == 1 {
    __d.__S1.infected;
} else if 2 == 2 {
    __d.__S2.infected;
} else if 2 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 3 == 0 {
    __d.__S0.infected;
} else if 3 == 1 {
    __d.__S1.infected;
} else if 3 == 2 {
    __d.__S2.infected;
} else if 3 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 7
statement: q₃ := Expectation(((if 0 == 0 {
    __d.__S0.infected;
} else if 0 == 1 {
    __d.__S1.infected;
} else if 0 == 2 {
    __d.__S2.infected;
} else if 0 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 1 == 0 {
    __d.__S0.infected;
} else if 1 == 1 {
    __d.__S1.infected;
} else if 1 == 2 {
    __d.__S2.infected;
} else if 1 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 2 == 0 {
    __d.__S0.infected;
} else if 2 == 1 {
    __d.__S1.infected;
} else if 2 == 2 {
    __d.__S2.infected;
} else if 2 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 3 == 0 {
    __d.__S0.infected;
} else if 3 == 1 {
    __d.__S1.infected;
} else if 3 == 2 {
    __d.__S2.infected;
} else if 3 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 7
statement: q₄ := Expectation(((if 0 == 0 {
    __d.__S0.infected;
} else if 0 == 1 {
    __d.__S1.infected;
} else if 0 == 2 {
    __d.__S2.infected;
} else if 0 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 1 == 0 {
    __d.__S0.infected;
} else if 1 == 1 {
    __d.__S1.infected;
} else if 1 == 2 {
    __d.__S2.infected;
} else if 1 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 2 == 0 {
    __d.__S0.infected;
} else if 2 == 1 {
    __d.__S1.infected;
} else if 2 == 2 {
    __d.__S2.infected;
} else if 2 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 3 == 0 {
    __d.__S0.infected;
} else if 3 == 1 {
    __d.__S1.infected;
} else if 3 == 2 {
    __d.__S2.infected;
} else if 3 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) == 4) != 0)
particle-size: 7
statement: q₅ := Expectation((if 0 == 0 {
    __d.__S0.infected;
} else if 0 == 1 {
    __d.__S1.infected;
} else if 0 == 2 {
    __d.__S2.infected;
} else if 0 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 1 == 0 {
    __d.__S0.infected;
} else if 1 == 1 {
    __d.__S1.infected;
} else if 1 == 2 {
    __d.__S2.infected;
} else if 1 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 2 == 0 {
    __d.__S0.infected;
} else if 2 == 1 {
    __d.__S1.infected;
} else if 2 == 2 {
    __d.__S2.infected;
} else if 2 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}) + (if 3 == 0 {
    __d.__S0.infected;
} else if 3 == 1 {
    __d.__S1.infected;
} else if 3 == 2 {
    __d.__S2.infected;
} else if 3 == 3 {
    __d.__S3.infected;
} else {
    assert(0);
}))
particle-size: 7
statement: return (q₁,q₂,q₃,q₄,q₅)
particle-size: 7
p[r_] := δ_r[(0,1/9,8/27,16/27,94/27)]

real	2m30.672s
user	2m7.380s
sys	0m23.280s
