statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_arrived = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.strategy = 4
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.failing = 2
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.__H0.__run()
particle-size: 2
particle-size: 2
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.pkt_count = this.pkt_count + 1
particle-size: 2
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 2
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 2
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 6
repetition: 3
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.num_actions += 1
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.__H0.__run()
particle-size: 6
particle-size: 6
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = [x] ~ this.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = [x] ~ this.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.pkt_count = this.pkt_count + 1
particle-size: 5
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = this.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 2
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 2
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 12
repetition: 4
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.__H0.__run()
particle-size: 12
particle-size: 12
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = [x] ~ this.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = [x] ~ this.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.pkt_count = this.pkt_count + 1
particle-size: 9
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 9
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 6
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 6
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.__S1.__run()
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 4
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 26
repetition: 5
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this.scheduler()
particle-size: 26
particle-size: 26
statement: actions := ([]: (R × R)[])
particle-size: 26
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
loop-index: 2
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.num_actions += 1
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this.front()
particle-size: 16
particle-size: 16
statement: return this.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.popFront()
particle-size: 16
particle-size: 16
statement: this.data = this.data[1..this.size()]
particle-size: 16
particle-size: 16
statement: return this.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 37
particle-size: 37
statement: return this.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this.__H0.__run()
particle-size: 26
particle-size: 26
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = [x] ~ this.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.id = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = [x] ~ this.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.pkt_count = this.pkt_count + 1
particle-size: 14
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 14
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 37
particle-size: 37
statement: return this.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 37
particle-size: 37
statement: return this.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this.__S0.__run()
particle-size: 7
particle-size: 7
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 6
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 6
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = this.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = this.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.__S1.__run()
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 4
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 50
particle-size: 50
statement: return this.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 45
repetition: 6
statement: __d.__step()
particle-size: 45
particle-size: 45
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (action,node) := this.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: this.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this.front()
particle-size: 30
particle-size: 30
statement: return this.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this.popFront()
particle-size: 30
particle-size: 30
statement: this.data = this.data[1..this.size()]
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this.data = this.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.__H0.__run()
particle-size: 44
particle-size: 44
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 44
particle-size: 44
statement: this.id = 0
particle-size: 44
statement: return this
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.data = [x] ~ this.data
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = [x] ~ this.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.pkt_count = this.pkt_count + 1
particle-size: 20
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 20
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this.front()
particle-size: 20
particle-size: 20
statement: return this.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.popFront()
particle-size: 20
particle-size: 20
statement: this.data = this.data[1..this.size()]
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = this.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.__S0.__run()
particle-size: 12
particle-size: 12
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 8
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 8
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 88
particle-size: 88
statement: return this.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this.__S1.__run()
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 88
particle-size: 88
statement: return this.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 12
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.__S3.__run()
particle-size: 4
particle-size: 4
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 74
repetition: 7
statement: __d.__step()
particle-size: 74
particle-size: 74
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: (action,node) := this.scheduler()
particle-size: 74
particle-size: 74
statement: actions := ([]: (R × R)[])
particle-size: 74
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 72
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 49
loop-index: 1
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
loop-index: 2
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 3
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 4
statement: this.num_actions += 1
particle-size: 74
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this.front()
particle-size: 49
particle-size: 49
statement: return this.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.popFront()
particle-size: 49
particle-size: 49
statement: this.data = this.data[1..this.size()]
particle-size: 49
particle-size: 49
statement: return this.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.data = this.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this.front()
particle-size: 32
particle-size: 32
statement: return this.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.popFront()
particle-size: 32
particle-size: 32
statement: this.data = this.data[1..this.size()]
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this.__H0.__run()
particle-size: 72
particle-size: 72
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 72
particle-size: 72
statement: this.id = 0
particle-size: 72
statement: return this
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.data = [x] ~ this.data
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = [x] ~ this.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.pkt_count = this.pkt_count + 1
particle-size: 20
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 20
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this.front()
particle-size: 20
particle-size: 20
statement: return this.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.popFront()
particle-size: 20
particle-size: 20
statement: this.data = this.data[1..this.size()]
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = this.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this.data = this.data[1..this.size()]
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this.data = this.data[1..this.size()]
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this.__S0.__run()
particle-size: 26
particle-size: 26
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 8
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 8
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 19
particle-size: 19
statement: r := this.front()
particle-size: 19
particle-size: 19
statement: return this.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.data = this.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 143
particle-size: 143
statement: return this.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this.__S1.__run()
particle-size: 9
particle-size: 9
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 143
particle-size: 143
statement: return this.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this.__S2.__run()
particle-size: 9
particle-size: 9
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 18
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.__S3.__run()
particle-size: 4
particle-size: 4
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 113
repetition: 8
statement: __d.__step()
particle-size: 113
particle-size: 113
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: (action,node) := this.scheduler()
particle-size: 113
particle-size: 113
statement: actions := ([]: (R × R)[])
particle-size: 113
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 1
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
loop-index: 2
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 47
loop-index: 3
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 4
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 5
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 4
statement: this.num_actions += 1
particle-size: 113
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this.front()
particle-size: 67
particle-size: 67
statement: return this.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.popFront()
particle-size: 67
particle-size: 67
statement: this.data = this.data[1..this.size()]
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.data = this.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this.front()
particle-size: 47
particle-size: 47
statement: return this.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.popFront()
particle-size: 47
particle-size: 47
statement: this.data = this.data[1..this.size()]
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 196
particle-size: 196
statement: return this.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this.__H0.__run()
particle-size: 104
particle-size: 104
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 104
particle-size: 104
statement: this.id = 0
particle-size: 104
statement: return this
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.data = [x] ~ this.data
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.data = [x] ~ this.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.pkt_count = this.pkt_count + 1
particle-size: 27
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 27
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this.front()
particle-size: 27
particle-size: 27
statement: return this.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.popFront()
particle-size: 27
particle-size: 27
statement: this.data = this.data[1..this.size()]
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.data = this.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this.data = this.data[1..this.size()]
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this.data = this.data[1..this.size()]
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 196
particle-size: 196
statement: return this.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this.__H1.__run()
particle-size: 4
particle-size: 4
statement: this.num_arrived = this.num_arrived + 1
particle-size: 4
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this.__S0.__run()
particle-size: 42
particle-size: 42
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 4
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 4
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 23
particle-size: 23
statement: r := this.front()
particle-size: 23
particle-size: 23
statement: return this.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.popFront()
particle-size: 23
particle-size: 23
statement: this.data = this.data[1..this.size()]
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 23
particle-size: 23
statement: r := this.front()
particle-size: 23
particle-size: 23
statement: return this.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.popFront()
particle-size: 23
particle-size: 23
statement: this.data = this.data[1..this.size()]
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 23
particle-size: 23
statement: r := this.front()
particle-size: 23
particle-size: 23
statement: return this.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.popFront()
particle-size: 23
particle-size: 23
statement: this.data = this.data[1..this.size()]
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 219
particle-size: 219
statement: return this.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this.__S1.__run()
particle-size: 17
particle-size: 17
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 219
particle-size: 219
statement: return this.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this.__S2.__run()
particle-size: 17
particle-size: 17
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 34
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 236
particle-size: 236
statement: return this.data.length
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this.__S3.__run()
particle-size: 12
particle-size: 12
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 158
repetition: 9
statement: __d.__step()
particle-size: 158
particle-size: 158
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: (action,node) := this.scheduler()
particle-size: 158
particle-size: 158
statement: actions := ([]: (R × R)[])
particle-size: 158
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 145
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 85
loop-index: 1
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
loop-index: 2
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 61
loop-index: 3
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 158
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 12
statement: this.num_actions += 1
particle-size: 158
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 85
particle-size: 85
statement: r := this.front()
particle-size: 85
particle-size: 85
statement: return this.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.popFront()
particle-size: 85
particle-size: 85
statement: this.data = this.data[1..this.size()]
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.data = this.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 61
particle-size: 61
statement: r := this.front()
particle-size: 61
particle-size: 61
statement: return this.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.popFront()
particle-size: 61
particle-size: 61
statement: this.data = this.data[1..this.size()]
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this.data = this.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 31
particle-size: 31
particle-size: 31
statement: this.data = this.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 282
particle-size: 282
statement: return this.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this.__H0.__run()
particle-size: 145
particle-size: 145
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 145
particle-size: 145
statement: this.id = 0
particle-size: 145
statement: return this
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this.data = [x] ~ this.data
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = [x] ~ this.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.pkt_count = this.pkt_count + 1
particle-size: 26
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 26
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this.data = this.data[1..this.size()]
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this.data = this.data[1..this.size()]
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 282
particle-size: 282
statement: return this.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this.__H1.__run()
particle-size: 4
particle-size: 4
statement: this.num_arrived = this.num_arrived + 1
particle-size: 4
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 278
particle-size: 278
statement: return this.data.length
particle-size: 278
particle-size: 278
particle-size: 278
particle-size: 278
statement: this.__S0.__run()
particle-size: 63
particle-size: 63
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: this.strategy = uniformInt(1,2)
particle-size: 2
statement: if this.strategy == 2 {
    this.strategy = this.strategy + flip(1 / 2);
}
statement: this.strategy = this.strategy + flip(1 / 2)
particle-size: 2
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 31
particle-size: 31
statement: r := this.front()
particle-size: 31
particle-size: 31
statement: return this.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this.popFront()
particle-size: 31
particle-size: 31
statement: this.data = this.data[1..this.size()]
particle-size: 31
particle-size: 31
statement: return this.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this.data = this.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 314
particle-size: 314
statement: return this.data.length
particle-size: 314
particle-size: 314
particle-size: 314
particle-size: 314
statement: this.__S1.__run()
particle-size: 26
particle-size: 26
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 314
particle-size: 314
statement: return this.data.length
particle-size: 314
particle-size: 314
particle-size: 314
particle-size: 314
statement: this.__S2.__run()
particle-size: 26
particle-size: 26
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 44
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 336
particle-size: 336
statement: return this.data.length
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: this.__S3.__run()
particle-size: 18
particle-size: 18
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 220
repetition: 10
statement: __d.__step()
particle-size: 220
particle-size: 220
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: (action,node) := this.scheduler()
particle-size: 220
particle-size: 220
statement: actions := ([]: (R × R)[])
particle-size: 220
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 190
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 99
loop-index: 1
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
loop-index: 2
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 85
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 92
loop-index: 3
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 18
statement: this.num_actions += 1
particle-size: 220
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 99
particle-size: 99
statement: r := this.front()
particle-size: 99
particle-size: 99
statement: return this.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.popFront()
particle-size: 99
particle-size: 99
statement: this.data = this.data[1..this.size()]
particle-size: 99
particle-size: 99
statement: return this.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.data = this.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 92
particle-size: 92
statement: r := this.front()
particle-size: 92
particle-size: 92
statement: return this.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this.popFront()
particle-size: 92
particle-size: 92
statement: this.data = this.data[1..this.size()]
particle-size: 92
particle-size: 92
statement: return this.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: this.data = this.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.data = this.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 401
particle-size: 401
statement: return this.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this.__H0.__run()
particle-size: 190
particle-size: 190
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 190
particle-size: 190
statement: this.id = 0
particle-size: 190
statement: return this
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this.data = [x] ~ this.data
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: this.id = 0
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.data = [x] ~ this.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.pkt_count = this.pkt_count + 1
particle-size: 28
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 28
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 28
particle-size: 28
statement: r := this.front()
particle-size: 28
particle-size: 28
statement: return this.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.popFront()
particle-size: 28
particle-size: 28
statement: this.data = this.data[1..this.size()]
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.data = this.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this.data = this.data[1..this.size()]
particle-size: 162
particle-size: 162
statement: return this.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this.data = this.data[1..this.size()]
particle-size: 162
particle-size: 162
statement: return this.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 401
particle-size: 401
statement: return this.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this.__H1.__run()
particle-size: 12
particle-size: 12
statement: this.num_arrived = this.num_arrived + 1
particle-size: 12
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: this.__S0.__run()
particle-size: 85
particle-size: 85
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 47
particle-size: 47
statement: r := this.front()
particle-size: 47
particle-size: 47
statement: return this.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.popFront()
particle-size: 47
particle-size: 47
statement: this.data = this.data[1..this.size()]
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.data = this.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 47
particle-size: 47
statement: r := this.front()
particle-size: 47
particle-size: 47
statement: return this.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.popFront()
particle-size: 47
particle-size: 47
statement: this.data = this.data[1..this.size()]
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.data = this.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 38
particle-size: 38
statement: r := this.front()
particle-size: 38
particle-size: 38
statement: return this.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.popFront()
particle-size: 38
particle-size: 38
statement: this.data = this.data[1..this.size()]
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.data = this.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 436
particle-size: 436
statement: return this.data.length
particle-size: 436
particle-size: 436
particle-size: 436
particle-size: 436
statement: this.__S1.__run()
particle-size: 40
particle-size: 40
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 40
particle-size: 40
statement: r := this.front()
particle-size: 40
particle-size: 40
statement: return this.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.popFront()
particle-size: 40
particle-size: 40
statement: this.data = this.data[1..this.size()]
particle-size: 40
particle-size: 40
statement: return this.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.data = this.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 436
particle-size: 436
statement: return this.data.length
particle-size: 436
particle-size: 436
particle-size: 436
particle-size: 436
statement: this.__S2.__run()
particle-size: 40
particle-size: 40
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 68
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this.data = this.data[1..this.size()]
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 38
particle-size: 38
statement: r := this.front()
particle-size: 38
particle-size: 38
statement: return this.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.popFront()
particle-size: 38
particle-size: 38
statement: this.data = this.data[1..this.size()]
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.data = this.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 470
particle-size: 470
statement: return this.data.length
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
statement: this.__S3.__run()
particle-size: 34
particle-size: 34
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 280
repetition: 11
statement: __d.__step()
particle-size: 280
particle-size: 280
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: (action,node) := this.scheduler()
particle-size: 280
particle-size: 280
statement: actions := ([]: (R × R)[])
particle-size: 280
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 246
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 1
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
loop-index: 2
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 99
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 130
loop-index: 3
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 4
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 5
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 34
statement: this.num_actions += 1
particle-size: 280
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 130
particle-size: 130
statement: r := this.front()
particle-size: 130
particle-size: 130
statement: return this.data[0]
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: this.popFront()
particle-size: 130
particle-size: 130
statement: this.data = this.data[1..this.size()]
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return r
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 63
particle-size: 63
particle-size: 63
statement: this.data = this.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.data = this.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this.front()
particle-size: 40
particle-size: 40
statement: return this.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.popFront()
particle-size: 40
particle-size: 40
statement: this.data = this.data[1..this.size()]
particle-size: 40
particle-size: 40
statement: return this.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.data = this.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this.front()
particle-size: 38
particle-size: 38
statement: return this.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.popFront()
particle-size: 38
particle-size: 38
statement: this.data = this.data[1..this.size()]
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.data = this.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 523
particle-size: 523
statement: return this.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: this.__H0.__run()
particle-size: 246
particle-size: 246
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 246
particle-size: 246
statement: this.id = 0
particle-size: 246
statement: return this
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this.data = [x] ~ this.data
particle-size: 246
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 24
particle-size: 24
statement: this.id = 0
particle-size: 24
statement: return this
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = [x] ~ this.data
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.pkt_count = this.pkt_count + 1
particle-size: 24
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 24
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.Q_in.popFront()
particle-size: 222
particle-size: 222
statement: this.data = this.data[1..this.size()]
particle-size: 222
particle-size: 222
statement: return this.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: this.Q_in.popFront()
particle-size: 222
particle-size: 222
statement: this.data = this.data[1..this.size()]
particle-size: 222
particle-size: 222
statement: return this.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 523
particle-size: 523
statement: return this.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: this.__H1.__run()
particle-size: 18
particle-size: 18
statement: this.num_arrived = this.num_arrived + 1
particle-size: 18
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 505
particle-size: 505
statement: return this.data.length
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
statement: this.__S0.__run()
particle-size: 99
particle-size: 99
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 58
particle-size: 58
statement: r := this.front()
particle-size: 58
particle-size: 58
statement: return this.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.popFront()
particle-size: 58
particle-size: 58
statement: this.data = this.data[1..this.size()]
particle-size: 58
particle-size: 58
statement: return this.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.data = this.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 58
particle-size: 58
statement: r := this.front()
particle-size: 58
particle-size: 58
statement: return this.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.popFront()
particle-size: 58
particle-size: 58
statement: this.data = this.data[1..this.size()]
particle-size: 58
particle-size: 58
statement: return this.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.data = this.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 41
particle-size: 41
statement: r := this.front()
particle-size: 41
particle-size: 41
statement: return this.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.popFront()
particle-size: 41
particle-size: 41
statement: this.data = this.data[1..this.size()]
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.data = this.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 563
particle-size: 563
statement: return this.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this.__S1.__run()
particle-size: 55
particle-size: 55
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 55
particle-size: 55
statement: r := this.front()
particle-size: 55
particle-size: 55
statement: return this.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.popFront()
particle-size: 55
particle-size: 55
statement: this.data = this.data[1..this.size()]
particle-size: 55
particle-size: 55
statement: return this.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 563
particle-size: 563
statement: return this.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this.__S2.__run()
particle-size: 55
particle-size: 55
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 86
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 47
particle-size: 47
statement: this.data = this.data[1..this.size()]
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this.front()
particle-size: 51
particle-size: 51
statement: return this.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this.popFront()
particle-size: 51
particle-size: 51
statement: this.data = this.data[1..this.size()]
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this.data = this.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 606
particle-size: 606
statement: return this.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: this.__S3.__run()
particle-size: 50
particle-size: 50
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this.front()
particle-size: 50
particle-size: 50
statement: return this.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this.popFront()
particle-size: 50
particle-size: 50
statement: this.data = this.data[1..this.size()]
particle-size: 50
particle-size: 50
statement: return this.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this.data = this.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 953
particle-size: 953
particle-size: 953
particle-size: 354
repetition: 12
statement: __d.__step()
particle-size: 354
particle-size: 354
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: (action,node) := this.scheduler()
particle-size: 354
particle-size: 354
statement: actions := ([]: (R × R)[])
particle-size: 354
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 299
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 109
loop-index: 1
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
loop-index: 2
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 165
loop-index: 3
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 55
loop-index: 4
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 5
particle-size: 354
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 78
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 49
statement: this.num_actions += 1
particle-size: 354
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 109
particle-size: 109
statement: r := this.front()
particle-size: 109
particle-size: 109
statement: return this.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this.popFront()
particle-size: 109
particle-size: 109
statement: this.data = this.data[1..this.size()]
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this.data = this.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 165
particle-size: 165
statement: r := this.front()
particle-size: 165
particle-size: 165
statement: return this.data[0]
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: this.popFront()
particle-size: 165
particle-size: 165
statement: this.data = this.data[1..this.size()]
particle-size: 165
particle-size: 165
statement: return this.data.length
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return ()
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return r
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.data = this.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.data = this.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 55
particle-size: 55
statement: r := this.front()
particle-size: 55
particle-size: 55
statement: return this.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.popFront()
particle-size: 55
particle-size: 55
statement: this.data = this.data[1..this.size()]
particle-size: 55
particle-size: 55
statement: return this.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this.front()
particle-size: 50
particle-size: 50
statement: return this.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this.popFront()
particle-size: 50
particle-size: 50
statement: this.data = this.data[1..this.size()]
particle-size: 50
particle-size: 50
statement: return this.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this.data = this.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this.front()
particle-size: 49
particle-size: 49
statement: return this.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.popFront()
particle-size: 49
particle-size: 49
statement: this.data = this.data[1..this.size()]
particle-size: 49
particle-size: 49
statement: return this.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.data = this.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 671
particle-size: 671
statement: return this.data.length
particle-size: 671
particle-size: 671
particle-size: 671
particle-size: 671
statement: this.__H0.__run()
particle-size: 299
particle-size: 299
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 299
particle-size: 299
statement: this.id = 0
particle-size: 299
statement: return this
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: this.data = [x] ~ this.data
particle-size: 299
statement: return ()
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 25
particle-size: 25
statement: this.id = 0
particle-size: 25
statement: return this
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = [x] ~ this.data
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.pkt_count = this.pkt_count + 1
particle-size: 25
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 25
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 25
particle-size: 25
statement: r := this.front()
particle-size: 25
particle-size: 25
statement: return this.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.popFront()
particle-size: 25
particle-size: 25
statement: this.data = this.data[1..this.size()]
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = this.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.Q_in.popFront()
particle-size: 274
particle-size: 274
statement: this.data = this.data[1..this.size()]
particle-size: 274
particle-size: 274
statement: return this.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: this.Q_in.popFront()
particle-size: 274
particle-size: 274
statement: this.data = this.data[1..this.size()]
particle-size: 274
particle-size: 274
statement: return this.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 671
particle-size: 671
statement: return this.data.length
particle-size: 671
particle-size: 671
particle-size: 671
particle-size: 671
statement: this.__H1.__run()
particle-size: 34
particle-size: 34
statement: this.num_arrived = this.num_arrived + 1
particle-size: 34
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: this.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 639
particle-size: 639
statement: return this.data.length
particle-size: 639
particle-size: 639
particle-size: 639
particle-size: 639
statement: this.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 68
particle-size: 68
statement: r := this.front()
particle-size: 68
particle-size: 68
statement: return this.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.popFront()
particle-size: 68
particle-size: 68
statement: this.data = this.data[1..this.size()]
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.data = this.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 68
particle-size: 68
statement: r := this.front()
particle-size: 68
particle-size: 68
statement: return this.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.popFront()
particle-size: 68
particle-size: 68
statement: this.data = this.data[1..this.size()]
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.data = this.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 43
particle-size: 43
statement: r := this.front()
particle-size: 43
particle-size: 43
statement: return this.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this.popFront()
particle-size: 43
particle-size: 43
statement: this.data = this.data[1..this.size()]
particle-size: 43
particle-size: 43
statement: return this.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this.data = this.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 707
particle-size: 707
statement: return this.data.length
particle-size: 707
particle-size: 707
particle-size: 707
particle-size: 707
statement: this.__S1.__run()
particle-size: 75
particle-size: 75
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 75
particle-size: 75
statement: r := this.front()
particle-size: 75
particle-size: 75
statement: return this.data[0]
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this.popFront()
particle-size: 75
particle-size: 75
statement: this.data = this.data[1..this.size()]
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return r
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this.data = this.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 707
particle-size: 707
statement: return this.data.length
particle-size: 707
particle-size: 707
particle-size: 707
particle-size: 707
statement: this.__S2.__run()
particle-size: 74
particle-size: 74
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 104
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this.data = this.data[1..this.size()]
particle-size: 59
particle-size: 59
statement: return this.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 67
particle-size: 67
statement: r := this.front()
particle-size: 67
particle-size: 67
statement: return this.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.popFront()
particle-size: 67
particle-size: 67
statement: this.data = this.data[1..this.size()]
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.data = this.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 759
particle-size: 759
statement: return this.data.length
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
statement: this.__S3.__run()
particle-size: 78
particle-size: 78
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 78
particle-size: 78
statement: r := this.front()
particle-size: 78
particle-size: 78
statement: return this.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.popFront()
particle-size: 78
particle-size: 78
statement: this.data = this.data[1..this.size()]
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.data = this.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 1187
particle-size: 1187
particle-size: 1187
particle-size: 422
repetition: 13
statement: __d.__step()
particle-size: 422
particle-size: 422
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: (action,node) := this.scheduler()
particle-size: 422
particle-size: 422
statement: actions := ([]: (R × R)[])
particle-size: 422
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 349
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(1,i)]
particle-size: 107
loop-index: 1
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 49
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
loop-index: 2
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(1,i)]
particle-size: 197
loop-index: 3
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 99
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(1,i)]
particle-size: 77
loop-index: 4
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 99
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 5
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
statement: actions ~= [(1,i)]
particle-size: 76
statement: this.num_actions += 1
particle-size: 422
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 107
particle-size: 107
statement: r := this.front()
particle-size: 107
particle-size: 107
statement: return this.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.data = this.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 197
particle-size: 197
statement: r := this.front()
particle-size: 197
particle-size: 197
statement: return this.data[0]
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this.popFront()
particle-size: 197
particle-size: 197
statement: this.data = this.data[1..this.size()]
particle-size: 197
particle-size: 197
statement: return this.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return r
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.data = this.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: this.data = this.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this.front()
particle-size: 77
particle-size: 77
statement: return this.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.popFront()
particle-size: 77
particle-size: 77
statement: this.data = this.data[1..this.size()]
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.data = this.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this.front()
particle-size: 67
particle-size: 67
statement: return this.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.popFront()
particle-size: 67
particle-size: 67
statement: this.data = this.data[1..this.size()]
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.data = this.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this.front()
particle-size: 76
particle-size: 76
statement: return this.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this.popFront()
particle-size: 76
particle-size: 76
statement: this.data = this.data[1..this.size()]
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this.data = this.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: this.__H0.__run()
particle-size: 349
particle-size: 349
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 349
particle-size: 349
statement: this.id = 0
particle-size: 349
statement: return this
particle-size: 349
particle-size: 349
particle-size: 349
particle-size: 349
particle-size: 349
statement: this.data = [x] ~ this.data
particle-size: 349
statement: return ()
particle-size: 349
particle-size: 349
particle-size: 349
particle-size: 349
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: this.id = 0
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = [x] ~ this.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.pkt_count = this.pkt_count + 1
particle-size: 18
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 18
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.Q_in.popFront()
particle-size: 331
particle-size: 331
statement: this.data = this.data[1..this.size()]
particle-size: 331
particle-size: 331
statement: return this.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: this.Q_in.popFront()
particle-size: 331
particle-size: 331
statement: this.data = this.data[1..this.size()]
particle-size: 331
particle-size: 331
statement: return this.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 349
particle-size: 349
particle-size: 349
particle-size: 349
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: this.__H1.__run()
particle-size: 49
particle-size: 49
statement: this.num_arrived = this.num_arrived + 1
particle-size: 49
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: this.Q_in.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 770
particle-size: 770
statement: return this.data.length
particle-size: 770
particle-size: 770
particle-size: 770
particle-size: 770
statement: this.__S0.__run()
particle-size: 113
particle-size: 113
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 74
particle-size: 74
statement: r := this.front()
particle-size: 74
particle-size: 74
statement: return this.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.popFront()
particle-size: 74
particle-size: 74
statement: this.data = this.data[1..this.size()]
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 74
particle-size: 74
statement: r := this.front()
particle-size: 74
particle-size: 74
statement: return this.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.popFront()
particle-size: 74
particle-size: 74
statement: this.data = this.data[1..this.size()]
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 39
particle-size: 39
statement: r := this.front()
particle-size: 39
particle-size: 39
statement: return this.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this.popFront()
particle-size: 39
particle-size: 39
statement: this.data = this.data[1..this.size()]
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this.data = this.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 844
particle-size: 844
statement: return this.data.length
particle-size: 844
particle-size: 844
particle-size: 844
particle-size: 844
statement: this.__S1.__run()
particle-size: 99
particle-size: 99
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 99
particle-size: 99
statement: r := this.front()
particle-size: 99
particle-size: 99
statement: return this.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.popFront()
particle-size: 99
particle-size: 99
statement: this.data = this.data[1..this.size()]
particle-size: 99
particle-size: 99
statement: return this.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.data = this.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 844
particle-size: 844
statement: return this.data.length
particle-size: 844
particle-size: 844
particle-size: 844
particle-size: 844
statement: this.__S2.__run()
particle-size: 99
particle-size: 99
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 116
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 72
particle-size: 72
statement: this.data = this.data[1..this.size()]
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 85
particle-size: 85
statement: r := this.front()
particle-size: 85
particle-size: 85
statement: return this.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.popFront()
particle-size: 85
particle-size: 85
statement: this.data = this.data[1..this.size()]
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.data = this.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 902
particle-size: 902
statement: return this.data.length
particle-size: 902
particle-size: 902
particle-size: 902
particle-size: 902
statement: this.__S3.__run()
particle-size: 105
particle-size: 105
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 488
repetition: 14
statement: __d.__step()
particle-size: 488
particle-size: 488
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: (action,node) := this.scheduler()
particle-size: 488
particle-size: 488
statement: actions := ([]: (R × R)[])
particle-size: 488
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 394
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 95
loop-index: 1
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 76
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
loop-index: 2
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 214
loop-index: 3
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 117
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 99
loop-index: 4
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 116
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 5
particle-size: 488
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 488
particle-size: 488
statement: return this.data.length
particle-size: 488
particle-size: 488
particle-size: 488
statement: actions ~= [(1,i)]
particle-size: 100
statement: this.num_actions += 1
particle-size: 488
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1548
particle-size: 1548
particle-size: 1548
particle-size: 1548
particle-size: 1548
particle-size: 1548
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 95
particle-size: 95
statement: r := this.front()
particle-size: 95
particle-size: 95
statement: return this.data[0]
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: this.popFront()
particle-size: 95
particle-size: 95
statement: this.data = this.data[1..this.size()]
particle-size: 95
particle-size: 95
statement: return this.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return r
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: this.data = this.data ~ [x]
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 214
particle-size: 214
statement: r := this.front()
particle-size: 214
particle-size: 214
statement: return this.data[0]
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: this.popFront()
particle-size: 214
particle-size: 214
statement: this.data = this.data[1..this.size()]
particle-size: 214
particle-size: 214
statement: return this.data.length
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return ()
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return r
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this.data = this.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 99
particle-size: 99
statement: r := this.front()
particle-size: 99
particle-size: 99
statement: return this.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.popFront()
particle-size: 99
particle-size: 99
statement: this.data = this.data[1..this.size()]
particle-size: 99
particle-size: 99
statement: return this.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.data = this.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this.front()
particle-size: 82
particle-size: 82
statement: return this.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this.popFront()
particle-size: 82
particle-size: 82
statement: this.data = this.data[1..this.size()]
particle-size: 82
particle-size: 82
statement: return this.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 82
particle-size: 82
particle-size: 82
statement: this.data = this.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 590
particle-size: 590
statement: return this.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 958
particle-size: 958
statement: return this.data.length
particle-size: 958
particle-size: 958
particle-size: 958
particle-size: 958
statement: this.__H0.__run()
particle-size: 394
particle-size: 394
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 394
particle-size: 394
statement: this.id = 0
particle-size: 394
statement: return this
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: this.data = [x] ~ this.data
particle-size: 394
statement: return ()
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 15
particle-size: 15
statement: this.id = 0
particle-size: 15
statement: return this
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = [x] ~ this.data
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.pkt_count = this.pkt_count + 1
particle-size: 15
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 15
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.Q_in.popFront()
particle-size: 379
particle-size: 379
statement: this.data = this.data[1..this.size()]
particle-size: 379
particle-size: 379
statement: return this.data.length
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: return ()
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: this.Q_in.popFront()
particle-size: 379
particle-size: 379
statement: this.data = this.data[1..this.size()]
particle-size: 379
particle-size: 379
statement: return this.data.length
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: return ()
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: return ()
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 958
particle-size: 958
statement: return this.data.length
particle-size: 958
particle-size: 958
particle-size: 958
particle-size: 958
statement: this.__H1.__run()
particle-size: 76
particle-size: 76
statement: this.num_arrived = this.num_arrived + 1
particle-size: 76
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: this.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 891
particle-size: 891
statement: return this.data.length
particle-size: 891
particle-size: 891
particle-size: 891
particle-size: 891
statement: this.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 77
particle-size: 77
statement: r := this.front()
particle-size: 77
particle-size: 77
statement: return this.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.popFront()
particle-size: 77
particle-size: 77
statement: this.data = this.data[1..this.size()]
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.data = this.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 77
particle-size: 77
statement: r := this.front()
particle-size: 77
particle-size: 77
statement: return this.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.popFront()
particle-size: 77
particle-size: 77
statement: this.data = this.data[1..this.size()]
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.data = this.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 968
particle-size: 968
statement: return this.data.length
particle-size: 968
particle-size: 968
particle-size: 968
particle-size: 968
statement: this.__S1.__run()
particle-size: 117
particle-size: 117
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 117
particle-size: 117
statement: r := this.front()
particle-size: 117
particle-size: 117
statement: return this.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.popFront()
particle-size: 117
particle-size: 117
statement: this.data = this.data[1..this.size()]
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.data = this.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 968
particle-size: 968
statement: return this.data.length
particle-size: 968
particle-size: 968
particle-size: 968
particle-size: 968
statement: this.__S2.__run()
particle-size: 116
particle-size: 116
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 114
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 74
particle-size: 74
statement: this.data = this.data[1..this.size()]
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 99
particle-size: 99
statement: r := this.front()
particle-size: 99
particle-size: 99
statement: return this.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.popFront()
particle-size: 99
particle-size: 99
statement: this.data = this.data[1..this.size()]
particle-size: 99
particle-size: 99
statement: return this.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this.data = this.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1025
particle-size: 1025
statement: return this.data.length
particle-size: 1025
particle-size: 1025
particle-size: 1025
particle-size: 1025
statement: this.__S3.__run()
particle-size: 144
particle-size: 144
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 144
particle-size: 144
statement: r := this.front()
particle-size: 144
particle-size: 144
statement: return this.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this.popFront()
particle-size: 144
particle-size: 144
statement: this.data = this.data[1..this.size()]
particle-size: 144
particle-size: 144
statement: return this.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this.data = this.data ~ [x]
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 1615
particle-size: 1615
particle-size: 1615
particle-size: 529
repetition: 15
statement: __d.__step()
particle-size: 529
particle-size: 529
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: (action,node) := this.scheduler()
particle-size: 529
particle-size: 529
statement: actions := ([]: (R × R)[])
particle-size: 529
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 422
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 1
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
loop-index: 2
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 99
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(1,i)]
particle-size: 206
loop-index: 3
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 135
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(1,i)]
particle-size: 115
loop-index: 4
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 134
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(1,i)]
particle-size: 91
loop-index: 5
particle-size: 529
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(0,i)]
particle-size: 181
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 529
particle-size: 529
statement: return this.data.length
particle-size: 529
particle-size: 529
particle-size: 529
statement: actions ~= [(1,i)]
particle-size: 134
statement: this.num_actions += 1
particle-size: 529
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1699
particle-size: 1699
particle-size: 1699
particle-size: 1699
particle-size: 1699
particle-size: 1699
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this.front()
particle-size: 82
particle-size: 82
statement: return this.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this.popFront()
particle-size: 82
particle-size: 82
statement: this.data = this.data[1..this.size()]
particle-size: 82
particle-size: 82
statement: return this.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 82
particle-size: 82
particle-size: 82
statement: this.data = this.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 206
particle-size: 206
statement: r := this.front()
particle-size: 206
particle-size: 206
statement: return this.data[0]
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: this.popFront()
particle-size: 206
particle-size: 206
statement: this.data = this.data[1..this.size()]
particle-size: 206
particle-size: 206
statement: return this.data.length
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return r
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 102
particle-size: 102
particle-size: 102
statement: this.data = this.data ~ [x]
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.data = this.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 115
particle-size: 115
statement: r := this.front()
particle-size: 115
particle-size: 115
statement: return this.data[0]
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: this.popFront()
particle-size: 115
particle-size: 115
statement: this.data = this.data[1..this.size()]
particle-size: 115
particle-size: 115
statement: return this.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return r
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 115
particle-size: 115
particle-size: 115
statement: this.data = this.data ~ [x]
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 91
particle-size: 91
statement: r := this.front()
particle-size: 91
particle-size: 91
statement: return this.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.data = this.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 628
particle-size: 628
statement: return this.data.length
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 628
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this.front()
particle-size: 134
particle-size: 134
statement: return this.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.popFront()
particle-size: 134
particle-size: 134
statement: this.data = this.data[1..this.size()]
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.data = this.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1071
particle-size: 1071
statement: return this.data.length
particle-size: 1071
particle-size: 1071
particle-size: 1071
particle-size: 1071
statement: this.__H0.__run()
particle-size: 422
particle-size: 422
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 422
particle-size: 422
statement: this.id = 0
particle-size: 422
statement: return this
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: this.data = [x] ~ this.data
particle-size: 422
statement: return ()
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: this.id = 0
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = [x] ~ this.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.pkt_count = this.pkt_count + 1
particle-size: 7
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 7
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.Q_in.popFront()
particle-size: 415
particle-size: 415
statement: this.data = this.data[1..this.size()]
particle-size: 415
particle-size: 415
statement: return this.data.length
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: return ()
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: this.Q_in.popFront()
particle-size: 415
particle-size: 415
statement: this.data = this.data[1..this.size()]
particle-size: 415
particle-size: 415
statement: return this.data.length
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: return ()
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: return ()
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1071
particle-size: 1071
statement: return this.data.length
particle-size: 1071
particle-size: 1071
particle-size: 1071
particle-size: 1071
statement: this.__H1.__run()
particle-size: 100
particle-size: 100
statement: this.num_arrived = this.num_arrived + 1
particle-size: 100
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: this.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 988
particle-size: 988
statement: return this.data.length
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
statement: this.__S0.__run()
particle-size: 99
particle-size: 99
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 72
particle-size: 72
statement: r := this.front()
particle-size: 72
particle-size: 72
statement: return this.data[0]
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.popFront()
particle-size: 72
particle-size: 72
statement: this.data = this.data[1..this.size()]
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return r
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.data = this.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 72
particle-size: 72
statement: r := this.front()
particle-size: 72
particle-size: 72
statement: return this.data[0]
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.popFront()
particle-size: 72
particle-size: 72
statement: this.data = this.data[1..this.size()]
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return r
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.data = this.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 27
particle-size: 27
statement: r := this.front()
particle-size: 27
particle-size: 27
statement: return this.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.popFront()
particle-size: 27
particle-size: 27
statement: this.data = this.data[1..this.size()]
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.data = this.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1060
particle-size: 1060
statement: return this.data.length
particle-size: 1060
particle-size: 1060
particle-size: 1060
particle-size: 1060
statement: this.__S1.__run()
particle-size: 135
particle-size: 135
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 135
particle-size: 135
statement: r := this.front()
particle-size: 135
particle-size: 135
statement: return this.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this.popFront()
particle-size: 135
particle-size: 135
statement: this.data = this.data[1..this.size()]
particle-size: 135
particle-size: 135
statement: return this.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this.data = this.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1060
particle-size: 1060
statement: return this.data.length
particle-size: 1060
particle-size: 1060
particle-size: 1060
particle-size: 1060
statement: this.__S2.__run()
particle-size: 134
particle-size: 134
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 120
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 78
particle-size: 78
statement: this.data = this.data[1..this.size()]
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 116
particle-size: 116
statement: r := this.front()
particle-size: 116
particle-size: 116
statement: return this.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this.popFront()
particle-size: 116
particle-size: 116
statement: this.data = this.data[1..this.size()]
particle-size: 116
particle-size: 116
statement: return this.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this.data = this.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1120
particle-size: 1120
statement: return this.data.length
particle-size: 1120
particle-size: 1120
particle-size: 1120
particle-size: 1120
statement: this.__S3.__run()
particle-size: 181
particle-size: 181
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 181
particle-size: 181
statement: r := this.front()
particle-size: 181
particle-size: 181
statement: return this.data[0]
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this.popFront()
particle-size: 181
particle-size: 181
statement: this.data = this.data[1..this.size()]
particle-size: 181
particle-size: 181
statement: return this.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return r
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this.data = this.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 1748
particle-size: 1748
particle-size: 1748
particle-size: 568
repetition: 16
statement: __d.__step()
particle-size: 568
particle-size: 568
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: (action,node) := this.scheduler()
particle-size: 568
particle-size: 568
statement: actions := ([]: (R × R)[])
particle-size: 568
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 438
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 65
loop-index: 1
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 134
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
loop-index: 2
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 185
loop-index: 3
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 146
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 133
loop-index: 4
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 147
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 103
loop-index: 5
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 163
statement: this.num_actions += 1
particle-size: 568
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1806
particle-size: 1806
particle-size: 1806
particle-size: 1806
particle-size: 1806
particle-size: 1806
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 185
particle-size: 185
statement: r := this.front()
particle-size: 185
particle-size: 185
statement: return this.data[0]
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: this.popFront()
particle-size: 185
particle-size: 185
statement: this.data = this.data[1..this.size()]
particle-size: 185
particle-size: 185
statement: return this.data.length
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: return ()
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: return r
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 92
particle-size: 92
particle-size: 92
statement: this.data = this.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 93
particle-size: 93
particle-size: 93
statement: this.data = this.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 133
particle-size: 133
statement: r := this.front()
particle-size: 133
particle-size: 133
statement: return this.data[0]
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this.popFront()
particle-size: 133
particle-size: 133
statement: this.data = this.data[1..this.size()]
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return r
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 133
particle-size: 133
particle-size: 133
statement: this.data = this.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 103
particle-size: 103
statement: r := this.front()
particle-size: 103
particle-size: 103
statement: return this.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this.popFront()
particle-size: 103
particle-size: 103
statement: this.data = this.data[1..this.size()]
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 103
particle-size: 103
particle-size: 103
statement: this.data = this.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 649
particle-size: 649
statement: return this.data.length
particle-size: 649
particle-size: 649
particle-size: 649
particle-size: 649
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 163
particle-size: 163
statement: r := this.front()
particle-size: 163
particle-size: 163
statement: return this.data[0]
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this.popFront()
particle-size: 163
particle-size: 163
statement: this.data = this.data[1..this.size()]
particle-size: 163
particle-size: 163
statement: return this.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return r
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 163
particle-size: 163
particle-size: 163
statement: this.data = this.data ~ [x]
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1157
particle-size: 1157
statement: return this.data.length
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: this.__H0.__run()
particle-size: 438
particle-size: 438
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 438
particle-size: 438
statement: this.id = 0
particle-size: 438
statement: return this
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: this.data = [x] ~ this.data
particle-size: 438
statement: return ()
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = [x] ~ this.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.pkt_count = this.pkt_count + 1
particle-size: 6
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.Q_in.popFront()
particle-size: 432
particle-size: 432
statement: this.data = this.data[1..this.size()]
particle-size: 432
particle-size: 432
statement: return this.data.length
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: this.Q_in.popFront()
particle-size: 432
particle-size: 432
statement: this.data = this.data[1..this.size()]
particle-size: 432
particle-size: 432
statement: return this.data.length
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1157
particle-size: 1157
statement: return this.data.length
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: this.__H1.__run()
particle-size: 134
particle-size: 134
statement: this.num_arrived = this.num_arrived + 1
particle-size: 134
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: this.Q_in.popFront()
particle-size: 30
particle-size: 30
statement: this.data = this.data[1..this.size()]
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1053
particle-size: 1053
statement: return this.data.length
particle-size: 1053
particle-size: 1053
particle-size: 1053
particle-size: 1053
statement: this.__S0.__run()
particle-size: 82
particle-size: 82
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 62
particle-size: 62
statement: r := this.front()
particle-size: 62
particle-size: 62
statement: return this.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this.front()
particle-size: 62
particle-size: 62
statement: return this.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 20
particle-size: 20
statement: r := this.front()
particle-size: 20
particle-size: 20
statement: return this.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.popFront()
particle-size: 20
particle-size: 20
statement: this.data = this.data[1..this.size()]
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = this.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1115
particle-size: 1115
statement: return this.data.length
particle-size: 1115
particle-size: 1115
particle-size: 1115
particle-size: 1115
statement: this.__S1.__run()
particle-size: 146
particle-size: 146
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 146
particle-size: 146
statement: r := this.front()
particle-size: 146
particle-size: 146
statement: return this.data[0]
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: this.popFront()
particle-size: 146
particle-size: 146
statement: this.data = this.data[1..this.size()]
particle-size: 146
particle-size: 146
statement: return this.data.length
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return r
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: this.data = this.data ~ [x]
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1115
particle-size: 1115
statement: return this.data.length
particle-size: 1115
particle-size: 1115
particle-size: 1115
particle-size: 1115
statement: this.__S2.__run()
particle-size: 147
particle-size: 147
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 116
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 76
particle-size: 76
statement: this.data = this.data[1..this.size()]
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 129
particle-size: 129
statement: r := this.front()
particle-size: 129
particle-size: 129
statement: return this.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this.popFront()
particle-size: 129
particle-size: 129
statement: this.data = this.data[1..this.size()]
particle-size: 129
particle-size: 129
statement: return this.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this.data = this.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1173
particle-size: 1173
statement: return this.data.length
particle-size: 1173
particle-size: 1173
particle-size: 1173
particle-size: 1173
statement: this.__S3.__run()
particle-size: 210
particle-size: 210
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 210
particle-size: 210
statement: r := this.front()
particle-size: 210
particle-size: 210
statement: return this.data[0]
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: this.popFront()
particle-size: 210
particle-size: 210
statement: this.data = this.data[1..this.size()]
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return r
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: this.data = this.data ~ [x]
particle-size: 210
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return ()
particle-size: 1822
particle-size: 1822
particle-size: 1822
particle-size: 568
repetition: 17
statement: __d.__step()
particle-size: 568
particle-size: 568
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
particle-size: 568
statement: (action,node) := this.scheduler()
particle-size: 568
particle-size: 568
statement: actions := ([]: (R × R)[])
particle-size: 568
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 426
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 46
loop-index: 1
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 163
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
loop-index: 2
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 65
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 154
loop-index: 3
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 142
loop-index: 4
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 110
loop-index: 5
particle-size: 568
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(0,i)]
particle-size: 236
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 568
particle-size: 568
statement: return this.data.length
particle-size: 568
particle-size: 568
particle-size: 568
statement: actions ~= [(1,i)]
particle-size: 181
statement: this.num_actions += 1
particle-size: 568
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1797
particle-size: 1797
particle-size: 1797
particle-size: 1797
particle-size: 1797
particle-size: 1797
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 46
particle-size: 46
statement: r := this.front()
particle-size: 46
particle-size: 46
statement: return this.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this.popFront()
particle-size: 46
particle-size: 46
statement: this.data = this.data[1..this.size()]
particle-size: 46
particle-size: 46
statement: return this.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 46
particle-size: 46
particle-size: 46
statement: this.data = this.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 154
particle-size: 154
statement: r := this.front()
particle-size: 154
particle-size: 154
statement: return this.data[0]
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this.popFront()
particle-size: 154
particle-size: 154
statement: this.data = this.data[1..this.size()]
particle-size: 154
particle-size: 154
statement: return this.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return r
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.data = this.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this.data = this.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 142
particle-size: 142
statement: r := this.front()
particle-size: 142
particle-size: 142
statement: return this.data[0]
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: this.popFront()
particle-size: 142
particle-size: 142
statement: this.data = this.data[1..this.size()]
particle-size: 142
particle-size: 142
statement: return this.data.length
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: return r
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 142
particle-size: 142
particle-size: 142
statement: this.data = this.data ~ [x]
particle-size: 142
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 110
particle-size: 110
statement: r := this.front()
particle-size: 110
particle-size: 110
statement: return this.data[0]
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: this.popFront()
particle-size: 110
particle-size: 110
statement: this.data = this.data[1..this.size()]
particle-size: 110
particle-size: 110
statement: return this.data.length
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return ()
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return r
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 110
particle-size: 110
particle-size: 110
statement: this.data = this.data ~ [x]
particle-size: 110
statement: return ()
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 181
particle-size: 181
statement: r := this.front()
particle-size: 181
particle-size: 181
statement: return this.data[0]
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this.popFront()
particle-size: 181
particle-size: 181
statement: this.data = this.data[1..this.size()]
particle-size: 181
particle-size: 181
statement: return this.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return r
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: this.data = this.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1164
particle-size: 1164
statement: return this.data.length
particle-size: 1164
particle-size: 1164
particle-size: 1164
particle-size: 1164
statement: this.__H0.__run()
particle-size: 426
particle-size: 426
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 426
particle-size: 426
statement: this.id = 0
particle-size: 426
statement: return this
particle-size: 426
particle-size: 426
particle-size: 426
particle-size: 426
particle-size: 426
statement: this.data = [x] ~ this.data
particle-size: 426
statement: return ()
particle-size: 426
particle-size: 426
particle-size: 426
particle-size: 426
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 425
particle-size: 425
statement: this.data = this.data[1..this.size()]
particle-size: 425
particle-size: 425
statement: return this.data.length
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: return ()
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: this.Q_in.popFront()
particle-size: 425
particle-size: 425
statement: this.data = this.data[1..this.size()]
particle-size: 425
particle-size: 425
statement: return this.data.length
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: return ()
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: return ()
particle-size: 426
particle-size: 426
particle-size: 426
particle-size: 426
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1164
particle-size: 1164
statement: return this.data.length
particle-size: 1164
particle-size: 1164
particle-size: 1164
particle-size: 1164
statement: this.__H1.__run()
particle-size: 163
particle-size: 163
statement: this.num_arrived = this.num_arrived + 1
particle-size: 163
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 42
particle-size: 42
statement: this.data = this.data[1..this.size()]
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1043
particle-size: 1043
statement: return this.data.length
particle-size: 1043
particle-size: 1043
particle-size: 1043
particle-size: 1043
statement: this.__S0.__run()
particle-size: 65
particle-size: 65
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 49
particle-size: 49
statement: r := this.front()
particle-size: 49
particle-size: 49
statement: return this.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.popFront()
particle-size: 49
particle-size: 49
statement: this.data = this.data[1..this.size()]
particle-size: 49
particle-size: 49
statement: return this.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.data = this.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 49
particle-size: 49
statement: r := this.front()
particle-size: 49
particle-size: 49
statement: return this.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.popFront()
particle-size: 49
particle-size: 49
statement: this.data = this.data[1..this.size()]
particle-size: 49
particle-size: 49
statement: return this.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.data = this.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 16
particle-size: 16
statement: r := this.front()
particle-size: 16
particle-size: 16
statement: return this.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.popFront()
particle-size: 16
particle-size: 16
statement: this.data = this.data[1..this.size()]
particle-size: 16
particle-size: 16
statement: return this.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1092
particle-size: 1092
statement: return this.data.length
particle-size: 1092
particle-size: 1092
particle-size: 1092
particle-size: 1092
statement: this.__S1.__run()
particle-size: 136
particle-size: 136
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 136
particle-size: 136
statement: r := this.front()
particle-size: 136
particle-size: 136
statement: return this.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this.popFront()
particle-size: 136
particle-size: 136
statement: this.data = this.data[1..this.size()]
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this.data = this.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1092
particle-size: 1092
statement: return this.data.length
particle-size: 1092
particle-size: 1092
particle-size: 1092
particle-size: 1092
statement: this.__S2.__run()
particle-size: 138
particle-size: 138
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 104
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this.data = this.data[1..this.size()]
particle-size: 66
particle-size: 66
statement: return this.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 124
particle-size: 124
statement: r := this.front()
particle-size: 124
particle-size: 124
statement: return this.data[0]
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: this.popFront()
particle-size: 124
particle-size: 124
statement: this.data = this.data[1..this.size()]
particle-size: 124
particle-size: 124
statement: return this.data.length
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return r
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: this.data = this.data ~ [x]
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1144
particle-size: 1144
statement: return this.data.length
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
statement: this.__S3.__run()
particle-size: 236
particle-size: 236
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 236
particle-size: 236
statement: r := this.front()
particle-size: 236
particle-size: 236
statement: return this.data[0]
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this.popFront()
particle-size: 236
particle-size: 236
statement: this.data = this.data[1..this.size()]
particle-size: 236
particle-size: 236
statement: return this.data.length
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: return ()
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: return r
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this.data = this.data ~ [x]
particle-size: 236
statement: return ()
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: return ()
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: return ()
particle-size: 1777
particle-size: 1777
particle-size: 1777
particle-size: 552
repetition: 18
statement: __d.__step()
particle-size: 552
particle-size: 552
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: return this.data.length
particle-size: 552
particle-size: 552
particle-size: 552
particle-size: 552
statement: (action,node) := this.scheduler()
particle-size: 550
particle-size: 550
statement: actions := ([]: (R × R)[])
particle-size: 550
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 409
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(1,i)]
particle-size: 29
loop-index: 1
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 181
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
loop-index: 2
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 46
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(1,i)]
particle-size: 114
loop-index: 3
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 117
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(1,i)]
particle-size: 136
loop-index: 4
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 122
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(1,i)]
particle-size: 107
loop-index: 5
particle-size: 550
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(0,i)]
particle-size: 248
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
statement: actions ~= [(1,i)]
particle-size: 195
statement: this.num_actions += 1
particle-size: 550
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1704
particle-size: 1704
particle-size: 1704
particle-size: 1704
particle-size: 1704
particle-size: 1704
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 29
particle-size: 29
statement: r := this.front()
particle-size: 29
particle-size: 29
statement: return this.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this.popFront()
particle-size: 29
particle-size: 29
statement: this.data = this.data[1..this.size()]
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 29
particle-size: 29
particle-size: 29
statement: this.data = this.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this.front()
particle-size: 114
particle-size: 114
statement: return this.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this.popFront()
particle-size: 114
particle-size: 114
statement: this.data = this.data[1..this.size()]
particle-size: 114
particle-size: 114
statement: return this.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: this.data = this.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: this.data = this.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 136
particle-size: 136
statement: r := this.front()
particle-size: 136
particle-size: 136
statement: return this.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this.popFront()
particle-size: 136
particle-size: 136
statement: this.data = this.data[1..this.size()]
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 136
particle-size: 136
particle-size: 136
statement: this.data = this.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 107
particle-size: 107
statement: r := this.front()
particle-size: 107
particle-size: 107
statement: return this.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.data = this.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 195
particle-size: 195
statement: r := this.front()
particle-size: 195
particle-size: 195
statement: return this.data[0]
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: this.popFront()
particle-size: 195
particle-size: 195
statement: this.data = this.data[1..this.size()]
particle-size: 195
particle-size: 195
statement: return this.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: return ()
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: return r
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 195
particle-size: 195
particle-size: 195
statement: this.data = this.data ~ [x]
particle-size: 195
statement: return ()
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1123
particle-size: 1123
statement: return this.data.length
particle-size: 1123
particle-size: 1123
particle-size: 1123
particle-size: 1123
statement: this.__H0.__run()
particle-size: 409
particle-size: 409
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 409
particle-size: 409
statement: this.id = 0
particle-size: 409
statement: return this
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
statement: this.data = [x] ~ this.data
particle-size: 409
statement: return ()
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.data[0][0].id = this.pkt_count
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 408
particle-size: 408
statement: this.data = this.data[1..this.size()]
particle-size: 408
particle-size: 408
statement: return this.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: this.Q_in.popFront()
particle-size: 408
particle-size: 408
statement: this.data = this.data[1..this.size()]
particle-size: 408
particle-size: 408
statement: return this.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1123
particle-size: 1123
statement: return this.data.length
particle-size: 1123
particle-size: 1123
particle-size: 1123
particle-size: 1123
statement: this.__H1.__run()
particle-size: 181
particle-size: 181
statement: this.num_arrived = this.num_arrived + 1
particle-size: 181
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this.data = this.data[1..this.size()]
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 994
particle-size: 994
statement: return this.data.length
particle-size: 994
particle-size: 994
particle-size: 994
particle-size: 994
statement: this.__S0.__run()
particle-size: 46
particle-size: 46
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1028
particle-size: 1028
statement: return this.data.length
particle-size: 1028
particle-size: 1028
particle-size: 1028
particle-size: 1028
statement: this.__S1.__run()
particle-size: 117
particle-size: 117
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 117
particle-size: 117
statement: r := this.front()
particle-size: 117
particle-size: 117
statement: return this.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.popFront()
particle-size: 117
particle-size: 117
statement: this.data = this.data[1..this.size()]
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.data = this.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1028
particle-size: 1028
statement: return this.data.length
particle-size: 1028
particle-size: 1028
particle-size: 1028
particle-size: 1028
statement: this.__S2.__run()
particle-size: 122
particle-size: 122
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 86
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 53
particle-size: 53
statement: this.data = this.data[1..this.size()]
particle-size: 53
particle-size: 53
statement: return this.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 112
particle-size: 112
statement: r := this.front()
particle-size: 112
particle-size: 112
statement: return this.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.popFront()
particle-size: 112
particle-size: 112
statement: this.data = this.data[1..this.size()]
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1071
particle-size: 1071
statement: return this.data.length
particle-size: 1071
particle-size: 1071
particle-size: 1071
particle-size: 1071
statement: this.__S3.__run()
particle-size: 248
particle-size: 248
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 248
particle-size: 248
statement: r := this.front()
particle-size: 248
particle-size: 248
statement: return this.data[0]
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: this.popFront()
particle-size: 248
particle-size: 248
statement: this.data = this.data[1..this.size()]
particle-size: 248
particle-size: 248
statement: return this.data.length
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return r
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: this.data = this.data ~ [x]
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return ()
particle-size: 1654
particle-size: 1654
particle-size: 1654
particle-size: 519
repetition: 19
statement: __d.__step()
particle-size: 519
particle-size: 519
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: return this.data.length
particle-size: 519
particle-size: 519
particle-size: 519
particle-size: 519
statement: (action,node) := this.scheduler()
particle-size: 517
particle-size: 517
statement: actions := ([]: (R × R)[])
particle-size: 517
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 370
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(1,i)]
particle-size: 15
loop-index: 1
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 195
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
loop-index: 2
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 29
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(1,i)]
particle-size: 80
loop-index: 3
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 92
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(1,i)]
particle-size: 119
loop-index: 4
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(1,i)]
particle-size: 96
loop-index: 5
particle-size: 517
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(0,i)]
particle-size: 252
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 517
particle-size: 517
statement: return this.data.length
particle-size: 517
particle-size: 517
particle-size: 517
statement: actions ~= [(1,i)]
particle-size: 214
statement: this.num_actions += 1
particle-size: 517
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1560
particle-size: 1560
particle-size: 1560
particle-size: 1560
particle-size: 1560
particle-size: 1560
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 80
particle-size: 80
statement: r := this.front()
particle-size: 80
particle-size: 80
statement: return this.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.popFront()
particle-size: 80
particle-size: 80
statement: this.data = this.data[1..this.size()]
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.data = this.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.data = this.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 119
particle-size: 119
statement: r := this.front()
particle-size: 119
particle-size: 119
statement: return this.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this.popFront()
particle-size: 119
particle-size: 119
statement: this.data = this.data[1..this.size()]
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: this.data = this.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 96
particle-size: 96
statement: r := this.front()
particle-size: 96
particle-size: 96
statement: return this.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.popFront()
particle-size: 96
particle-size: 96
statement: this.data = this.data[1..this.size()]
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.data = this.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 214
particle-size: 214
statement: r := this.front()
particle-size: 214
particle-size: 214
statement: return this.data[0]
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: this.popFront()
particle-size: 214
particle-size: 214
statement: this.data = this.data[1..this.size()]
particle-size: 214
particle-size: 214
statement: return this.data.length
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return ()
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return r
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 214
particle-size: 214
particle-size: 214
statement: this.data = this.data ~ [x]
particle-size: 214
statement: return ()
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1036
particle-size: 1036
statement: return this.data.length
particle-size: 1036
particle-size: 1036
particle-size: 1036
particle-size: 1036
statement: this.__H0.__run()
particle-size: 370
particle-size: 370
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 370
particle-size: 370
statement: this.id = 0
particle-size: 370
statement: return this
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: this.data = [x] ~ this.data
particle-size: 370
statement: return ()
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 370
particle-size: 370
statement: this.data = this.data[1..this.size()]
particle-size: 370
particle-size: 370
statement: return this.data.length
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return ()
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: this.Q_in.popFront()
particle-size: 370
particle-size: 370
statement: this.data = this.data[1..this.size()]
particle-size: 370
particle-size: 370
statement: return this.data.length
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return ()
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return ()
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1036
particle-size: 1036
statement: return this.data.length
particle-size: 1036
particle-size: 1036
particle-size: 1036
particle-size: 1036
statement: this.__H1.__run()
particle-size: 195
particle-size: 195
statement: this.num_arrived = this.num_arrived + 1
particle-size: 195
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 57
particle-size: 57
statement: this.data = this.data[1..this.size()]
particle-size: 57
particle-size: 57
statement: return this.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 898
particle-size: 898
statement: return this.data.length
particle-size: 898
particle-size: 898
particle-size: 898
particle-size: 898
statement: this.__S0.__run()
particle-size: 29
particle-size: 29
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 21
particle-size: 21
statement: r := this.front()
particle-size: 21
particle-size: 21
statement: return this.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.popFront()
particle-size: 21
particle-size: 21
statement: this.data = this.data[1..this.size()]
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.data = this.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 21
particle-size: 21
statement: r := this.front()
particle-size: 21
particle-size: 21
statement: return this.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.popFront()
particle-size: 21
particle-size: 21
statement: this.data = this.data[1..this.size()]
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.data = this.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: this.__S1.__run()
particle-size: 92
particle-size: 92
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 92
particle-size: 92
statement: r := this.front()
particle-size: 92
particle-size: 92
statement: return this.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this.popFront()
particle-size: 92
particle-size: 92
statement: this.data = this.data[1..this.size()]
particle-size: 92
particle-size: 92
statement: return this.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this.data = this.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: this.__S2.__run()
particle-size: 98
particle-size: 98
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 66
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 40
particle-size: 40
statement: this.data = this.data[1..this.size()]
particle-size: 40
particle-size: 40
statement: return this.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 91
particle-size: 91
statement: r := this.front()
particle-size: 91
particle-size: 91
statement: return this.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.data = this.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 952
particle-size: 952
statement: return this.data.length
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: this.__S3.__run()
particle-size: 252
particle-size: 252
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 252
particle-size: 252
statement: r := this.front()
particle-size: 252
particle-size: 252
statement: return this.data[0]
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: this.popFront()
particle-size: 252
particle-size: 252
statement: this.data = this.data[1..this.size()]
particle-size: 252
particle-size: 252
statement: return this.data.length
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: return ()
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: return r
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: this.data = this.data ~ [x]
particle-size: 252
statement: return ()
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: return ()
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 252
statement: return ()
particle-size: 1478
particle-size: 1478
particle-size: 1478
particle-size: 464
repetition: 20
statement: __d.__step()
particle-size: 464
particle-size: 464
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: return this.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (action,node) := this.scheduler()
particle-size: 462
particle-size: 462
statement: actions := ([]: (R × R)[])
particle-size: 462
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 327
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 1
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 214
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
loop-index: 2
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 3
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(1,i)]
particle-size: 94
loop-index: 4
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 69
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(1,i)]
particle-size: 78
loop-index: 5
particle-size: 462
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(0,i)]
particle-size: 237
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 462
particle-size: 462
statement: return this.data.length
particle-size: 462
particle-size: 462
particle-size: 462
statement: actions ~= [(1,i)]
particle-size: 200
statement: this.num_actions += 1
particle-size: 462
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1355
particle-size: 1355
particle-size: 1355
particle-size: 1355
particle-size: 1355
particle-size: 1355
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this.front()
particle-size: 50
particle-size: 50
statement: return this.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this.popFront()
particle-size: 50
particle-size: 50
statement: this.data = this.data[1..this.size()]
particle-size: 50
particle-size: 50
statement: return this.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = this.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = this.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 94
particle-size: 94
statement: r := this.front()
particle-size: 94
particle-size: 94
statement: return this.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.popFront()
particle-size: 94
particle-size: 94
statement: this.data = this.data[1..this.size()]
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 78
particle-size: 78
statement: r := this.front()
particle-size: 78
particle-size: 78
statement: return this.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.popFront()
particle-size: 78
particle-size: 78
statement: this.data = this.data[1..this.size()]
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.data = this.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 200
particle-size: 200
statement: r := this.front()
particle-size: 200
particle-size: 200
statement: return this.data[0]
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: this.popFront()
particle-size: 200
particle-size: 200
statement: this.data = this.data[1..this.size()]
particle-size: 200
particle-size: 200
statement: return this.data.length
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: return ()
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: return r
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 200
particle-size: 200
particle-size: 200
statement: this.data = this.data ~ [x]
particle-size: 200
statement: return ()
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 925
particle-size: 925
statement: return this.data.length
particle-size: 925
particle-size: 925
particle-size: 925
particle-size: 925
statement: this.__H0.__run()
particle-size: 327
particle-size: 327
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 327
particle-size: 327
statement: this.id = 0
particle-size: 327
statement: return this
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: this.data = [x] ~ this.data
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 327
particle-size: 327
statement: this.data = this.data[1..this.size()]
particle-size: 327
particle-size: 327
statement: return this.data.length
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: this.Q_in.popFront()
particle-size: 327
particle-size: 327
statement: this.data = this.data[1..this.size()]
particle-size: 327
particle-size: 327
statement: return this.data.length
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 925
particle-size: 925
statement: return this.data.length
particle-size: 925
particle-size: 925
particle-size: 925
particle-size: 925
statement: this.__H1.__run()
particle-size: 214
particle-size: 214
statement: this.num_arrived = this.num_arrived + 1
particle-size: 214
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 67
particle-size: 67
statement: this.data = this.data[1..this.size()]
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 778
particle-size: 778
statement: return this.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: this.__S0.__run()
particle-size: 15
particle-size: 15
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 11
particle-size: 11
statement: r := this.front()
particle-size: 11
particle-size: 11
statement: return this.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.data = this.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 11
particle-size: 11
statement: r := this.front()
particle-size: 11
particle-size: 11
statement: return this.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.data = this.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 789
particle-size: 789
statement: return this.data.length
particle-size: 789
particle-size: 789
particle-size: 789
particle-size: 789
statement: this.__S1.__run()
particle-size: 63
particle-size: 63
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 63
particle-size: 63
statement: r := this.front()
particle-size: 63
particle-size: 63
statement: return this.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this.popFront()
particle-size: 63
particle-size: 63
statement: this.data = this.data[1..this.size()]
particle-size: 63
particle-size: 63
statement: return this.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this.data = this.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 789
particle-size: 789
statement: return this.data.length
particle-size: 789
particle-size: 789
particle-size: 789
particle-size: 789
statement: this.__S2.__run()
particle-size: 69
particle-size: 69
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 46
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 27
particle-size: 27
statement: this.data = this.data[1..this.size()]
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 812
particle-size: 812
statement: return this.data.length
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
statement: this.__S3.__run()
particle-size: 237
particle-size: 237
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 237
particle-size: 237
statement: r := this.front()
particle-size: 237
particle-size: 237
statement: return this.data[0]
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: this.popFront()
particle-size: 237
particle-size: 237
statement: this.data = this.data[1..this.size()]
particle-size: 237
particle-size: 237
statement: return this.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return r
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: this.data = this.data ~ [x]
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 1244
particle-size: 1244
particle-size: 1244
particle-size: 389
repetition: 21
statement: __d.__step()
particle-size: 389
particle-size: 389
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: return this.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: (action,node) := this.scheduler()
particle-size: 387
particle-size: 387
statement: actions := ([]: (R × R)[])
particle-size: 387
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 261
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 200
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
loop-index: 2
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 3
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(1,i)]
particle-size: 65
loop-index: 4
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(1,i)]
particle-size: 55
loop-index: 5
particle-size: 387
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(0,i)]
particle-size: 204
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 387
particle-size: 387
statement: return this.data.length
particle-size: 387
particle-size: 387
particle-size: 387
statement: actions ~= [(1,i)]
particle-size: 170
statement: this.num_actions += 1
particle-size: 387
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1077
particle-size: 1077
particle-size: 1077
particle-size: 1077
particle-size: 1077
particle-size: 1077
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this.data = this.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this.data = this.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 55
particle-size: 55
statement: r := this.front()
particle-size: 55
particle-size: 55
statement: return this.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.popFront()
particle-size: 55
particle-size: 55
statement: this.data = this.data[1..this.size()]
particle-size: 55
particle-size: 55
statement: return this.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 55
particle-size: 55
particle-size: 55
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 318
particle-size: 318
statement: return this.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 170
particle-size: 170
statement: r := this.front()
particle-size: 170
particle-size: 170
statement: return this.data[0]
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: this.popFront()
particle-size: 170
particle-size: 170
statement: this.data = this.data[1..this.size()]
particle-size: 170
particle-size: 170
statement: return this.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: return r
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 170
particle-size: 170
particle-size: 170
statement: this.data = this.data ~ [x]
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 759
particle-size: 759
statement: return this.data.length
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
statement: this.__H0.__run()
particle-size: 261
particle-size: 261
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 261
particle-size: 261
statement: this.id = 0
particle-size: 261
statement: return this
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: this.data = [x] ~ this.data
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 261
particle-size: 261
statement: this.data = this.data[1..this.size()]
particle-size: 261
particle-size: 261
statement: return this.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: this.Q_in.popFront()
particle-size: 261
particle-size: 261
statement: this.data = this.data[1..this.size()]
particle-size: 261
particle-size: 261
statement: return this.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 759
particle-size: 759
statement: return this.data.length
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
statement: this.__H1.__run()
particle-size: 200
particle-size: 200
statement: this.num_arrived = this.num_arrived + 1
particle-size: 200
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 64
particle-size: 64
statement: this.data = this.data[1..this.size()]
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 623
particle-size: 623
statement: return this.data.length
particle-size: 623
particle-size: 623
particle-size: 623
particle-size: 623
statement: this.__S0.__run()
particle-size: 8
particle-size: 8
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 629
particle-size: 629
statement: return this.data.length
particle-size: 629
particle-size: 629
particle-size: 629
particle-size: 629
statement: this.__S1.__run()
particle-size: 41
particle-size: 41
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 41
particle-size: 41
statement: r := this.front()
particle-size: 41
particle-size: 41
statement: return this.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.popFront()
particle-size: 41
particle-size: 41
statement: this.data = this.data[1..this.size()]
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.data = this.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 629
particle-size: 629
statement: return this.data.length
particle-size: 629
particle-size: 629
particle-size: 629
particle-size: 629
statement: this.__S2.__run()
particle-size: 45
particle-size: 45
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 32
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 44
particle-size: 44
statement: r := this.front()
particle-size: 44
particle-size: 44
statement: return this.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.data = this.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 645
particle-size: 645
statement: return this.data.length
particle-size: 645
particle-size: 645
particle-size: 645
particle-size: 645
statement: this.__S3.__run()
particle-size: 204
particle-size: 204
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 204
particle-size: 204
statement: r := this.front()
particle-size: 204
particle-size: 204
statement: return this.data[0]
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: this.popFront()
particle-size: 204
particle-size: 204
statement: this.data = this.data[1..this.size()]
particle-size: 204
particle-size: 204
statement: return this.data.length
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return ()
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return r
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: this.data = this.data ~ [x]
particle-size: 204
statement: return ()
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return ()
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return ()
particle-size: 965
particle-size: 965
particle-size: 965
particle-size: 303
repetition: 22
statement: __d.__step()
particle-size: 303
particle-size: 303
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: (action,node) := this.scheduler()
particle-size: 300
particle-size: 300
statement: actions := ([]: (R × R)[])
particle-size: 300
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 192
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 178
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
loop-index: 2
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 3
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(1,i)]
particle-size: 41
loop-index: 4
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 24
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(1,i)]
particle-size: 36
loop-index: 5
particle-size: 300
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(0,i)]
particle-size: 156
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 300
particle-size: 300
statement: return this.data.length
particle-size: 300
particle-size: 300
particle-size: 300
statement: actions ~= [(1,i)]
particle-size: 146
statement: this.num_actions += 1
particle-size: 300
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 41
particle-size: 41
statement: r := this.front()
particle-size: 41
particle-size: 41
statement: return this.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.popFront()
particle-size: 41
particle-size: 41
statement: this.data = this.data[1..this.size()]
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.data = this.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 36
particle-size: 36
statement: r := this.front()
particle-size: 36
particle-size: 36
statement: return this.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this.popFront()
particle-size: 36
particle-size: 36
statement: this.data = this.data[1..this.size()]
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 36
particle-size: 36
particle-size: 36
statement: this.data = this.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 238
particle-size: 238
statement: return this.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 146
particle-size: 146
statement: r := this.front()
particle-size: 146
particle-size: 146
statement: return this.data[0]
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: this.popFront()
particle-size: 146
particle-size: 146
statement: this.data = this.data[1..this.size()]
particle-size: 146
particle-size: 146
statement: return this.data.length
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return r
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 146
particle-size: 146
particle-size: 146
statement: this.data = this.data ~ [x]
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 574
particle-size: 574
statement: return this.data.length
particle-size: 574
particle-size: 574
particle-size: 574
particle-size: 574
statement: this.__H0.__run()
particle-size: 192
particle-size: 192
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 192
particle-size: 192
statement: this.id = 0
particle-size: 192
statement: return this
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this.data = [x] ~ this.data
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this.data = this.data[1..this.size()]
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this.data = this.data[1..this.size()]
particle-size: 192
particle-size: 192
statement: return this.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 574
particle-size: 574
statement: return this.data.length
particle-size: 574
particle-size: 574
particle-size: 574
particle-size: 574
statement: this.__H1.__run()
particle-size: 178
particle-size: 178
statement: this.num_arrived = this.num_arrived + 1
particle-size: 178
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 58
particle-size: 58
statement: this.data = this.data[1..this.size()]
particle-size: 58
particle-size: 58
statement: return this.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 454
particle-size: 454
statement: return this.data.length
particle-size: 454
particle-size: 454
particle-size: 454
particle-size: 454
statement: this.__S0.__run()
particle-size: 2
particle-size: 2
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 456
particle-size: 456
statement: return this.data.length
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: this.__S1.__run()
particle-size: 22
particle-size: 22
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 456
particle-size: 456
statement: return this.data.length
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: this.__S2.__run()
particle-size: 24
particle-size: 24
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 18
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: this.__S3.__run()
particle-size: 156
particle-size: 156
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 156
particle-size: 156
statement: r := this.front()
particle-size: 156
particle-size: 156
statement: return this.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.popFront()
particle-size: 156
particle-size: 156
statement: this.data = this.data[1..this.size()]
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.data = this.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 213
repetition: 23
statement: __d.__step()
particle-size: 213
particle-size: 213
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: (action,node) := this.scheduler()
particle-size: 210
particle-size: 210
statement: actions := ([]: (R × R)[])
particle-size: 210
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 118
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
loop-index: 1
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 146
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
loop-index: 2
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 4
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(1,i)]
particle-size: 20
loop-index: 5
particle-size: 210
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 210
particle-size: 210
statement: return this.data.length
particle-size: 210
particle-size: 210
particle-size: 210
statement: actions ~= [(1,i)]
particle-size: 91
statement: this.num_actions += 1
particle-size: 210
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this.front()
particle-size: 20
particle-size: 20
statement: return this.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.popFront()
particle-size: 20
particle-size: 20
statement: this.data = this.data[1..this.size()]
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = this.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 91
particle-size: 91
statement: r := this.front()
particle-size: 91
particle-size: 91
statement: return this.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.data = this.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 390
particle-size: 390
statement: return this.data.length
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: this.__H0.__run()
particle-size: 118
particle-size: 118
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 118
particle-size: 118
statement: this.id = 0
particle-size: 118
statement: return this
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this.data = [x] ~ this.data
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 118
particle-size: 118
statement: this.data = this.data[1..this.size()]
particle-size: 118
particle-size: 118
statement: return this.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this.Q_in.popFront()
particle-size: 118
particle-size: 118
statement: this.data = this.data[1..this.size()]
particle-size: 118
particle-size: 118
statement: return this.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 390
particle-size: 390
statement: return this.data.length
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: this.__H1.__run()
particle-size: 146
particle-size: 146
statement: this.num_arrived = this.num_arrived + 1
particle-size: 146
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 292
particle-size: 292
statement: return this.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.strategy == 4 {
    this.strategy = uniformInt(1,2);
    if this.strategy == 2 {
        this.strategy = this.strategy + flip(1 / 2);
    }
}
statement: if this.strategy == 1 {
    if flip(1 / 2) {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],this.strategy));
}
statement: if flip(1 / 2) {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 293
particle-size: 293
statement: return this.data.length
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this.__S1.__run()
particle-size: 12
particle-size: 12
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 293
particle-size: 293
statement: return this.data.length
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this.__S2.__run()
particle-size: 13
particle-size: 13
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 10
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 13
particle-size: 13
statement: r := this.front()
particle-size: 13
particle-size: 13
statement: return this.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this.popFront()
particle-size: 13
particle-size: 13
statement: this.data = this.data[1..this.size()]
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this.data = this.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 298
particle-size: 298
statement: return this.data.length
particle-size: 298
particle-size: 298
particle-size: 298
particle-size: 298
statement: this.__S3.__run()
particle-size: 100
particle-size: 100
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 133
repetition: 24
statement: __d.__step()
particle-size: 133
particle-size: 133
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: (action,node) := this.scheduler()
particle-size: 130
particle-size: 130
statement: actions := ([]: (R × R)[])
particle-size: 130
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(0,i)]
particle-size: 70
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
loop-index: 1
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(0,i)]
particle-size: 89
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
loop-index: 2
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 3
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 4
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(1,i)]
particle-size: 11
loop-index: 5
particle-size: 130
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(0,i)]
particle-size: 48
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 130
particle-size: 130
statement: return this.data.length
particle-size: 130
particle-size: 130
particle-size: 130
statement: actions ~= [(1,i)]
particle-size: 60
statement: this.num_actions += 1
particle-size: 130
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 298
particle-size: 298
particle-size: 298
particle-size: 298
particle-size: 298
particle-size: 298
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: this.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 11
particle-size: 11
statement: r := this.front()
particle-size: 11
particle-size: 11
statement: return this.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.data = this.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 60
particle-size: 60
statement: r := this.front()
particle-size: 60
particle-size: 60
statement: return this.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this.popFront()
particle-size: 60
particle-size: 60
statement: this.data = this.data[1..this.size()]
particle-size: 60
particle-size: 60
statement: return this.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 60
particle-size: 60
particle-size: 60
statement: this.data = this.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this.__H0.__run()
particle-size: 70
particle-size: 70
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 70
particle-size: 70
statement: this.id = 0
particle-size: 70
statement: return this
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this.data = [x] ~ this.data
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 70
particle-size: 70
statement: this.data = this.data[1..this.size()]
particle-size: 70
particle-size: 70
statement: return this.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this.Q_in.popFront()
particle-size: 70
particle-size: 70
statement: this.data = this.data[1..this.size()]
particle-size: 70
particle-size: 70
statement: return this.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 213
particle-size: 213
statement: return this.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this.__H1.__run()
particle-size: 89
particle-size: 89
statement: this.num_arrived = this.num_arrived + 1
particle-size: 89
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 28
particle-size: 28
statement: this.data = this.data[1..this.size()]
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.__S1.__run()
particle-size: 3
particle-size: 3
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.__S2.__run()
particle-size: 3
particle-size: 3
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: this.failing = flip(1 / 1000)
particle-size: 2
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 153
particle-size: 153
statement: return this.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this.__S3.__run()
particle-size: 48
particle-size: 48
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 78
repetition: 25
statement: __d.__step()
particle-size: 78
particle-size: 78
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: (action,node) := this.scheduler()
particle-size: 75
particle-size: 75
statement: actions := ([]: (R × R)[])
particle-size: 75
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 35
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 1
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 60
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 2
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 3
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 4
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 5
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 23
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 35
statement: this.num_actions += 1
particle-size: 75
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 35
particle-size: 35
statement: r := this.front()
particle-size: 35
particle-size: 35
statement: return this.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.popFront()
particle-size: 35
particle-size: 35
statement: this.data = this.data[1..this.size()]
particle-size: 35
particle-size: 35
statement: return this.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this.__H0.__run()
particle-size: 35
particle-size: 35
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 35
particle-size: 35
statement: this.id = 0
particle-size: 35
statement: return this
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.data = [x] ~ this.data
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 35
particle-size: 35
statement: this.data = this.data[1..this.size()]
particle-size: 35
particle-size: 35
statement: return this.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.Q_in.popFront()
particle-size: 35
particle-size: 35
statement: this.data = this.data[1..this.size()]
particle-size: 35
particle-size: 35
statement: return this.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this.__H1.__run()
particle-size: 60
particle-size: 60
statement: this.num_arrived = this.num_arrived + 1
particle-size: 60
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: this.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 79
particle-size: 79
statement: return this.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 79
particle-size: 79
statement: return this.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this.__S1.__run()
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 79
particle-size: 79
statement: return this.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this.failing == 2 {
    this.failing = flip(1 / 1000);
}
statement: if this.failing == 1 {
    this.Q_in.popFront();
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 79
particle-size: 79
statement: return this.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this.__S3.__run()
particle-size: 23
particle-size: 23
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 23
particle-size: 23
statement: r := this.front()
particle-size: 23
particle-size: 23
statement: return this.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.popFront()
particle-size: 23
particle-size: 23
statement: this.data = this.data[1..this.size()]
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 39
repetition: 26
statement: __d.__step()
particle-size: 39
particle-size: 39
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return this.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: (action,node) := this.scheduler()
particle-size: 36
particle-size: 36
statement: actions := ([]: (R × R)[])
particle-size: 36
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
loop-index: 1
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
loop-index: 2
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
loop-index: 3
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 36
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
statement: actions ~= [(1,i)]
particle-size: 15
statement: this.num_actions += 1
particle-size: 36
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this.__H0.__run()
particle-size: 18
particle-size: 18
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: this.id = 0
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = [x] ~ this.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.Q_in.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this.__H1.__run()
particle-size: 27
particle-size: 27
statement: this.num_arrived = this.num_arrived + 1
particle-size: 27
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 3)
statement: this.Q_in.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.__S3.__run()
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 22
repetition: 27
statement: __d.__step()
particle-size: 22
particle-size: 22
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: (action,node) := this.scheduler()
particle-size: 19
particle-size: 19
statement: actions := ([]: (R × R)[])
particle-size: 19
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
loop-index: 1
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
loop-index: 2
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
loop-index: 3
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
loop-index: 4
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
loop-index: 5
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
statement: actions ~= [(1,i)]
particle-size: 3
statement: this.num_actions += 1
particle-size: 19
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.__H0.__run()
particle-size: 7
particle-size: 7
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: this.id = 0
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = [x] ~ this.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.__H1.__run()
particle-size: 15
particle-size: 15
statement: this.num_arrived = this.num_arrived + 1
particle-size: 15
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 2)
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 3)
statement: this.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.__S3.__run()
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 10
repetition: 28
statement: __d.__step()
particle-size: 10
particle-size: 10
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: (action,node) := this.scheduler()
particle-size: 7
particle-size: 7
statement: actions := ([]: (R × R)[])
particle-size: 7
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
loop-index: 1
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
loop-index: 2
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
loop-index: 3
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
loop-index: 4
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
loop-index: 5
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
statement: actions ~= [(1,i)]
particle-size: 1
statement: this.num_actions += 1
particle-size: 7
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.__H0.__run()
particle-size: 2
particle-size: 2
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.__H1.__run()
particle-size: 5
particle-size: 5
statement: this.num_arrived = this.num_arrived + 1
particle-size: 5
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 1)
statement: if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 3)
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 5
repetition: 29
statement: __d.__step()
particle-size: 5
particle-size: 5
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (action,node) := this.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_in.data[0][0].id = this.pkt_count;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.__H1.__run()
particle-size: 1
particle-size: 1
statement: this.num_arrived = this.num_arrived + 1
particle-size: 1
statement: if this.num_arrived == 1 {
    observe(this.Q_in.data[0][0].id == 2);
} else if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: if this.num_arrived == 2 {
    observe(this.Q_in.data[0][0].id == 1);
} else if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: if this.num_arrived == 3 {
    observe(this.Q_in.data[0][0].id == 3);
}
statement: observe(this.Q_in.data[0][0].id == 3)
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 4
repetition: 30
statement: __d.__step()
particle-size: 4
particle-size: 4
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: q₁ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 4
statement: q₂ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 4
statement: q₃ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 4
statement: q₄ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 4
statement: q₅ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 4
statement: q₆ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 4
statement: q₇ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 4
statement: q₈ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 4
statement: q₉ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 4
statement: q₁₀ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 4
statement: return (q₁,q₂,q₃,q₄,q₅,q₆,q₇,q₈,q₉,q₁₀)
particle-size: 4
p[r_] := δ_r[(1/53747712000*2261377877,1/53747712000*2261377877,0,0,1/53747712000*2261377877,0,0,0,0,0)]

real	12m1.389s
user	11m55.464s
sys	0m5.792s
