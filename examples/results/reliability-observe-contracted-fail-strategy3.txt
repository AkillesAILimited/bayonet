statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_arrived = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.strategy = 4
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.failing = 2
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 2
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 6
repetition: 3
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.num_actions += 1
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__H0.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 12
repetition: 4
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 12
particle-size: 12
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__H0.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 26
repetition: 5
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this'.scheduler()
particle-size: 26
particle-size: 26
statement: actions := ([]: (R × R)[])
particle-size: 26
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
loop-index: 2
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.num_actions += 1
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 26
particle-size: 26
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__H0.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.id = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 14
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__S0.__run()
particle-size: 7
particle-size: 7
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 5
particle-size: 5
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 10
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 45
repetition: 6
statement: __d.__step()
particle-size: 45
particle-size: 45
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 45
particle-size: 45
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.__H0.__run()
particle-size: 44
particle-size: 44
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 44
particle-size: 44
statement: this.id = 0
particle-size: 44
statement: return this
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = [x] ~ this'.data
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.__S0.__run()
particle-size: 12
particle-size: 12
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 8
particle-size: 8
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 16
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 74
repetition: 7
statement: __d.__step()
particle-size: 74
particle-size: 74
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: (action,node) := this'.scheduler()
particle-size: 74
particle-size: 74
statement: actions := ([]: (R × R)[])
particle-size: 74
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 72
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 49
loop-index: 1
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
loop-index: 2
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 3
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 74
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 74
particle-size: 74
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.__H0.__run()
particle-size: 72
particle-size: 72
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 72
particle-size: 72
statement: this.id = 0
particle-size: 72
statement: return this
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = [x] ~ this'.data
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.__S0.__run()
particle-size: 26
particle-size: 26
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 15
particle-size: 15
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.__S1.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.__S2.__run()
particle-size: 9
particle-size: 9
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 9
particle-size: 9
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 113
repetition: 8
statement: __d.__step()
particle-size: 113
particle-size: 113
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: (action,node) := this'.scheduler()
particle-size: 113
particle-size: 113
statement: actions := ([]: (R × R)[])
particle-size: 113
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 1
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
loop-index: 2
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 47
loop-index: 3
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 4
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 5
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 113
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 113
particle-size: 113
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.__H0.__run()
particle-size: 104
particle-size: 104
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 104
particle-size: 104
statement: this.id = 0
particle-size: 104
statement: return this
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = [x] ~ this'.data
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 27
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 27
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 4
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this'.__S0.__run()
particle-size: 42
particle-size: 42
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 23
particle-size: 23
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 219
particle-size: 219
statement: return this'.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this'.__S1.__run()
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 219
particle-size: 219
statement: return this'.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this'.__S2.__run()
particle-size: 17
particle-size: 17
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 17
particle-size: 17
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 34
particle-size: 34
particle-size: 34
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 236
particle-size: 236
statement: return this'.data.length
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this'.__S3.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 158
repetition: 9
statement: __d.__step()
particle-size: 158
particle-size: 158
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: (action,node) := this'.scheduler()
particle-size: 158
particle-size: 158
statement: actions := ([]: (R × R)[])
particle-size: 158
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 145
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 85
loop-index: 1
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
loop-index: 2
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 61
loop-index: 3
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
statement: actions ~= [(1,i)]
particle-size: 12
statement: this'.num_actions += 1
particle-size: 158
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 158
particle-size: 158
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
particle-size: 474
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 85
particle-size: 85
statement: r := this'.front()
particle-size: 85
particle-size: 85
statement: return this'.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.popFront()
particle-size: 85
particle-size: 85
statement: this'.data = this'.data[1..this'.size()]
particle-size: 85
particle-size: 85
statement: return this'.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.data = this'.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 282
particle-size: 282
statement: return this'.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this'.__H0.__run()
particle-size: 145
particle-size: 145
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 145
particle-size: 145
statement: this.id = 0
particle-size: 145
statement: return this
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = [x] ~ this'.data
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 26
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 282
particle-size: 282
statement: return this'.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 4
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 278
particle-size: 278
statement: return this'.data.length
particle-size: 278
particle-size: 278
particle-size: 278
particle-size: 278
statement: this'.__S0.__run()
particle-size: 63
particle-size: 63
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 34
particle-size: 34
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 68
particle-size: 68
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 314
particle-size: 314
statement: return this'.data.length
particle-size: 314
particle-size: 314
particle-size: 314
particle-size: 314
statement: this'.__S1.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 314
particle-size: 314
statement: return this'.data.length
particle-size: 314
particle-size: 314
particle-size: 314
particle-size: 314
statement: this'.__S2.__run()
particle-size: 26
particle-size: 26
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 22
particle-size: 22
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 336
particle-size: 336
statement: return this'.data.length
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: this'.__S3.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 220
repetition: 10
statement: __d.__step()
particle-size: 220
particle-size: 220
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: (action,node) := this'.scheduler()
particle-size: 220
particle-size: 220
statement: actions := ([]: (R × R)[])
particle-size: 220
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 190
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 99
loop-index: 1
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
loop-index: 2
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 85
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 92
loop-index: 3
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
statement: actions ~= [(1,i)]
particle-size: 18
statement: this'.num_actions += 1
particle-size: 220
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 220
particle-size: 220
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
particle-size: 660
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 99
particle-size: 99
statement: r := this'.front()
particle-size: 99
particle-size: 99
statement: return this'.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.popFront()
particle-size: 99
particle-size: 99
statement: this'.data = this'.data[1..this'.size()]
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.data = this'.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 92
particle-size: 92
statement: r := this'.front()
particle-size: 92
particle-size: 92
statement: return this'.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 401
particle-size: 401
statement: return this'.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this'.__H0.__run()
particle-size: 190
particle-size: 190
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 190
particle-size: 190
statement: this.id = 0
particle-size: 190
statement: return this
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = [x] ~ this'.data
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: this.id = 0
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = [x] ~ this'.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 28
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 401
particle-size: 401
statement: return this'.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this'.__H1.__run()
particle-size: 12
particle-size: 12
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 12
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 389
particle-size: 389
statement: return this'.data.length
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: this'.__S0.__run()
particle-size: 85
particle-size: 85
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 47
particle-size: 47
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 94
particle-size: 94
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 436
particle-size: 436
statement: return this'.data.length
particle-size: 436
particle-size: 436
particle-size: 436
particle-size: 436
statement: this'.__S1.__run()
particle-size: 40
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 436
particle-size: 436
statement: return this'.data.length
particle-size: 436
particle-size: 436
particle-size: 436
particle-size: 436
statement: this'.__S2.__run()
particle-size: 40
particle-size: 40
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 34
particle-size: 34
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 470
particle-size: 470
statement: return this'.data.length
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
statement: this'.__S3.__run()
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 280
repetition: 11
statement: __d.__step()
particle-size: 280
particle-size: 280
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: (action,node) := this'.scheduler()
particle-size: 280
particle-size: 280
statement: actions := ([]: (R × R)[])
particle-size: 280
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 246
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 1
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
loop-index: 2
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 99
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 130
loop-index: 3
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 4
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 5
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
statement: actions ~= [(1,i)]
particle-size: 34
statement: this'.num_actions += 1
particle-size: 280
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 280
particle-size: 280
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
particle-size: 870
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 130
particle-size: 130
statement: r := this'.front()
particle-size: 130
particle-size: 130
statement: return this'.data[0]
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: this'.popFront()
particle-size: 130
particle-size: 130
statement: this'.data = this'.data[1..this'.size()]
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return r
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 347
particle-size: 347
statement: return this'.data.length
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 523
particle-size: 523
statement: return this'.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: this'.__H0.__run()
particle-size: 246
particle-size: 246
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 246
particle-size: 246
statement: this.id = 0
particle-size: 246
statement: return this
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.data = [x] ~ this'.data
particle-size: 246
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 24
particle-size: 24
statement: this.id = 0
particle-size: 24
statement: return this
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = [x] ~ this'.data
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 24
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_in.popFront()
particle-size: 222
particle-size: 222
statement: this'.data = this'.data[1..this'.size()]
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: this'.Q_in.popFront()
particle-size: 222
particle-size: 222
statement: this'.data = this'.data[1..this'.size()]
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 523
particle-size: 523
statement: return this'.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: this'.__H1.__run()
particle-size: 18
particle-size: 18
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 18
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 505
particle-size: 505
statement: return this'.data.length
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
statement: this'.__S0.__run()
particle-size: 99
particle-size: 99
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 58
particle-size: 58
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 116
particle-size: 116
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 58
particle-size: 58
statement: r := this'.front()
particle-size: 58
particle-size: 58
statement: return this'.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.popFront()
particle-size: 58
particle-size: 58
statement: this'.data = this'.data[1..this'.size()]
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 58
particle-size: 58
statement: r := this'.front()
particle-size: 58
particle-size: 58
statement: return this'.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.popFront()
particle-size: 58
particle-size: 58
statement: this'.data = this'.data[1..this'.size()]
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 563
particle-size: 563
statement: return this'.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this'.__S1.__run()
particle-size: 55
particle-size: 55
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 563
particle-size: 563
statement: return this'.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this'.__S2.__run()
particle-size: 55
particle-size: 55
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 43
particle-size: 43
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 86
particle-size: 86
particle-size: 86
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: this'.__S3.__run()
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 953
particle-size: 953
particle-size: 953
particle-size: 354
repetition: 12
statement: __d.__step()
particle-size: 354
particle-size: 354
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: (action,node) := this'.scheduler()
particle-size: 354
particle-size: 354
statement: actions := ([]: (R × R)[])
particle-size: 354
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 299
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 109
loop-index: 1
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
loop-index: 2
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 165
loop-index: 3
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 55
loop-index: 4
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 5
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(0,i)]
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
statement: actions ~= [(1,i)]
particle-size: 49
statement: this'.num_actions += 1
particle-size: 354
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 354
particle-size: 354
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 1099
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 165
particle-size: 165
statement: r := this'.front()
particle-size: 165
particle-size: 165
statement: return this'.data[0]
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: this'.popFront()
particle-size: 165
particle-size: 165
statement: this'.data = this'.data[1..this'.size()]
particle-size: 165
particle-size: 165
statement: return this'.data.length
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return ()
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return r
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.data = this'.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 671
particle-size: 671
statement: return this'.data.length
particle-size: 671
particle-size: 671
particle-size: 671
particle-size: 671
statement: this'.__H0.__run()
particle-size: 299
particle-size: 299
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 299
particle-size: 299
statement: this.id = 0
particle-size: 299
statement: return this
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: this'.data = [x] ~ this'.data
particle-size: 299
statement: return ()
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 25
particle-size: 25
statement: this.id = 0
particle-size: 25
statement: return this
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = [x] ~ this'.data
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 25
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_in.popFront()
particle-size: 274
particle-size: 274
statement: this'.data = this'.data[1..this'.size()]
particle-size: 274
particle-size: 274
statement: return this'.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: this'.Q_in.popFront()
particle-size: 274
particle-size: 274
statement: this'.data = this'.data[1..this'.size()]
particle-size: 274
particle-size: 274
statement: return this'.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 671
particle-size: 671
statement: return this'.data.length
particle-size: 671
particle-size: 671
particle-size: 671
particle-size: 671
statement: this'.__H1.__run()
particle-size: 34
particle-size: 34
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 34
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 637
particle-size: 637
statement: return this'.data.length
particle-size: 637
particle-size: 637
particle-size: 637
particle-size: 637
statement: this'.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 68
particle-size: 68
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 136
particle-size: 136
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 68
particle-size: 68
statement: r := this'.front()
particle-size: 68
particle-size: 68
statement: return this'.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.popFront()
particle-size: 68
particle-size: 68
statement: this'.data = this'.data[1..this'.size()]
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.data = this'.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 68
particle-size: 68
statement: r := this'.front()
particle-size: 68
particle-size: 68
statement: return this'.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.popFront()
particle-size: 68
particle-size: 68
statement: this'.data = this'.data[1..this'.size()]
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.data = this'.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = this'.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 705
particle-size: 705
statement: return this'.data.length
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: this'.__S1.__run()
particle-size: 75
particle-size: 75
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 75
particle-size: 75
statement: r := this'.front()
particle-size: 75
particle-size: 75
statement: return this'.data[0]
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.popFront()
particle-size: 75
particle-size: 75
statement: this'.data = this'.data[1..this'.size()]
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return r
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.data = this'.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 705
particle-size: 705
statement: return this'.data.length
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: this'.__S2.__run()
particle-size: 74
particle-size: 74
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 52
particle-size: 52
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 757
particle-size: 757
statement: return this'.data.length
particle-size: 757
particle-size: 757
particle-size: 757
particle-size: 757
statement: this'.__S3.__run()
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 1185
particle-size: 1185
particle-size: 1185
particle-size: 420
repetition: 13
statement: __d.__step()
particle-size: 420
particle-size: 420
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: (action,node) := this'.scheduler()
particle-size: 420
particle-size: 420
statement: actions := ([]: (R × R)[])
particle-size: 420
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 347
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(1,i)]
particle-size: 107
loop-index: 1
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 49
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
loop-index: 2
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(1,i)]
particle-size: 197
loop-index: 3
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 98
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(1,i)]
particle-size: 77
loop-index: 4
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 98
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 5
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
statement: actions ~= [(1,i)]
particle-size: 76
statement: this'.num_actions += 1
particle-size: 420
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 420
particle-size: 420
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 107
particle-size: 107
statement: r := this'.front()
particle-size: 107
particle-size: 107
statement: return this'.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.popFront()
particle-size: 107
particle-size: 107
statement: this'.data = this'.data[1..this'.size()]
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.data = this'.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 197
particle-size: 197
statement: r := this'.front()
particle-size: 197
particle-size: 197
statement: return this'.data[0]
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.popFront()
particle-size: 197
particle-size: 197
statement: this'.data = this'.data[1..this'.size()]
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return r
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.data = this'.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 524
particle-size: 524
statement: return this'.data.length
particle-size: 524
particle-size: 524
particle-size: 524
particle-size: 524
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this'.front()
particle-size: 76
particle-size: 76
statement: return this'.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__H0.__run()
particle-size: 347
particle-size: 347
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 347
particle-size: 347
statement: this.id = 0
particle-size: 347
statement: return this
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: this'.data = [x] ~ this'.data
particle-size: 347
statement: return ()
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 16
particle-size: 16
statement: this.id = 0
particle-size: 16
statement: return this
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = [x] ~ this'.data
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 16
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.Q_in.popFront()
particle-size: 331
particle-size: 331
statement: this'.data = this'.data[1..this'.size()]
particle-size: 331
particle-size: 331
statement: return this'.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: this'.Q_in.popFront()
particle-size: 331
particle-size: 331
statement: this'.data = this'.data[1..this'.size()]
particle-size: 331
particle-size: 331
statement: return this'.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: return ()
particle-size: 347
particle-size: 347
particle-size: 347
particle-size: 347
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 810
particle-size: 810
statement: return this'.data.length
particle-size: 810
particle-size: 810
particle-size: 810
particle-size: 810
statement: this'.__H1.__run()
particle-size: 49
particle-size: 49
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 49
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 761
particle-size: 761
statement: return this'.data.length
particle-size: 761
particle-size: 761
particle-size: 761
particle-size: 761
statement: this'.__S0.__run()
particle-size: 113
particle-size: 113
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 74
particle-size: 74
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 148
particle-size: 148
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.data = this'.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 835
particle-size: 835
statement: return this'.data.length
particle-size: 835
particle-size: 835
particle-size: 835
particle-size: 835
statement: this'.__S1.__run()
particle-size: 98
particle-size: 98
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.data = this'.data ~ [x]
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 835
particle-size: 835
statement: return this'.data.length
particle-size: 835
particle-size: 835
particle-size: 835
particle-size: 835
statement: this'.__S2.__run()
particle-size: 98
particle-size: 98
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 57
particle-size: 57
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 114
particle-size: 114
particle-size: 114
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 892
particle-size: 892
statement: return this'.data.length
particle-size: 892
particle-size: 892
particle-size: 892
particle-size: 892
statement: this'.__S3.__run()
particle-size: 105
particle-size: 105
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 483
repetition: 14
statement: __d.__step()
particle-size: 483
particle-size: 483
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: (action,node) := this'.scheduler()
particle-size: 483
particle-size: 483
statement: actions := ([]: (R × R)[])
particle-size: 483
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 389
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(1,i)]
particle-size: 93
loop-index: 1
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 76
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
loop-index: 2
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(1,i)]
particle-size: 214
loop-index: 3
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 116
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(1,i)]
particle-size: 98
loop-index: 4
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(1,i)]
particle-size: 81
loop-index: 5
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
statement: actions ~= [(1,i)]
particle-size: 100
statement: this'.num_actions += 1
particle-size: 483
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 483
particle-size: 483
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1537
particle-size: 1537
particle-size: 1537
particle-size: 1537
particle-size: 1537
particle-size: 1537
particle-size: 1537
particle-size: 1537
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.data = this'.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 214
particle-size: 214
statement: r := this'.front()
particle-size: 214
particle-size: 214
statement: return this'.data[0]
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: this'.popFront()
particle-size: 214
particle-size: 214
statement: this'.data = this'.data[1..this'.size()]
particle-size: 214
particle-size: 214
statement: return this'.data.length
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return ()
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: return r
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
particle-size: 214
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.data = this'.data ~ [x]
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 586
particle-size: 586
statement: return this'.data.length
particle-size: 586
particle-size: 586
particle-size: 586
particle-size: 586
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this'.front()
particle-size: 100
particle-size: 100
statement: return this'.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.data = this'.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 951
particle-size: 951
statement: return this'.data.length
particle-size: 951
particle-size: 951
particle-size: 951
particle-size: 951
statement: this'.__H0.__run()
particle-size: 389
particle-size: 389
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 389
particle-size: 389
statement: this.id = 0
particle-size: 389
statement: return this
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: this'.data = [x] ~ this'.data
particle-size: 389
statement: return ()
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 12
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 377
particle-size: 377
statement: this'.data = this'.data[1..this'.size()]
particle-size: 377
particle-size: 377
statement: return this'.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: return ()
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: this'.Q_in.popFront()
particle-size: 377
particle-size: 377
statement: this'.data = this'.data[1..this'.size()]
particle-size: 377
particle-size: 377
statement: return this'.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: return ()
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: return ()
particle-size: 389
particle-size: 389
particle-size: 389
particle-size: 389
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 951
particle-size: 951
statement: return this'.data.length
particle-size: 951
particle-size: 951
particle-size: 951
particle-size: 951
statement: this'.__H1.__run()
particle-size: 76
particle-size: 76
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 76
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 875
particle-size: 875
statement: return this'.data.length
particle-size: 875
particle-size: 875
particle-size: 875
particle-size: 875
statement: this'.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 77
particle-size: 77
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 154
particle-size: 154
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 952
particle-size: 952
statement: return this'.data.length
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: this'.__S1.__run()
particle-size: 116
particle-size: 116
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 952
particle-size: 952
statement: return this'.data.length
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: this'.__S2.__run()
particle-size: 115
particle-size: 115
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 56
particle-size: 56
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.data = this'.data ~ [x]
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1008
particle-size: 1008
statement: return this'.data.length
particle-size: 1008
particle-size: 1008
particle-size: 1008
particle-size: 1008
statement: this'.__S3.__run()
particle-size: 144
particle-size: 144
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.data = this'.data ~ [x]
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 1594
particle-size: 1594
particle-size: 1594
particle-size: 520
repetition: 15
statement: __d.__step()
particle-size: 520
particle-size: 520
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: (action,node) := this'.scheduler()
particle-size: 520
particle-size: 520
statement: actions := ([]: (R × R)[])
particle-size: 520
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 413
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(1,i)]
particle-size: 77
loop-index: 1
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
loop-index: 2
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 97
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(1,i)]
particle-size: 206
loop-index: 3
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 133
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(1,i)]
particle-size: 114
loop-index: 4
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 132
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(1,i)]
particle-size: 90
loop-index: 5
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(0,i)]
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 520
particle-size: 520
statement: return this'.data.length
particle-size: 520
particle-size: 520
particle-size: 520
statement: actions ~= [(1,i)]
particle-size: 134
statement: this'.num_actions += 1
particle-size: 520
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 520
particle-size: 520
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 206
particle-size: 206
statement: r := this'.front()
particle-size: 206
particle-size: 206
statement: return this'.data[0]
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: this'.popFront()
particle-size: 206
particle-size: 206
statement: this'.data = this'.data[1..this'.size()]
particle-size: 206
particle-size: 206
statement: return this'.data.length
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return r
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.data = this'.data ~ [x]
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 90
particle-size: 90
statement: r := this'.front()
particle-size: 90
particle-size: 90
statement: return this'.data[0]
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return r
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 621
particle-size: 621
statement: return this'.data.length
particle-size: 621
particle-size: 621
particle-size: 621
particle-size: 621
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this'.front()
particle-size: 134
particle-size: 134
statement: return this'.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.popFront()
particle-size: 134
particle-size: 134
statement: this'.data = this'.data[1..this'.size()]
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.data = this'.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1054
particle-size: 1054
statement: return this'.data.length
particle-size: 1054
particle-size: 1054
particle-size: 1054
particle-size: 1054
statement: this'.__H0.__run()
particle-size: 413
particle-size: 413
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 413
particle-size: 413
statement: this.id = 0
particle-size: 413
statement: return this
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: this'.data = [x] ~ this'.data
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 408
particle-size: 408
statement: this'.data = this'.data[1..this'.size()]
particle-size: 408
particle-size: 408
statement: return this'.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: this'.Q_in.popFront()
particle-size: 408
particle-size: 408
statement: this'.data = this'.data[1..this'.size()]
particle-size: 408
particle-size: 408
statement: return this'.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1054
particle-size: 1054
statement: return this'.data.length
particle-size: 1054
particle-size: 1054
particle-size: 1054
particle-size: 1054
statement: this'.__H1.__run()
particle-size: 100
particle-size: 100
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 100
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 954
particle-size: 954
statement: return this'.data.length
particle-size: 954
particle-size: 954
particle-size: 954
particle-size: 954
statement: this'.__S0.__run()
particle-size: 97
particle-size: 97
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 70
particle-size: 70
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 140
particle-size: 140
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 70
particle-size: 70
statement: r := this'.front()
particle-size: 70
particle-size: 70
statement: return this'.data[0]
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.popFront()
particle-size: 70
particle-size: 70
statement: this'.data = this'.data[1..this'.size()]
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return r
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 70
particle-size: 70
statement: r := this'.front()
particle-size: 70
particle-size: 70
statement: return this'.data[0]
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.popFront()
particle-size: 70
particle-size: 70
statement: this'.data = this'.data[1..this'.size()]
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return r
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1024
particle-size: 1024
statement: return this'.data.length
particle-size: 1024
particle-size: 1024
particle-size: 1024
particle-size: 1024
statement: this'.__S1.__run()
particle-size: 133
particle-size: 133
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 133
particle-size: 133
statement: r := this'.front()
particle-size: 133
particle-size: 133
statement: return this'.data[0]
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this'.popFront()
particle-size: 133
particle-size: 133
statement: this'.data = this'.data[1..this'.size()]
particle-size: 133
particle-size: 133
statement: return this'.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return r
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1024
particle-size: 1024
statement: return this'.data.length
particle-size: 1024
particle-size: 1024
particle-size: 1024
particle-size: 1024
statement: this'.__S2.__run()
particle-size: 132
particle-size: 132
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 58
particle-size: 58
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 116
particle-size: 116
particle-size: 116
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1082
particle-size: 1082
statement: return this'.data.length
particle-size: 1082
particle-size: 1082
particle-size: 1082
particle-size: 1082
statement: this'.__S3.__run()
particle-size: 179
particle-size: 179
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 179
particle-size: 179
statement: r := this'.front()
particle-size: 179
particle-size: 179
statement: return this'.data[0]
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.popFront()
particle-size: 179
particle-size: 179
statement: this'.data = this'.data[1..this'.size()]
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return r
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.data = this'.data ~ [x]
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return ()
particle-size: 1703
particle-size: 1703
particle-size: 1703
particle-size: 551
repetition: 16
statement: __d.__step()
particle-size: 551
particle-size: 551
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: (action,node) := this'.scheduler()
particle-size: 551
particle-size: 551
statement: actions := ([]: (R × R)[])
particle-size: 551
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 421
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(1,i)]
particle-size: 58
loop-index: 1
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 134
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
loop-index: 2
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 77
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(1,i)]
particle-size: 181
loop-index: 3
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 142
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(1,i)]
particle-size: 131
loop-index: 4
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 143
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(1,i)]
particle-size: 101
loop-index: 5
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(0,i)]
particle-size: 208
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 551
particle-size: 551
statement: return this'.data.length
particle-size: 551
particle-size: 551
particle-size: 551
statement: actions ~= [(1,i)]
particle-size: 162
statement: this'.num_actions += 1
particle-size: 551
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 551
particle-size: 551
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1758
particle-size: 1758
particle-size: 1758
particle-size: 1758
particle-size: 1758
particle-size: 1758
particle-size: 1758
particle-size: 1758
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 58
particle-size: 58
statement: r := this'.front()
particle-size: 58
particle-size: 58
statement: return this'.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.popFront()
particle-size: 58
particle-size: 58
statement: this'.data = this'.data[1..this'.size()]
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 181
particle-size: 181
statement: r := this'.front()
particle-size: 181
particle-size: 181
statement: return this'.data[0]
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.popFront()
particle-size: 181
particle-size: 181
statement: this'.data = this'.data[1..this'.size()]
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return r
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.data = this'.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 131
particle-size: 131
statement: r := this'.front()
particle-size: 131
particle-size: 131
statement: return this'.data[0]
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.popFront()
particle-size: 131
particle-size: 131
statement: this'.data = this'.data[1..this'.size()]
particle-size: 131
particle-size: 131
statement: return this'.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return r
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.data = this'.data ~ [x]
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 101
particle-size: 101
statement: r := this'.front()
particle-size: 101
particle-size: 101
statement: return this'.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.popFront()
particle-size: 101
particle-size: 101
statement: this'.data = this'.data[1..this'.size()]
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 633
particle-size: 633
statement: return this'.data.length
particle-size: 633
particle-size: 633
particle-size: 633
particle-size: 633
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = this'.data ~ [x]
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1125
particle-size: 1125
statement: return this'.data.length
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: this'.__H0.__run()
particle-size: 421
particle-size: 421
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 421
particle-size: 421
statement: this.id = 0
particle-size: 421
statement: return this
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: this'.data = [x] ~ this'.data
particle-size: 421
statement: return ()
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 416
particle-size: 416
statement: this'.data = this'.data[1..this'.size()]
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: return ()
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: this'.Q_in.popFront()
particle-size: 416
particle-size: 416
statement: this'.data = this'.data[1..this'.size()]
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: return ()
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: return ()
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1125
particle-size: 1125
statement: return this'.data.length
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: this'.__H1.__run()
particle-size: 134
particle-size: 134
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 134
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 991
particle-size: 991
statement: return this'.data.length
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
statement: this'.__S0.__run()
particle-size: 77
particle-size: 77
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 57
particle-size: 57
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1048
particle-size: 1048
statement: return this'.data.length
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
statement: this'.__S1.__run()
particle-size: 142
particle-size: 142
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 142
particle-size: 142
statement: r := this'.front()
particle-size: 142
particle-size: 142
statement: return this'.data[0]
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: this'.popFront()
particle-size: 142
particle-size: 142
statement: this'.data = this'.data[1..this'.size()]
particle-size: 142
particle-size: 142
statement: return this'.data.length
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: return r
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: this'.data = this'.data ~ [x]
particle-size: 142
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1048
particle-size: 1048
statement: return this'.data.length
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
statement: this'.__S2.__run()
particle-size: 143
particle-size: 143
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 54
particle-size: 54
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 108
particle-size: 108
particle-size: 108
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 72
particle-size: 72
statement: this'.data = this'.data[1..this'.size()]
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 125
particle-size: 125
statement: r := this'.front()
particle-size: 125
particle-size: 125
statement: return this'.data[0]
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.popFront()
particle-size: 125
particle-size: 125
statement: this'.data = this'.data[1..this'.size()]
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return r
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.data = this'.data ~ [x]
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1102
particle-size: 1102
statement: return this'.data.length
particle-size: 1102
particle-size: 1102
particle-size: 1102
particle-size: 1102
statement: this'.__S3.__run()
particle-size: 208
particle-size: 208
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 208
particle-size: 208
statement: r := this'.front()
particle-size: 208
particle-size: 208
statement: return this'.data[0]
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: this'.popFront()
particle-size: 208
particle-size: 208
statement: this'.data = this'.data[1..this'.size()]
particle-size: 208
particle-size: 208
statement: return this'.data.length
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return r
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: this'.data = this'.data ~ [x]
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 1735
particle-size: 1735
particle-size: 1735
particle-size: 538
repetition: 17
statement: __d.__step()
particle-size: 538
particle-size: 538
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: (action,node) := this'.scheduler()
particle-size: 538
particle-size: 538
statement: actions := ([]: (R × R)[])
particle-size: 538
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 398
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 1
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
loop-index: 2
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 58
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(1,i)]
particle-size: 144
loop-index: 3
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 129
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(1,i)]
particle-size: 138
loop-index: 4
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 131
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(1,i)]
particle-size: 106
loop-index: 5
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(0,i)]
particle-size: 232
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
statement: actions ~= [(1,i)]
particle-size: 180
statement: this'.num_actions += 1
particle-size: 538
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 538
particle-size: 538
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1716
particle-size: 1716
particle-size: 1716
particle-size: 1716
particle-size: 1716
particle-size: 1716
particle-size: 1716
particle-size: 1716
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = this'.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 138
particle-size: 138
statement: r := this'.front()
particle-size: 138
particle-size: 138
statement: return this'.data[0]
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.popFront()
particle-size: 138
particle-size: 138
statement: this'.data = this'.data[1..this'.size()]
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return r
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 138
particle-size: 138
particle-size: 138
statement: this'.data = this'.data ~ [x]
particle-size: 138
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 106
particle-size: 106
statement: r := this'.front()
particle-size: 106
particle-size: 106
statement: return this'.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.popFront()
particle-size: 106
particle-size: 106
statement: this'.data = this'.data[1..this'.size()]
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 180
particle-size: 180
statement: r := this'.front()
particle-size: 180
particle-size: 180
statement: return this'.data[0]
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.popFront()
particle-size: 180
particle-size: 180
statement: this'.data = this'.data[1..this'.size()]
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return r
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.data = this'.data ~ [x]
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1110
particle-size: 1110
statement: return this'.data.length
particle-size: 1110
particle-size: 1110
particle-size: 1110
particle-size: 1110
statement: this'.__H0.__run()
particle-size: 398
particle-size: 398
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 398
particle-size: 398
statement: this.id = 0
particle-size: 398
statement: return this
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: this'.data = [x] ~ this'.data
particle-size: 398
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 398
particle-size: 398
statement: this'.data = this'.data[1..this'.size()]
particle-size: 398
particle-size: 398
statement: return this'.data.length
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: this'.Q_in.popFront()
particle-size: 398
particle-size: 398
statement: this'.data = this'.data[1..this'.size()]
particle-size: 398
particle-size: 398
statement: return this'.data.length
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1110
particle-size: 1110
statement: return this'.data.length
particle-size: 1110
particle-size: 1110
particle-size: 1110
particle-size: 1110
statement: this'.__H1.__run()
particle-size: 162
particle-size: 162
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 162
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 948
particle-size: 948
statement: return this'.data.length
particle-size: 948
particle-size: 948
particle-size: 948
particle-size: 948
statement: this'.__S0.__run()
particle-size: 58
particle-size: 58
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 42
particle-size: 42
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 84
particle-size: 84
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 990
particle-size: 990
statement: return this'.data.length
particle-size: 990
particle-size: 990
particle-size: 990
particle-size: 990
statement: this'.__S1.__run()
particle-size: 129
particle-size: 129
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 129
particle-size: 129
statement: r := this'.front()
particle-size: 129
particle-size: 129
statement: return this'.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.popFront()
particle-size: 129
particle-size: 129
statement: this'.data = this'.data[1..this'.size()]
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 990
particle-size: 990
statement: return this'.data.length
particle-size: 990
particle-size: 990
particle-size: 990
particle-size: 990
statement: this'.__S2.__run()
particle-size: 131
particle-size: 131
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 46
particle-size: 46
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 92
particle-size: 92
particle-size: 92
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 117
particle-size: 117
statement: r := this'.front()
particle-size: 117
particle-size: 117
statement: return this'.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.popFront()
particle-size: 117
particle-size: 117
statement: this'.data = this'.data[1..this'.size()]
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.data = this'.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1036
particle-size: 1036
statement: return this'.data.length
particle-size: 1036
particle-size: 1036
particle-size: 1036
particle-size: 1036
statement: this'.__S3.__run()
particle-size: 232
particle-size: 232
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 232
particle-size: 232
statement: r := this'.front()
particle-size: 232
particle-size: 232
statement: return this'.data[0]
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: this'.popFront()
particle-size: 232
particle-size: 232
statement: this'.data = this'.data[1..this'.size()]
particle-size: 232
particle-size: 232
statement: return this'.data.length
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return ()
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return r
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: this'.data = this'.data ~ [x]
particle-size: 232
statement: return ()
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return ()
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return ()
particle-size: 1642
particle-size: 1642
particle-size: 1642
particle-size: 510
repetition: 18
statement: __d.__step()
particle-size: 510
particle-size: 510
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: (action,node) := this'.scheduler()
particle-size: 508
particle-size: 508
statement: actions := ([]: (R × R)[])
particle-size: 508
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 1
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 180
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
loop-index: 2
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(1,i)]
particle-size: 100
loop-index: 3
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(1,i)]
particle-size: 129
loop-index: 4
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 112
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(1,i)]
particle-size: 100
loop-index: 5
particle-size: 508
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(0,i)]
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
statement: actions ~= [(1,i)]
particle-size: 193
statement: this'.num_actions += 1
particle-size: 508
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 508
particle-size: 508
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1593
particle-size: 1593
particle-size: 1593
particle-size: 1593
particle-size: 1593
particle-size: 1593
particle-size: 1593
particle-size: 1593
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this'.front()
particle-size: 100
particle-size: 100
statement: return this'.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 129
particle-size: 129
statement: r := this'.front()
particle-size: 129
particle-size: 129
statement: return this'.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.popFront()
particle-size: 129
particle-size: 129
statement: this'.data = this'.data[1..this'.size()]
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this'.front()
particle-size: 100
particle-size: 100
statement: return this'.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.data = this'.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1049
particle-size: 1049
statement: return this'.data.length
particle-size: 1049
particle-size: 1049
particle-size: 1049
particle-size: 1049
statement: this'.__H0.__run()
particle-size: 372
particle-size: 372
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 372
particle-size: 372
statement: this.id = 0
particle-size: 372
statement: return this
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: this'.data = [x] ~ this'.data
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 372
particle-size: 372
statement: this'.data = this'.data[1..this'.size()]
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: this'.Q_in.popFront()
particle-size: 372
particle-size: 372
statement: this'.data = this'.data[1..this'.size()]
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1049
particle-size: 1049
statement: return this'.data.length
particle-size: 1049
particle-size: 1049
particle-size: 1049
particle-size: 1049
statement: this'.__H1.__run()
particle-size: 180
particle-size: 180
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 180
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 869
particle-size: 869
statement: return this'.data.length
particle-size: 869
particle-size: 869
particle-size: 869
particle-size: 869
statement: this'.__S0.__run()
particle-size: 38
particle-size: 38
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 26
particle-size: 26
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 52
particle-size: 52
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 895
particle-size: 895
statement: return this'.data.length
particle-size: 895
particle-size: 895
particle-size: 895
particle-size: 895
statement: this'.__S1.__run()
particle-size: 107
particle-size: 107
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 107
particle-size: 107
statement: r := this'.front()
particle-size: 107
particle-size: 107
statement: return this'.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.popFront()
particle-size: 107
particle-size: 107
statement: this'.data = this'.data[1..this'.size()]
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.data = this'.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 895
particle-size: 895
statement: return this'.data.length
particle-size: 895
particle-size: 895
particle-size: 895
particle-size: 895
statement: this'.__S2.__run()
particle-size: 112
particle-size: 112
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 37
particle-size: 37
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 74
particle-size: 74
particle-size: 74
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 932
particle-size: 932
statement: return this'.data.length
particle-size: 932
particle-size: 932
particle-size: 932
particle-size: 932
statement: this'.__S3.__run()
particle-size: 240
particle-size: 240
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 240
particle-size: 240
statement: r := this'.front()
particle-size: 240
particle-size: 240
statement: return this'.data[0]
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: this'.popFront()
particle-size: 240
particle-size: 240
statement: this'.data = this'.data[1..this'.size()]
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return ()
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return r
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: this'.data = this'.data ~ [x]
particle-size: 240
statement: return ()
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return ()
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return ()
particle-size: 1478
particle-size: 1478
particle-size: 1478
particle-size: 467
repetition: 19
statement: __d.__step()
particle-size: 467
particle-size: 467
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: (action,node) := this'.scheduler()
particle-size: 465
particle-size: 465
statement: actions := ([]: (R × R)[])
particle-size: 465
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 327
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 193
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
loop-index: 2
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(1,i)]
particle-size: 64
loop-index: 3
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 80
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(1,i)]
particle-size: 109
loop-index: 4
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 86
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(1,i)]
particle-size: 87
loop-index: 5
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(0,i)]
particle-size: 238
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
statement: actions ~= [(1,i)]
particle-size: 210
statement: this'.num_actions += 1
particle-size: 465
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 465
particle-size: 465
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 1426
particle-size: 1426
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 480
particle-size: 480
statement: return this'.data.length
particle-size: 480
particle-size: 480
particle-size: 480
particle-size: 480
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 210
particle-size: 210
statement: r := this'.front()
particle-size: 210
particle-size: 210
statement: return this'.data[0]
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: this'.popFront()
particle-size: 210
particle-size: 210
statement: this'.data = this'.data[1..this'.size()]
particle-size: 210
particle-size: 210
statement: return this'.data.length
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return r
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 210
particle-size: 210
particle-size: 210
statement: this'.data = this'.data ~ [x]
particle-size: 210
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 946
particle-size: 946
statement: return this'.data.length
particle-size: 946
particle-size: 946
particle-size: 946
particle-size: 946
statement: this'.__H0.__run()
particle-size: 327
particle-size: 327
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 327
particle-size: 327
statement: this.id = 0
particle-size: 327
statement: return this
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: this'.data = [x] ~ this'.data
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 327
particle-size: 327
statement: this'.data = this'.data[1..this'.size()]
particle-size: 327
particle-size: 327
statement: return this'.data.length
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: this'.Q_in.popFront()
particle-size: 327
particle-size: 327
statement: this'.data = this'.data[1..this'.size()]
particle-size: 327
particle-size: 327
statement: return this'.data.length
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: return ()
particle-size: 327
particle-size: 327
particle-size: 327
particle-size: 327
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 946
particle-size: 946
statement: return this'.data.length
particle-size: 946
particle-size: 946
particle-size: 946
particle-size: 946
statement: this'.__H1.__run()
particle-size: 193
particle-size: 193
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 193
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: this'.__S0.__run()
particle-size: 22
particle-size: 22
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 14
particle-size: 14
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 28
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 767
particle-size: 767
statement: return this'.data.length
particle-size: 767
particle-size: 767
particle-size: 767
particle-size: 767
statement: this'.__S1.__run()
particle-size: 80
particle-size: 80
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 767
particle-size: 767
statement: return this'.data.length
particle-size: 767
particle-size: 767
particle-size: 767
particle-size: 767
statement: this'.__S2.__run()
particle-size: 86
particle-size: 86
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 27
particle-size: 27
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 794
particle-size: 794
statement: return this'.data.length
particle-size: 794
particle-size: 794
particle-size: 794
particle-size: 794
statement: this'.__S3.__run()
particle-size: 238
particle-size: 238
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 238
particle-size: 238
statement: r := this'.front()
particle-size: 238
particle-size: 238
statement: return this'.data[0]
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.popFront()
particle-size: 238
particle-size: 238
statement: this'.data = this'.data[1..this'.size()]
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return r
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.data = this'.data ~ [x]
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 1276
particle-size: 1276
particle-size: 1276
particle-size: 407
repetition: 20
statement: __d.__step()
particle-size: 407
particle-size: 407
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: (action,node) := this'.scheduler()
particle-size: 405
particle-size: 405
statement: actions := ([]: (R × R)[])
particle-size: 405
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 283
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 1
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 210
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
loop-index: 2
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(1,i)]
particle-size: 36
loop-index: 3
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 4
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 5
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(0,i)]
particle-size: 218
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
statement: actions ~= [(1,i)]
particle-size: 192
statement: this'.num_actions += 1
particle-size: 405
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 405
particle-size: 405
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1211
particle-size: 1211
particle-size: 1211
particle-size: 1211
particle-size: 1211
particle-size: 1211
particle-size: 1211
particle-size: 1211
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = this'.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 192
particle-size: 192
statement: r := this'.front()
particle-size: 192
particle-size: 192
statement: return this'.data[0]
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this'.popFront()
particle-size: 192
particle-size: 192
statement: this'.data = this'.data[1..this'.size()]
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return r
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 192
particle-size: 192
particle-size: 192
statement: this'.data = this'.data ~ [x]
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 829
particle-size: 829
statement: return this'.data.length
particle-size: 829
particle-size: 829
particle-size: 829
particle-size: 829
statement: this'.__H0.__run()
particle-size: 283
particle-size: 283
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 283
particle-size: 283
statement: this.id = 0
particle-size: 283
statement: return this
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: this'.data = [x] ~ this'.data
particle-size: 283
statement: return ()
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 283
particle-size: 283
statement: this'.data = this'.data[1..this'.size()]
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: return ()
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: this'.Q_in.popFront()
particle-size: 283
particle-size: 283
statement: this'.data = this'.data[1..this'.size()]
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: return ()
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: return ()
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 829
particle-size: 829
statement: return this'.data.length
particle-size: 829
particle-size: 829
particle-size: 829
particle-size: 829
statement: this'.__H1.__run()
particle-size: 210
particle-size: 210
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 210
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: this'.__S0.__run()
particle-size: 10
particle-size: 10
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 625
particle-size: 625
statement: return this'.data.length
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: this'.__S1.__run()
particle-size: 51
particle-size: 51
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 625
particle-size: 625
statement: return this'.data.length
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: this'.__S2.__run()
particle-size: 57
particle-size: 57
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 18
particle-size: 18
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 36
particle-size: 36
particle-size: 36
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 643
particle-size: 643
statement: return this'.data.length
particle-size: 643
particle-size: 643
particle-size: 643
particle-size: 643
statement: this'.__S3.__run()
particle-size: 218
particle-size: 218
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 218
particle-size: 218
statement: r := this'.front()
particle-size: 218
particle-size: 218
statement: return this'.data[0]
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: this'.popFront()
particle-size: 218
particle-size: 218
statement: this'.data = this'.data[1..this'.size()]
particle-size: 218
particle-size: 218
statement: return this'.data.length
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: return ()
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: return r
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: this'.data = this'.data ~ [x]
particle-size: 218
statement: return ()
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: return ()
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: return ()
particle-size: 1027
particle-size: 1027
particle-size: 1027
particle-size: 322
repetition: 21
statement: __d.__step()
particle-size: 322
particle-size: 322
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: (action,node) := this'.scheduler()
particle-size: 320
particle-size: 320
statement: actions := ([]: (R × R)[])
particle-size: 320
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 208
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
loop-index: 1
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 192
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
loop-index: 2
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 3
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 30
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(1,i)]
particle-size: 53
loop-index: 4
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(1,i)]
particle-size: 44
loop-index: 5
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(0,i)]
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
statement: actions ~= [(1,i)]
particle-size: 158
statement: this'.num_actions += 1
particle-size: 320
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 320
particle-size: 320
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 915
particle-size: 915
particle-size: 915
particle-size: 915
particle-size: 915
particle-size: 915
particle-size: 915
particle-size: 915
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 158
particle-size: 158
statement: r := this'.front()
particle-size: 158
particle-size: 158
statement: return this'.data[0]
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.popFront()
particle-size: 158
particle-size: 158
statement: this'.data = this'.data[1..this'.size()]
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return r
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.data = this'.data ~ [x]
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 644
particle-size: 644
statement: return this'.data.length
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: this'.__H0.__run()
particle-size: 208
particle-size: 208
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 208
particle-size: 208
statement: this.id = 0
particle-size: 208
statement: return this
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: this'.data = [x] ~ this'.data
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 208
particle-size: 208
statement: this'.data = this'.data[1..this'.size()]
particle-size: 208
particle-size: 208
statement: return this'.data.length
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: this'.Q_in.popFront()
particle-size: 208
particle-size: 208
statement: this'.data = this'.data[1..this'.size()]
particle-size: 208
particle-size: 208
statement: return this'.data.length
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 644
particle-size: 644
statement: return this'.data.length
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: this'.__H1.__run()
particle-size: 192
particle-size: 192
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 192
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: this'.__S0.__run()
particle-size: 5
particle-size: 5
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
particle-size: 455
statement: this'.__S1.__run()
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
particle-size: 455
statement: this'.__S2.__run()
particle-size: 34
particle-size: 34
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 12
particle-size: 12
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: this'.__S3.__run()
particle-size: 175
particle-size: 175
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 175
particle-size: 175
statement: r := this'.front()
particle-size: 175
particle-size: 175
statement: return this'.data[0]
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: this'.popFront()
particle-size: 175
particle-size: 175
statement: this'.data = this'.data[1..this'.size()]
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return ()
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return r
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: this'.data = this'.data ~ [x]
particle-size: 175
statement: return ()
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return ()
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return ()
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 239
repetition: 22
statement: __d.__step()
particle-size: 239
particle-size: 239
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: (action,node) := this'.scheduler()
particle-size: 237
particle-size: 237
statement: actions := ([]: (R × R)[])
particle-size: 237
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
loop-index: 1
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 166
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
loop-index: 2
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 3
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 4
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 5
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 127
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 131
statement: this'.num_actions += 1
particle-size: 237
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 237
particle-size: 237
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 131
particle-size: 131
statement: r := this'.front()
particle-size: 131
particle-size: 131
statement: return this'.data[0]
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.popFront()
particle-size: 131
particle-size: 131
statement: this'.data = this'.data[1..this'.size()]
particle-size: 131
particle-size: 131
statement: return this'.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return r
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.data = this'.data ~ [x]
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: this'.__H0.__run()
particle-size: 144
particle-size: 144
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 144
particle-size: 144
statement: this.id = 0
particle-size: 144
statement: return this
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.data = [x] ~ this'.data
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.Q_in.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 467
particle-size: 467
statement: return this'.data.length
particle-size: 467
particle-size: 467
particle-size: 467
particle-size: 467
statement: this'.__H1.__run()
particle-size: 166
particle-size: 166
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 166
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 301
particle-size: 301
statement: return this'.data.length
particle-size: 301
particle-size: 301
particle-size: 301
particle-size: 301
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 301
particle-size: 301
statement: return this'.data.length
particle-size: 301
particle-size: 301
particle-size: 301
particle-size: 301
statement: this'.__S1.__run()
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 301
particle-size: 301
statement: return this'.data.length
particle-size: 301
particle-size: 301
particle-size: 301
particle-size: 301
statement: this'.__S2.__run()
particle-size: 16
particle-size: 16
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 307
particle-size: 307
statement: return this'.data.length
particle-size: 307
particle-size: 307
particle-size: 307
particle-size: 307
statement: this'.__S3.__run()
particle-size: 127
particle-size: 127
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 127
particle-size: 127
statement: r := this'.front()
particle-size: 127
particle-size: 127
statement: return this'.data[0]
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.popFront()
particle-size: 127
particle-size: 127
statement: this'.data = this'.data[1..this'.size()]
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return r
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 504
particle-size: 504
particle-size: 504
particle-size: 154
repetition: 23
statement: __d.__step()
particle-size: 154
particle-size: 154
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: (action,node) := this'.scheduler()
particle-size: 152
particle-size: 152
statement: actions := ([]: (R × R)[])
particle-size: 152
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
loop-index: 1
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 131
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
loop-index: 2
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
loop-index: 3
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 4
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 5
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 73
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 74
statement: this'.num_actions += 1
particle-size: 152
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 152
particle-size: 152
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 293
particle-size: 293
statement: return this'.data.length
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this'.__H0.__run()
particle-size: 74
particle-size: 74
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 74
particle-size: 74
statement: this.id = 0
particle-size: 74
statement: return this
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = [x] ~ this'.data
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.Q_in.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 293
particle-size: 293
statement: return this'.data.length
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this'.__H1.__run()
particle-size: 131
particle-size: 131
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 131
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.__S1.__run()
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.__S2.__run()
particle-size: 8
particle-size: 8
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 165
particle-size: 165
statement: return this'.data.length
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: this'.__S3.__run()
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 84
repetition: 24
statement: __d.__step()
particle-size: 84
particle-size: 84
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: (action,node) := this'.scheduler()
particle-size: 82
particle-size: 82
statement: actions := ([]: (R × R)[])
particle-size: 82
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 1
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 2
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 3
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 45
statement: this'.num_actions += 1
particle-size: 82
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 82
particle-size: 82
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__H0.__run()
particle-size: 45
particle-size: 45
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: this.id = 0
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_in.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__H1.__run()
particle-size: 74
particle-size: 74
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 74
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__S3.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 47
repetition: 25
statement: __d.__step()
particle-size: 47
particle-size: 47
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 24
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 45
particle-size: 45
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.__H0.__run()
particle-size: 16
particle-size: 16
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 16
particle-size: 16
statement: this.id = 0
particle-size: 16
statement: return this
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = [x] ~ this'.data
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.Q_in.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.__H1.__run()
particle-size: 45
particle-size: 45
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 45
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.__S3.__run()
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 18
repetition: 26
statement: __d.__step()
particle-size: 18
particle-size: 18
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (action,node) := this'.scheduler()
particle-size: 16
particle-size: 16
statement: actions := ([]: (R × R)[])
particle-size: 16
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 1
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 2
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 3
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 4
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 5
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(1,i)]
particle-size: 8
statement: this'.num_actions += 1
particle-size: 16
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 16
particle-size: 16
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.__H0.__run()
particle-size: 8
particle-size: 8
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: this.id = 0
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.__H1.__run()
particle-size: 16
particle-size: 16
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 16
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 10
repetition: 27
statement: __d.__step()
particle-size: 10
particle-size: 10
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: actions := ([]: (R × R)[])
particle-size: 8
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 1
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 3
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 5
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.num_actions += 1
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 8
particle-size: 8
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.__H1.__run()
particle-size: 8
particle-size: 8
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 8
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 28
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 29
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 30
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: q₁ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 2
statement: q₂ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 2
statement: q₃ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 2
statement: q₄ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 2
statement: q₅ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 2
statement: q₆ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 2
statement: q₇ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 2
statement: q₈ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 2
statement: q₉ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 2
statement: q₁₀ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 2
statement: return (q₁,q₂,q₃,q₄,q₅,q₆,q₇,q₈,q₉,q₁₀)
particle-size: 2
E[q1_,q2_,q3_,q4_,q5_,q6_,q7_,q8_,q9_,q10_] = (1,1/5,0,4/5,0,1/5,0,0,0,0)

real	2m27.046s
user	2m25.524s
sys	0m1.416s
