statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_arrived = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.strategy = 4
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.failing = 2
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 2
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 6
repetition: 3
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.num_actions += 1
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__H0.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 12
repetition: 4
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__H0.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 6
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 6
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 4
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 26
repetition: 5
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this'.scheduler()
particle-size: 26
particle-size: 26
statement: actions := ([]: (R × R)[])
particle-size: 26
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
loop-index: 2
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.num_actions += 1
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__H0.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.id = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 14
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__S0.__run()
particle-size: 7
particle-size: 7
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 6
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 6
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 4
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 45
repetition: 6
statement: __d.__step()
particle-size: 45
particle-size: 45
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.__H0.__run()
particle-size: 44
particle-size: 44
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 44
particle-size: 44
statement: this.id = 0
particle-size: 44
statement: return this
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = [x] ~ this'.data
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.__S0.__run()
particle-size: 12
particle-size: 12
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 8
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 8
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 12
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 74
repetition: 7
statement: __d.__step()
particle-size: 74
particle-size: 74
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: (action,node) := this'.scheduler()
particle-size: 74
particle-size: 74
statement: actions := ([]: (R × R)[])
particle-size: 74
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 72
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 49
loop-index: 1
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
loop-index: 2
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 3
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 74
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.__H0.__run()
particle-size: 72
particle-size: 72
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 72
particle-size: 72
statement: this.id = 0
particle-size: 72
statement: return this
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.data = [x] ~ this'.data
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.__S0.__run()
particle-size: 26
particle-size: 26
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 8
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 8
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.__S1.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.__S2.__run()
particle-size: 9
particle-size: 9
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 18
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 113
repetition: 8
statement: __d.__step()
particle-size: 113
particle-size: 113
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: (action,node) := this'.scheduler()
particle-size: 113
particle-size: 113
statement: actions := ([]: (R × R)[])
particle-size: 113
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 1
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
loop-index: 2
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 47
loop-index: 3
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 4
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 5
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 113
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
particle-size: 332
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.__H0.__run()
particle-size: 104
particle-size: 104
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 104
particle-size: 104
statement: this.id = 0
particle-size: 104
statement: return this
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = [x] ~ this'.data
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 27
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 27
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 4
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.__S0.__run()
particle-size: 42
particle-size: 42
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 4
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 223
particle-size: 223
statement: return this'.data.length
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.__S1.__run()
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 223
particle-size: 223
statement: return this'.data.length
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.__S2.__run()
particle-size: 17
particle-size: 17
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 34
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: this'.__S3.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 376
particle-size: 376
particle-size: 376
particle-size: 162
repetition: 9
statement: __d.__step()
particle-size: 162
particle-size: 162
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: (action,node) := this'.scheduler()
particle-size: 162
particle-size: 162
statement: actions := ([]: (R × R)[])
particle-size: 162
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 149
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(1,i)]
particle-size: 85
loop-index: 1
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
loop-index: 2
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(1,i)]
particle-size: 61
loop-index: 3
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
statement: actions ~= [(1,i)]
particle-size: 12
statement: this'.num_actions += 1
particle-size: 162
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 478
particle-size: 478
particle-size: 478
particle-size: 478
particle-size: 478
particle-size: 478
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 85
particle-size: 85
statement: r := this'.front()
particle-size: 85
particle-size: 85
statement: return this'.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.popFront()
particle-size: 85
particle-size: 85
statement: this'.data = this'.data[1..this'.size()]
particle-size: 85
particle-size: 85
statement: return this'.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.data = this'.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this'.__H0.__run()
particle-size: 149
particle-size: 149
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 149
particle-size: 149
statement: this.id = 0
particle-size: 149
statement: return this
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: this'.data = [x] ~ this'.data
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 30
particle-size: 30
statement: this.id = 0
particle-size: 30
statement: return this
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = [x] ~ this'.data
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 30
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 4
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this'.__S0.__run()
particle-size: 63
particle-size: 63
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
statement: if this'.strategy == 2 {
    this'.strategy = this'.strategy + flip(1 / 2);
}
statement: this'.strategy = this'.strategy + flip(1 / 2)
particle-size: 2
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: this'.__S1.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: this'.__S2.__run()
particle-size: 26
particle-size: 26
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 44
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 344
particle-size: 344
statement: return this'.data.length
particle-size: 344
particle-size: 344
particle-size: 344
particle-size: 344
statement: this'.__S3.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 224
repetition: 10
statement: __d.__step()
particle-size: 224
particle-size: 224
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: (action,node) := this'.scheduler()
particle-size: 224
particle-size: 224
statement: actions := ([]: (R × R)[])
particle-size: 224
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 194
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(1,i)]
particle-size: 103
loop-index: 1
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
loop-index: 2
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 85
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(1,i)]
particle-size: 92
loop-index: 3
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
statement: actions ~= [(1,i)]
particle-size: 18
statement: this'.num_actions += 1
particle-size: 224
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 92
particle-size: 92
statement: r := this'.front()
particle-size: 92
particle-size: 92
statement: return this'.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: this'.__H0.__run()
particle-size: 194
particle-size: 194
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 194
particle-size: 194
statement: this.id = 0
particle-size: 194
statement: return this
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: this'.data = [x] ~ this'.data
particle-size: 194
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 32
particle-size: 32
statement: this.id = 0
particle-size: 32
statement: return this
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = [x] ~ this'.data
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 32
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.Q_in.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: this'.__H1.__run()
particle-size: 12
particle-size: 12
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 12
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: this'.__S0.__run()
particle-size: 85
particle-size: 85
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: this'.__S1.__run()
particle-size: 40
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: this'.__S2.__run()
particle-size: 40
particle-size: 40
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 68
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.__S3.__run()
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 749
particle-size: 749
particle-size: 749
particle-size: 292
repetition: 11
statement: __d.__step()
particle-size: 292
particle-size: 292
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: (action,node) := this'.scheduler()
particle-size: 292
particle-size: 292
statement: actions := ([]: (R × R)[])
particle-size: 292
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 258
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(1,i)]
particle-size: 113
loop-index: 1
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
loop-index: 2
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(1,i)]
particle-size: 130
loop-index: 3
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 4
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 5
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
statement: actions ~= [(1,i)]
particle-size: 34
statement: this'.num_actions += 1
particle-size: 292
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 894
particle-size: 894
particle-size: 894
particle-size: 894
particle-size: 894
particle-size: 894
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 113
particle-size: 113
statement: r := this'.front()
particle-size: 113
particle-size: 113
statement: return this'.data[0]
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.popFront()
particle-size: 113
particle-size: 113
statement: this'.data = this'.data[1..this'.size()]
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return r
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.data = this'.data ~ [x]
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 130
particle-size: 130
statement: r := this'.front()
particle-size: 130
particle-size: 130
statement: return this'.data[0]
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: this'.popFront()
particle-size: 130
particle-size: 130
statement: this'.data = this'.data[1..this'.size()]
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return r
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 355
particle-size: 355
statement: return this'.data.length
particle-size: 355
particle-size: 355
particle-size: 355
particle-size: 355
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: this'.__H0.__run()
particle-size: 258
particle-size: 258
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 258
particle-size: 258
statement: this.id = 0
particle-size: 258
statement: return this
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.data = [x] ~ this'.data
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: this.id = 0
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = [x] ~ this'.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 28
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.Q_in.popFront()
particle-size: 230
particle-size: 230
statement: this'.data = this'.data[1..this'.size()]
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: return ()
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: this'.Q_in.popFront()
particle-size: 230
particle-size: 230
statement: this'.data = this'.data[1..this'.size()]
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: return ()
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: this'.__H1.__run()
particle-size: 18
particle-size: 18
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 18
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: this'.__S0.__run()
particle-size: 103
particle-size: 103
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = this'.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 599
particle-size: 599
statement: return this'.data.length
particle-size: 599
particle-size: 599
particle-size: 599
particle-size: 599
statement: this'.__S1.__run()
particle-size: 55
particle-size: 55
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 599
particle-size: 599
statement: return this'.data.length
particle-size: 599
particle-size: 599
particle-size: 599
particle-size: 599
statement: this'.__S2.__run()
particle-size: 55
particle-size: 55
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 86
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 642
particle-size: 642
statement: return this'.data.length
particle-size: 642
particle-size: 642
particle-size: 642
particle-size: 642
statement: this'.__S3.__run()
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 997
particle-size: 997
particle-size: 997
particle-size: 372
repetition: 12
statement: __d.__step()
particle-size: 372
particle-size: 372
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: (action,node) := this'.scheduler()
particle-size: 372
particle-size: 372
statement: actions := ([]: (R × R)[])
particle-size: 372
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 317
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(1,i)]
particle-size: 121
loop-index: 1
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
loop-index: 2
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(1,i)]
particle-size: 171
loop-index: 3
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(1,i)]
particle-size: 55
loop-index: 4
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 5
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(0,i)]
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
statement: actions ~= [(1,i)]
particle-size: 49
statement: this'.num_actions += 1
particle-size: 372
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1139
particle-size: 1139
particle-size: 1139
particle-size: 1139
particle-size: 1139
particle-size: 1139
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 121
particle-size: 121
statement: r := this'.front()
particle-size: 121
particle-size: 121
statement: return this'.data[0]
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
statement: this'.popFront()
particle-size: 121
particle-size: 121
statement: this'.data = this'.data[1..this'.size()]
particle-size: 121
particle-size: 121
statement: return this'.data.length
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
statement: return ()
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
statement: return r
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 121
particle-size: 121
particle-size: 121
statement: this'.data = this'.data ~ [x]
particle-size: 121
statement: return ()
particle-size: 121
particle-size: 121
particle-size: 121
particle-size: 121
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 171
particle-size: 171
statement: r := this'.front()
particle-size: 171
particle-size: 171
statement: return this'.data[0]
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: this'.popFront()
particle-size: 171
particle-size: 171
statement: this'.data = this'.data[1..this'.size()]
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return ()
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return r
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 83
particle-size: 83
particle-size: 83
statement: this'.data = this'.data ~ [x]
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.data = this'.data ~ [x]
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 446
particle-size: 446
statement: return this'.data.length
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 693
particle-size: 693
statement: return this'.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: this'.__H0.__run()
particle-size: 317
particle-size: 317
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 317
particle-size: 317
statement: this.id = 0
particle-size: 317
statement: return this
particle-size: 317
particle-size: 317
particle-size: 317
particle-size: 317
particle-size: 317
statement: this'.data = [x] ~ this'.data
particle-size: 317
statement: return ()
particle-size: 317
particle-size: 317
particle-size: 317
particle-size: 317
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 31
particle-size: 31
statement: this.id = 0
particle-size: 31
statement: return this
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = [x] ~ this'.data
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 31
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 31
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_in.popFront()
particle-size: 286
particle-size: 286
statement: this'.data = this'.data[1..this'.size()]
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return ()
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this'.Q_in.popFront()
particle-size: 286
particle-size: 286
statement: this'.data = this'.data[1..this'.size()]
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return ()
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return ()
particle-size: 317
particle-size: 317
particle-size: 317
particle-size: 317
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 693
particle-size: 693
statement: return this'.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: this'.__H1.__run()
particle-size: 34
particle-size: 34
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 34
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 691
particle-size: 691
statement: return this'.data.length
particle-size: 691
particle-size: 691
particle-size: 691
particle-size: 691
statement: this'.__S0.__run()
particle-size: 115
particle-size: 115
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 70
particle-size: 70
statement: r := this'.front()
particle-size: 70
particle-size: 70
statement: return this'.data[0]
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.popFront()
particle-size: 70
particle-size: 70
statement: this'.data = this'.data[1..this'.size()]
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return r
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 70
particle-size: 70
statement: r := this'.front()
particle-size: 70
particle-size: 70
statement: return this'.data[0]
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.popFront()
particle-size: 70
particle-size: 70
statement: this'.data = this'.data[1..this'.size()]
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return r
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 761
particle-size: 761
statement: return this'.data.length
particle-size: 761
particle-size: 761
particle-size: 761
particle-size: 761
statement: this'.__S1.__run()
particle-size: 75
particle-size: 75
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 75
particle-size: 75
statement: r := this'.front()
particle-size: 75
particle-size: 75
statement: return this'.data[0]
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.popFront()
particle-size: 75
particle-size: 75
statement: this'.data = this'.data[1..this'.size()]
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return r
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.data = this'.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 761
particle-size: 761
statement: return this'.data.length
particle-size: 761
particle-size: 761
particle-size: 761
particle-size: 761
statement: this'.__S2.__run()
particle-size: 74
particle-size: 74
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 104
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 813
particle-size: 813
statement: return this'.data.length
particle-size: 813
particle-size: 813
particle-size: 813
particle-size: 813
statement: this'.__S3.__run()
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 1259
particle-size: 1259
particle-size: 1259
particle-size: 452
repetition: 13
statement: __d.__step()
particle-size: 452
particle-size: 452
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: (action,node) := this'.scheduler()
particle-size: 452
particle-size: 452
statement: actions := ([]: (R × R)[])
particle-size: 452
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 379
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(1,i)]
particle-size: 125
loop-index: 1
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 49
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
loop-index: 2
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 125
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(1,i)]
particle-size: 203
loop-index: 3
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 101
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(1,i)]
particle-size: 77
loop-index: 4
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 101
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(1,i)]
particle-size: 67
loop-index: 5
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 452
particle-size: 452
statement: return this'.data.length
particle-size: 452
particle-size: 452
particle-size: 452
statement: actions ~= [(1,i)]
particle-size: 76
statement: this'.num_actions += 1
particle-size: 452
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1408
particle-size: 1408
particle-size: 1408
particle-size: 1408
particle-size: 1408
particle-size: 1408
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 125
particle-size: 125
statement: r := this'.front()
particle-size: 125
particle-size: 125
statement: return this'.data[0]
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.popFront()
particle-size: 125
particle-size: 125
statement: this'.data = this'.data[1..this'.size()]
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return r
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.data = this'.data ~ [x]
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 203
particle-size: 203
statement: r := this'.front()
particle-size: 203
particle-size: 203
statement: return this'.data[0]
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: this'.popFront()
particle-size: 203
particle-size: 203
statement: this'.data = this'.data[1..this'.size()]
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: return ()
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: return r
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.data = this'.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 548
particle-size: 548
statement: return this'.data.length
particle-size: 548
particle-size: 548
particle-size: 548
particle-size: 548
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this'.front()
particle-size: 76
particle-size: 76
statement: return this'.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 860
particle-size: 860
statement: return this'.data.length
particle-size: 860
particle-size: 860
particle-size: 860
particle-size: 860
statement: this'.__H0.__run()
particle-size: 379
particle-size: 379
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 379
particle-size: 379
statement: this.id = 0
particle-size: 379
statement: return this
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: this'.data = [x] ~ this'.data
particle-size: 379
statement: return ()
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: this.id = 0
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = [x] ~ this'.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 22
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 22
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.Q_in.popFront()
particle-size: 357
particle-size: 357
statement: this'.data = this'.data[1..this'.size()]
particle-size: 357
particle-size: 357
statement: return this'.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: this'.Q_in.popFront()
particle-size: 357
particle-size: 357
statement: this'.data = this'.data[1..this'.size()]
particle-size: 357
particle-size: 357
statement: return this'.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 379
particle-size: 379
particle-size: 379
particle-size: 379
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 860
particle-size: 860
statement: return this'.data.length
particle-size: 860
particle-size: 860
particle-size: 860
particle-size: 860
statement: this'.__H1.__run()
particle-size: 49
particle-size: 49
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 49
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 855
particle-size: 855
statement: return this'.data.length
particle-size: 855
particle-size: 855
particle-size: 855
particle-size: 855
statement: this'.__S0.__run()
particle-size: 125
particle-size: 125
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 935
particle-size: 935
statement: return this'.data.length
particle-size: 935
particle-size: 935
particle-size: 935
particle-size: 935
statement: this'.__S1.__run()
particle-size: 101
particle-size: 101
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 101
particle-size: 101
statement: r := this'.front()
particle-size: 101
particle-size: 101
statement: return this'.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.popFront()
particle-size: 101
particle-size: 101
statement: this'.data = this'.data[1..this'.size()]
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 935
particle-size: 935
statement: return this'.data.length
particle-size: 935
particle-size: 935
particle-size: 935
particle-size: 935
statement: this'.__S2.__run()
particle-size: 101
particle-size: 101
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 116
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 72
particle-size: 72
statement: this'.data = this'.data[1..this'.size()]
particle-size: 72
particle-size: 72
statement: return this'.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 993
particle-size: 993
statement: return this'.data.length
particle-size: 993
particle-size: 993
particle-size: 993
particle-size: 993
statement: this'.__S3.__run()
particle-size: 105
particle-size: 105
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 1541
particle-size: 1541
particle-size: 1541
particle-size: 527
repetition: 14
statement: __d.__step()
particle-size: 527
particle-size: 527
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: (action,node) := this'.scheduler()
particle-size: 527
particle-size: 527
statement: actions := ([]: (R × R)[])
particle-size: 527
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 425
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(1,i)]
particle-size: 117
loop-index: 1
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 76
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
loop-index: 2
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 129
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(1,i)]
particle-size: 226
loop-index: 3
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 119
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(1,i)]
particle-size: 101
loop-index: 4
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 118
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(1,i)]
particle-size: 83
loop-index: 5
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
statement: actions ~= [(1,i)]
particle-size: 100
statement: this'.num_actions += 1
particle-size: 527
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1638
particle-size: 1638
particle-size: 1638
particle-size: 1638
particle-size: 1638
particle-size: 1638
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 117
particle-size: 117
statement: r := this'.front()
particle-size: 117
particle-size: 117
statement: return this'.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.popFront()
particle-size: 117
particle-size: 117
statement: this'.data = this'.data[1..this'.size()]
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.data = this'.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 226
particle-size: 226
statement: r := this'.front()
particle-size: 226
particle-size: 226
statement: return this'.data[0]
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: this'.popFront()
particle-size: 226
particle-size: 226
statement: this'.data = this'.data[1..this'.size()]
particle-size: 226
particle-size: 226
statement: return this'.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: return r
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 115
particle-size: 115
particle-size: 115
statement: this'.data = this'.data ~ [x]
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 101
particle-size: 101
statement: r := this'.front()
particle-size: 101
particle-size: 101
statement: return this'.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.popFront()
particle-size: 101
particle-size: 101
statement: this'.data = this'.data[1..this'.size()]
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 83
particle-size: 83
statement: r := this'.front()
particle-size: 83
particle-size: 83
statement: return this'.data[0]
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: this'.popFront()
particle-size: 83
particle-size: 83
statement: this'.data = this'.data[1..this'.size()]
particle-size: 83
particle-size: 83
statement: return this'.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return r
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 83
particle-size: 83
particle-size: 83
statement: this'.data = this'.data ~ [x]
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 627
particle-size: 627
statement: return this'.data.length
particle-size: 627
particle-size: 627
particle-size: 627
particle-size: 627
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this'.front()
particle-size: 100
particle-size: 100
statement: return this'.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.data = this'.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1011
particle-size: 1011
statement: return this'.data.length
particle-size: 1011
particle-size: 1011
particle-size: 1011
particle-size: 1011
statement: this'.__H0.__run()
particle-size: 425
particle-size: 425
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 425
particle-size: 425
statement: this.id = 0
particle-size: 425
statement: return this
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: this'.data = [x] ~ this'.data
particle-size: 425
statement: return ()
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: this.id = 0
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 18
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 407
particle-size: 407
statement: this'.data = this'.data[1..this'.size()]
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return ()
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: this'.Q_in.popFront()
particle-size: 407
particle-size: 407
statement: this'.data = this'.data[1..this'.size()]
particle-size: 407
particle-size: 407
statement: return this'.data.length
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return ()
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: return ()
particle-size: 425
particle-size: 425
particle-size: 425
particle-size: 425
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1011
particle-size: 1011
statement: return this'.data.length
particle-size: 1011
particle-size: 1011
particle-size: 1011
particle-size: 1011
statement: this'.__H1.__run()
particle-size: 76
particle-size: 76
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 76
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1002
particle-size: 1002
statement: return this'.data.length
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
statement: this'.__S0.__run()
particle-size: 129
particle-size: 129
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1089
particle-size: 1089
statement: return this'.data.length
particle-size: 1089
particle-size: 1089
particle-size: 1089
particle-size: 1089
statement: this'.__S1.__run()
particle-size: 119
particle-size: 119
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 119
particle-size: 119
statement: r := this'.front()
particle-size: 119
particle-size: 119
statement: return this'.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1089
particle-size: 1089
statement: return this'.data.length
particle-size: 1089
particle-size: 1089
particle-size: 1089
particle-size: 1089
statement: this'.__S2.__run()
particle-size: 118
particle-size: 118
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 114
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 101
particle-size: 101
statement: r := this'.front()
particle-size: 101
particle-size: 101
statement: return this'.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.popFront()
particle-size: 101
particle-size: 101
statement: this'.data = this'.data[1..this'.size()]
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1146
particle-size: 1146
statement: return this'.data.length
particle-size: 1146
particle-size: 1146
particle-size: 1146
particle-size: 1146
statement: this'.__S3.__run()
particle-size: 144
particle-size: 144
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.data = this'.data ~ [x]
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 1773
particle-size: 1773
particle-size: 1773
particle-size: 587
repetition: 15
statement: __d.__step()
particle-size: 587
particle-size: 587
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: (action,node) := this'.scheduler()
particle-size: 587
particle-size: 587
statement: actions := ([]: (R × R)[])
particle-size: 587
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 476
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 99
loop-index: 1
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
loop-index: 2
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 121
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 238
loop-index: 3
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 117
loop-index: 4
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 138
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 92
loop-index: 5
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 184
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 134
statement: this'.num_actions += 1
particle-size: 587
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1838
particle-size: 1838
particle-size: 1838
particle-size: 1838
particle-size: 1838
particle-size: 1838
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 99
particle-size: 99
statement: r := this'.front()
particle-size: 99
particle-size: 99
statement: return this'.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.popFront()
particle-size: 99
particle-size: 99
statement: this'.data = this'.data[1..this'.size()]
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.data = this'.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 238
particle-size: 238
statement: r := this'.front()
particle-size: 238
particle-size: 238
statement: return this'.data[0]
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.popFront()
particle-size: 238
particle-size: 238
statement: this'.data = this'.data[1..this'.size()]
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return r
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.data = this'.data ~ [x]
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.data = this'.data ~ [x]
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 117
particle-size: 117
statement: r := this'.front()
particle-size: 117
particle-size: 117
statement: return this'.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.popFront()
particle-size: 117
particle-size: 117
statement: this'.data = this'.data[1..this'.size()]
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.data = this'.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 92
particle-size: 92
statement: r := this'.front()
particle-size: 92
particle-size: 92
statement: return this'.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.data = this'.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 680
particle-size: 680
statement: return this'.data.length
particle-size: 680
particle-size: 680
particle-size: 680
particle-size: 680
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this'.front()
particle-size: 134
particle-size: 134
statement: return this'.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.popFront()
particle-size: 134
particle-size: 134
statement: this'.data = this'.data[1..this'.size()]
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.data = this'.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1158
particle-size: 1158
statement: return this'.data.length
particle-size: 1158
particle-size: 1158
particle-size: 1158
particle-size: 1158
statement: this'.__H0.__run()
particle-size: 476
particle-size: 476
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 476
particle-size: 476
statement: this.id = 0
particle-size: 476
statement: return this
particle-size: 476
particle-size: 476
particle-size: 476
particle-size: 476
particle-size: 476
statement: this'.data = [x] ~ this'.data
particle-size: 476
statement: return ()
particle-size: 476
particle-size: 476
particle-size: 476
particle-size: 476
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: this.id = 0
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 10
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 466
particle-size: 466
statement: this'.data = this'.data[1..this'.size()]
particle-size: 466
particle-size: 466
statement: return this'.data.length
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
statement: return ()
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
statement: this'.Q_in.popFront()
particle-size: 466
particle-size: 466
statement: this'.data = this'.data[1..this'.size()]
particle-size: 466
particle-size: 466
statement: return this'.data.length
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
statement: return ()
particle-size: 466
particle-size: 466
particle-size: 466
particle-size: 466
statement: return ()
particle-size: 476
particle-size: 476
particle-size: 476
particle-size: 476
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1158
particle-size: 1158
statement: return this'.data.length
particle-size: 1158
particle-size: 1158
particle-size: 1158
particle-size: 1158
statement: this'.__H1.__run()
particle-size: 100
particle-size: 100
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 100
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 83
particle-size: 83
statement: this'.data = this'.data[1..this'.size()]
particle-size: 83
particle-size: 83
statement: return this'.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1141
particle-size: 1141
statement: return this'.data.length
particle-size: 1141
particle-size: 1141
particle-size: 1141
particle-size: 1141
statement: this'.__S0.__run()
particle-size: 121
particle-size: 121
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 37
particle-size: 37
statement: r := this'.front()
particle-size: 37
particle-size: 37
statement: return this'.data[0]
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.popFront()
particle-size: 37
particle-size: 37
statement: this'.data = this'.data[1..this'.size()]
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return r
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return ()
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1225
particle-size: 1225
statement: return this'.data.length
particle-size: 1225
particle-size: 1225
particle-size: 1225
particle-size: 1225
statement: this'.__S1.__run()
particle-size: 139
particle-size: 139
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 139
particle-size: 139
statement: r := this'.front()
particle-size: 139
particle-size: 139
statement: return this'.data[0]
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.popFront()
particle-size: 139
particle-size: 139
statement: this'.data = this'.data[1..this'.size()]
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return r
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.data = this'.data ~ [x]
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1225
particle-size: 1225
statement: return this'.data.length
particle-size: 1225
particle-size: 1225
particle-size: 1225
particle-size: 1225
statement: this'.__S2.__run()
particle-size: 138
particle-size: 138
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 120
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 120
particle-size: 120
statement: r := this'.front()
particle-size: 120
particle-size: 120
statement: return this'.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.data = this'.data ~ [x]
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1285
particle-size: 1285
statement: return this'.data.length
particle-size: 1285
particle-size: 1285
particle-size: 1285
particle-size: 1285
statement: this'.__S3.__run()
particle-size: 184
particle-size: 184
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 184
particle-size: 184
statement: r := this'.front()
particle-size: 184
particle-size: 184
statement: return this'.data[0]
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.popFront()
particle-size: 184
particle-size: 184
statement: this'.data = this'.data[1..this'.size()]
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return r
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.data = this'.data ~ [x]
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 1965
particle-size: 1965
particle-size: 1965
particle-size: 634
repetition: 16
statement: __d.__step()
particle-size: 634
particle-size: 634
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: (action,node) := this'.scheduler()
particle-size: 634
particle-size: 634
statement: actions := ([]: (R × R)[])
particle-size: 634
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 490
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(1,i)]
particle-size: 81
loop-index: 1
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 134
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
loop-index: 2
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(1,i)]
particle-size: 223
loop-index: 3
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 153
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(1,i)]
particle-size: 137
loop-index: 4
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 154
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 5
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(0,i)]
particle-size: 213
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 634
particle-size: 634
statement: return this'.data.length
particle-size: 634
particle-size: 634
particle-size: 634
statement: actions ~= [(1,i)]
particle-size: 166
statement: this'.num_actions += 1
particle-size: 634
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1959
particle-size: 1959
particle-size: 1959
particle-size: 1959
particle-size: 1959
particle-size: 1959
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 223
particle-size: 223
statement: r := this'.front()
particle-size: 223
particle-size: 223
statement: return this'.data[0]
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.popFront()
particle-size: 223
particle-size: 223
statement: this'.data = this'.data[1..this'.size()]
particle-size: 223
particle-size: 223
statement: return this'.data.length
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return r
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.data = this'.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 712
particle-size: 712
statement: return this'.data.length
particle-size: 712
particle-size: 712
particle-size: 712
particle-size: 712
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 166
particle-size: 166
statement: r := this'.front()
particle-size: 166
particle-size: 166
statement: return this'.data[0]
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: this'.popFront()
particle-size: 166
particle-size: 166
statement: this'.data = this'.data[1..this'.size()]
particle-size: 166
particle-size: 166
statement: return this'.data.length
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: return ()
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: return r
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 166
particle-size: 166
particle-size: 166
statement: this'.data = this'.data ~ [x]
particle-size: 166
statement: return ()
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1247
particle-size: 1247
statement: return this'.data.length
particle-size: 1247
particle-size: 1247
particle-size: 1247
particle-size: 1247
statement: this'.__H0.__run()
particle-size: 490
particle-size: 490
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 490
particle-size: 490
statement: this.id = 0
particle-size: 490
statement: return this
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: this'.data = [x] ~ this'.data
particle-size: 490
statement: return ()
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 481
particle-size: 481
statement: this'.data = this'.data[1..this'.size()]
particle-size: 481
particle-size: 481
statement: return this'.data.length
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
statement: return ()
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
statement: this'.Q_in.popFront()
particle-size: 481
particle-size: 481
statement: this'.data = this'.data[1..this'.size()]
particle-size: 481
particle-size: 481
statement: return this'.data.length
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
statement: return ()
particle-size: 481
particle-size: 481
particle-size: 481
particle-size: 481
statement: return ()
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1247
particle-size: 1247
statement: return this'.data.length
particle-size: 1247
particle-size: 1247
particle-size: 1247
particle-size: 1247
statement: this'.__H1.__run()
particle-size: 134
particle-size: 134
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 134
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: this'.Q_in.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1215
particle-size: 1215
statement: return this'.data.length
particle-size: 1215
particle-size: 1215
particle-size: 1215
particle-size: 1215
statement: this'.__S0.__run()
particle-size: 103
particle-size: 103
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1288
particle-size: 1288
statement: return this'.data.length
particle-size: 1288
particle-size: 1288
particle-size: 1288
particle-size: 1288
statement: this'.__S1.__run()
particle-size: 153
particle-size: 153
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 153
particle-size: 153
statement: r := this'.front()
particle-size: 153
particle-size: 153
statement: return this'.data[0]
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.popFront()
particle-size: 153
particle-size: 153
statement: this'.data = this'.data[1..this'.size()]
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return r
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.data = this'.data ~ [x]
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1288
particle-size: 1288
statement: return this'.data.length
particle-size: 1288
particle-size: 1288
particle-size: 1288
particle-size: 1288
statement: this'.__S2.__run()
particle-size: 154
particle-size: 154
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 116
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 136
particle-size: 136
statement: r := this'.front()
particle-size: 136
particle-size: 136
statement: return this'.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.data = this'.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1346
particle-size: 1346
statement: return this'.data.length
particle-size: 1346
particle-size: 1346
particle-size: 1346
particle-size: 1346
statement: this'.__S3.__run()
particle-size: 213
particle-size: 213
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 213
particle-size: 213
statement: r := this'.front()
particle-size: 213
particle-size: 213
statement: return this'.data[0]
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.popFront()
particle-size: 213
particle-size: 213
statement: this'.data = this'.data[1..this'.size()]
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return r
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.data = this'.data ~ [x]
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 2058
particle-size: 2058
particle-size: 2058
particle-size: 640
repetition: 17
statement: __d.__step()
particle-size: 640
particle-size: 640
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: (action,node) := this'.scheduler()
particle-size: 640
particle-size: 640
statement: actions := ([]: (R × R)[])
particle-size: 640
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 488
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(1,i)]
particle-size: 59
loop-index: 1
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 166
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
loop-index: 2
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 81
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(1,i)]
particle-size: 190
loop-index: 3
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 149
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(1,i)]
particle-size: 149
loop-index: 4
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 151
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(1,i)]
particle-size: 113
loop-index: 5
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(0,i)]
particle-size: 242
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 640
particle-size: 640
statement: return this'.data.length
particle-size: 640
particle-size: 640
particle-size: 640
statement: actions ~= [(1,i)]
particle-size: 184
statement: this'.num_actions += 1
particle-size: 640
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1972
particle-size: 1972
particle-size: 1972
particle-size: 1972
particle-size: 1972
particle-size: 1972
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 59
particle-size: 59
statement: r := this'.front()
particle-size: 59
particle-size: 59
statement: return this'.data[0]
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return r
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.data = this'.data ~ [x]
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.data = this'.data ~ [x]
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.data = this'.data ~ [x]
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 149
particle-size: 149
statement: r := this'.front()
particle-size: 149
particle-size: 149
statement: return this'.data[0]
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: this'.popFront()
particle-size: 149
particle-size: 149
statement: this'.data = this'.data[1..this'.size()]
particle-size: 149
particle-size: 149
statement: return this'.data.length
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return r
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 149
particle-size: 149
particle-size: 149
statement: this'.data = this'.data ~ [x]
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 113
particle-size: 113
statement: r := this'.front()
particle-size: 113
particle-size: 113
statement: return this'.data[0]
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.popFront()
particle-size: 113
particle-size: 113
statement: this'.data = this'.data[1..this'.size()]
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return r
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.data = this'.data ~ [x]
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 695
particle-size: 695
statement: return this'.data.length
particle-size: 695
particle-size: 695
particle-size: 695
particle-size: 695
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 184
particle-size: 184
statement: r := this'.front()
particle-size: 184
particle-size: 184
statement: return this'.data[0]
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.popFront()
particle-size: 184
particle-size: 184
statement: this'.data = this'.data[1..this'.size()]
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return r
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.data = this'.data ~ [x]
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1277
particle-size: 1277
statement: return this'.data.length
particle-size: 1277
particle-size: 1277
particle-size: 1277
particle-size: 1277
statement: this'.__H0.__run()
particle-size: 488
particle-size: 488
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 488
particle-size: 488
statement: this.id = 0
particle-size: 488
statement: return this
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: this'.data = [x] ~ this'.data
particle-size: 488
statement: return ()
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: this.id = 0
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 4
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 484
particle-size: 484
statement: this'.data = this'.data[1..this'.size()]
particle-size: 484
particle-size: 484
statement: return this'.data.length
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: return ()
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: this'.Q_in.popFront()
particle-size: 484
particle-size: 484
statement: this'.data = this'.data[1..this'.size()]
particle-size: 484
particle-size: 484
statement: return this'.data.length
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: return ()
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: return ()
particle-size: 488
particle-size: 488
particle-size: 488
particle-size: 488
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1277
particle-size: 1277
statement: return this'.data.length
particle-size: 1277
particle-size: 1277
particle-size: 1277
particle-size: 1277
statement: this'.__H1.__run()
particle-size: 166
particle-size: 166
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 166
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1231
particle-size: 1231
statement: return this'.data.length
particle-size: 1231
particle-size: 1231
particle-size: 1231
particle-size: 1231
statement: this'.__S0.__run()
particle-size: 81
particle-size: 81
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1288
particle-size: 1288
statement: return this'.data.length
particle-size: 1288
particle-size: 1288
particle-size: 1288
particle-size: 1288
statement: this'.__S1.__run()
particle-size: 149
particle-size: 149
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 149
particle-size: 149
statement: r := this'.front()
particle-size: 149
particle-size: 149
statement: return this'.data[0]
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: this'.popFront()
particle-size: 149
particle-size: 149
statement: this'.data = this'.data[1..this'.size()]
particle-size: 149
particle-size: 149
statement: return this'.data.length
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return r
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: this'.data = this'.data ~ [x]
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1288
particle-size: 1288
statement: return this'.data.length
particle-size: 1288
particle-size: 1288
particle-size: 1288
particle-size: 1288
statement: this'.__S2.__run()
particle-size: 151
particle-size: 151
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 106
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1341
particle-size: 1341
statement: return this'.data.length
particle-size: 1341
particle-size: 1341
particle-size: 1341
particle-size: 1341
statement: this'.__S3.__run()
particle-size: 242
particle-size: 242
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 242
particle-size: 242
statement: r := this'.front()
particle-size: 242
particle-size: 242
statement: return this'.data[0]
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: this'.popFront()
particle-size: 242
particle-size: 242
statement: this'.data = this'.data[1..this'.size()]
particle-size: 242
particle-size: 242
statement: return this'.data.length
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: return ()
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: return r
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: this'.data = this'.data ~ [x]
particle-size: 242
statement: return ()
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: return ()
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: return ()
particle-size: 2036
particle-size: 2036
particle-size: 2036
particle-size: 630
repetition: 18
statement: __d.__step()
particle-size: 630
particle-size: 630
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: return this'.data.length
particle-size: 630
particle-size: 630
particle-size: 630
particle-size: 630
statement: (action,node) := this'.scheduler()
particle-size: 628
particle-size: 628
statement: actions := ([]: (R × R)[])
particle-size: 628
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 460
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(1,i)]
particle-size: 41
loop-index: 1
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 184
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
loop-index: 2
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 59
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(1,i)]
particle-size: 148
loop-index: 3
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 131
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(1,i)]
particle-size: 147
loop-index: 4
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 5
particle-size: 628
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(0,i)]
particle-size: 258
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 628
particle-size: 628
statement: return this'.data.length
particle-size: 628
particle-size: 628
particle-size: 628
statement: actions ~= [(1,i)]
particle-size: 201
statement: this'.num_actions += 1
particle-size: 628
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1876
particle-size: 1876
particle-size: 1876
particle-size: 1876
particle-size: 1876
particle-size: 1876
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 148
particle-size: 148
statement: r := this'.front()
particle-size: 148
particle-size: 148
statement: return this'.data[0]
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.popFront()
particle-size: 148
particle-size: 148
statement: this'.data = this'.data[1..this'.size()]
particle-size: 148
particle-size: 148
statement: return this'.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return r
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 147
particle-size: 147
statement: r := this'.front()
particle-size: 147
particle-size: 147
statement: return this'.data[0]
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.popFront()
particle-size: 147
particle-size: 147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 147
particle-size: 147
statement: return this'.data.length
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return r
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.data = this'.data ~ [x]
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 648
particle-size: 648
statement: return this'.data.length
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 201
particle-size: 201
statement: r := this'.front()
particle-size: 201
particle-size: 201
statement: return this'.data[0]
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: this'.popFront()
particle-size: 201
particle-size: 201
statement: this'.data = this'.data[1..this'.size()]
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return ()
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return r
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 201
particle-size: 201
particle-size: 201
statement: this'.data = this'.data ~ [x]
particle-size: 201
statement: return ()
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1228
particle-size: 1228
statement: return this'.data.length
particle-size: 1228
particle-size: 1228
particle-size: 1228
particle-size: 1228
statement: this'.__H0.__run()
particle-size: 460
particle-size: 460
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 460
particle-size: 460
statement: this.id = 0
particle-size: 460
statement: return this
particle-size: 460
particle-size: 460
particle-size: 460
particle-size: 460
particle-size: 460
statement: this'.data = [x] ~ this'.data
particle-size: 460
statement: return ()
particle-size: 460
particle-size: 460
particle-size: 460
particle-size: 460
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: this.id = 0
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 4
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 456
particle-size: 456
statement: this'.data = this'.data[1..this'.size()]
particle-size: 456
particle-size: 456
statement: return this'.data.length
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: return ()
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: this'.Q_in.popFront()
particle-size: 456
particle-size: 456
statement: this'.data = this'.data[1..this'.size()]
particle-size: 456
particle-size: 456
statement: return this'.data.length
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: return ()
particle-size: 456
particle-size: 456
particle-size: 456
particle-size: 456
statement: return ()
particle-size: 460
particle-size: 460
particle-size: 460
particle-size: 460
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1228
particle-size: 1228
statement: return this'.data.length
particle-size: 1228
particle-size: 1228
particle-size: 1228
particle-size: 1228
statement: this'.__H1.__run()
particle-size: 184
particle-size: 184
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 184
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 123
particle-size: 123
statement: this'.data = this'.data[1..this'.size()]
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1167
particle-size: 1167
statement: return this'.data.length
particle-size: 1167
particle-size: 1167
particle-size: 1167
particle-size: 1167
statement: this'.__S0.__run()
particle-size: 59
particle-size: 59
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.data = this'.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.data = this'.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1206
particle-size: 1206
statement: return this'.data.length
particle-size: 1206
particle-size: 1206
particle-size: 1206
particle-size: 1206
statement: this'.__S1.__run()
particle-size: 131
particle-size: 131
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 131
particle-size: 131
statement: r := this'.front()
particle-size: 131
particle-size: 131
statement: return this'.data[0]
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.popFront()
particle-size: 131
particle-size: 131
statement: this'.data = this'.data[1..this'.size()]
particle-size: 131
particle-size: 131
statement: return this'.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return r
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.data = this'.data ~ [x]
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1206
particle-size: 1206
statement: return this'.data.length
particle-size: 1206
particle-size: 1206
particle-size: 1206
particle-size: 1206
statement: this'.__S2.__run()
particle-size: 136
particle-size: 136
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 90
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 126
particle-size: 126
statement: r := this'.front()
particle-size: 126
particle-size: 126
statement: return this'.data[0]
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: this'.popFront()
particle-size: 126
particle-size: 126
statement: this'.data = this'.data[1..this'.size()]
particle-size: 126
particle-size: 126
statement: return this'.data.length
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: return r
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: this'.data = this'.data ~ [x]
particle-size: 126
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1251
particle-size: 1251
statement: return this'.data.length
particle-size: 1251
particle-size: 1251
particle-size: 1251
particle-size: 1251
statement: this'.__S3.__run()
particle-size: 258
particle-size: 258
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 258
particle-size: 258
statement: r := this'.front()
particle-size: 258
particle-size: 258
statement: return this'.data[0]
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.popFront()
particle-size: 258
particle-size: 258
statement: this'.data = this'.data[1..this'.size()]
particle-size: 258
particle-size: 258
statement: return this'.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return r
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.data = this'.data ~ [x]
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 590
repetition: 19
statement: __d.__step()
particle-size: 590
particle-size: 590
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: return this'.data.length
particle-size: 590
particle-size: 590
particle-size: 590
particle-size: 590
statement: (action,node) := this'.scheduler()
particle-size: 588
particle-size: 588
statement: actions := ([]: (R × R)[])
particle-size: 588
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 429
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 1
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 201
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
loop-index: 2
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(1,i)]
particle-size: 98
loop-index: 3
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 106
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(1,i)]
particle-size: 133
loop-index: 4
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(1,i)]
particle-size: 102
loop-index: 5
particle-size: 588
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(0,i)]
particle-size: 267
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 588
particle-size: 588
statement: return this'.data.length
particle-size: 588
particle-size: 588
particle-size: 588
statement: actions ~= [(1,i)]
particle-size: 224
statement: this'.num_actions += 1
particle-size: 588
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1741
particle-size: 1741
particle-size: 1741
particle-size: 1741
particle-size: 1741
particle-size: 1741
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 133
particle-size: 133
statement: r := this'.front()
particle-size: 133
particle-size: 133
statement: return this'.data[0]
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this'.popFront()
particle-size: 133
particle-size: 133
statement: this'.data = this'.data[1..this'.size()]
particle-size: 133
particle-size: 133
statement: return this'.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return r
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 133
particle-size: 133
particle-size: 133
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 102
particle-size: 102
statement: r := this'.front()
particle-size: 102
particle-size: 102
statement: return this'.data[0]
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return r
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.data = this'.data ~ [x]
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 224
particle-size: 224
statement: r := this'.front()
particle-size: 224
particle-size: 224
statement: return this'.data[0]
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: this'.popFront()
particle-size: 224
particle-size: 224
statement: this'.data = this'.data[1..this'.size()]
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return r
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 224
particle-size: 224
particle-size: 224
statement: this'.data = this'.data ~ [x]
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1157
particle-size: 1157
statement: return this'.data.length
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: this'.__H0.__run()
particle-size: 429
particle-size: 429
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 429
particle-size: 429
statement: this.id = 0
particle-size: 429
statement: return this
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: this'.data = [x] ~ this'.data
particle-size: 429
statement: return ()
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 429
particle-size: 429
statement: this'.data = this'.data[1..this'.size()]
particle-size: 429
particle-size: 429
statement: return this'.data.length
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: return ()
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: this'.Q_in.popFront()
particle-size: 429
particle-size: 429
statement: this'.data = this'.data[1..this'.size()]
particle-size: 429
particle-size: 429
statement: return this'.data.length
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: return ()
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: return ()
particle-size: 429
particle-size: 429
particle-size: 429
particle-size: 429
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1157
particle-size: 1157
statement: return this'.data.length
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: this'.__H1.__run()
particle-size: 201
particle-size: 201
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 201
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: this'.__S0.__run()
particle-size: 41
particle-size: 41
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1113
particle-size: 1113
statement: return this'.data.length
particle-size: 1113
particle-size: 1113
particle-size: 1113
particle-size: 1113
statement: this'.__S1.__run()
particle-size: 106
particle-size: 106
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 106
particle-size: 106
statement: r := this'.front()
particle-size: 106
particle-size: 106
statement: return this'.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.popFront()
particle-size: 106
particle-size: 106
statement: this'.data = this'.data[1..this'.size()]
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1113
particle-size: 1113
statement: return this'.data.length
particle-size: 1113
particle-size: 1113
particle-size: 1113
particle-size: 1113
statement: this'.__S2.__run()
particle-size: 113
particle-size: 113
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 72
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 106
particle-size: 106
statement: r := this'.front()
particle-size: 106
particle-size: 106
statement: return this'.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.popFront()
particle-size: 106
particle-size: 106
statement: this'.data = this'.data[1..this'.size()]
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1149
particle-size: 1149
statement: return this'.data.length
particle-size: 1149
particle-size: 1149
particle-size: 1149
particle-size: 1149
statement: this'.__S3.__run()
particle-size: 267
particle-size: 267
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 267
particle-size: 267
statement: r := this'.front()
particle-size: 267
particle-size: 267
statement: return this'.data[0]
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: this'.popFront()
particle-size: 267
particle-size: 267
statement: this'.data = this'.data[1..this'.size()]
particle-size: 267
particle-size: 267
statement: return this'.data.length
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return r
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: this'.data = this'.data ~ [x]
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 1735
particle-size: 1735
particle-size: 1735
particle-size: 539
repetition: 20
statement: __d.__step()
particle-size: 539
particle-size: 539
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: return this'.data.length
particle-size: 539
particle-size: 539
particle-size: 539
particle-size: 539
statement: (action,node) := this'.scheduler()
particle-size: 537
particle-size: 537
statement: actions := ([]: (R × R)[])
particle-size: 537
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 382
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 1
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
loop-index: 2
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(1,i)]
particle-size: 66
loop-index: 3
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 76
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(1,i)]
particle-size: 108
loop-index: 4
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 84
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(1,i)]
particle-size: 84
loop-index: 5
particle-size: 537
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(0,i)]
particle-size: 253
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 537
particle-size: 537
statement: return this'.data.length
particle-size: 537
particle-size: 537
particle-size: 537
statement: actions ~= [(1,i)]
particle-size: 215
statement: this'.num_actions += 1
particle-size: 537
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1536
particle-size: 1536
particle-size: 1536
particle-size: 1536
particle-size: 1536
particle-size: 1536
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 108
particle-size: 108
statement: r := this'.front()
particle-size: 108
particle-size: 108
statement: return this'.data[0]
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return r
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 215
particle-size: 215
statement: r := this'.front()
particle-size: 215
particle-size: 215
statement: return this'.data[0]
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this'.popFront()
particle-size: 215
particle-size: 215
statement: this'.data = this'.data[1..this'.size()]
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: return ()
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: return r
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 215
particle-size: 215
particle-size: 215
statement: this'.data = this'.data ~ [x]
particle-size: 215
statement: return ()
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1046
particle-size: 1046
statement: return this'.data.length
particle-size: 1046
particle-size: 1046
particle-size: 1046
particle-size: 1046
statement: this'.__H0.__run()
particle-size: 382
particle-size: 382
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 382
particle-size: 382
statement: this.id = 0
particle-size: 382
statement: return this
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: this'.data = [x] ~ this'.data
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 382
particle-size: 382
statement: this'.data = this'.data[1..this'.size()]
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: this'.Q_in.popFront()
particle-size: 382
particle-size: 382
statement: this'.data = this'.data[1..this'.size()]
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1046
particle-size: 1046
statement: return this'.data.length
particle-size: 1046
particle-size: 1046
particle-size: 1046
particle-size: 1046
statement: this'.__H1.__run()
particle-size: 224
particle-size: 224
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 224
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 141
particle-size: 141
statement: this'.data = this'.data[1..this'.size()]
particle-size: 141
particle-size: 141
statement: return this'.data.length
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 963
particle-size: 963
statement: return this'.data.length
particle-size: 963
particle-size: 963
particle-size: 963
particle-size: 963
statement: this'.__S0.__run()
particle-size: 27
particle-size: 27
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 978
particle-size: 978
statement: return this'.data.length
particle-size: 978
particle-size: 978
particle-size: 978
particle-size: 978
statement: this'.__S1.__run()
particle-size: 76
particle-size: 76
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 76
particle-size: 76
statement: r := this'.front()
particle-size: 76
particle-size: 76
statement: return this'.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 978
particle-size: 978
statement: return this'.data.length
particle-size: 978
particle-size: 978
particle-size: 978
particle-size: 978
statement: this'.__S2.__run()
particle-size: 84
particle-size: 84
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 54
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1005
particle-size: 1005
statement: return this'.data.length
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
statement: this'.__S3.__run()
particle-size: 253
particle-size: 253
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 253
particle-size: 253
statement: r := this'.front()
particle-size: 253
particle-size: 253
statement: return this'.data[0]
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.popFront()
particle-size: 253
particle-size: 253
statement: this'.data = this'.data[1..this'.size()]
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return r
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.data = this'.data ~ [x]
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 1497
particle-size: 1497
particle-size: 1497
particle-size: 463
repetition: 21
statement: __d.__step()
particle-size: 463
particle-size: 463
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: return this'.data.length
particle-size: 463
particle-size: 463
particle-size: 463
particle-size: 463
statement: (action,node) := this'.scheduler()
particle-size: 461
particle-size: 461
statement: actions := ([]: (R × R)[])
particle-size: 461
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 319
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 1
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 215
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
loop-index: 2
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 3
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(1,i)]
particle-size: 78
loop-index: 4
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(1,i)]
particle-size: 61
loop-index: 5
particle-size: 461
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(0,i)]
particle-size: 223
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 461
particle-size: 461
statement: return this'.data.length
particle-size: 461
particle-size: 461
particle-size: 461
statement: actions ~= [(1,i)]
particle-size: 186
statement: this'.num_actions += 1
particle-size: 461
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1256
particle-size: 1256
particle-size: 1256
particle-size: 1256
particle-size: 1256
particle-size: 1256
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 375
particle-size: 375
statement: return this'.data.length
particle-size: 375
particle-size: 375
particle-size: 375
particle-size: 375
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 186
particle-size: 186
statement: r := this'.front()
particle-size: 186
particle-size: 186
statement: return this'.data[0]
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: this'.popFront()
particle-size: 186
particle-size: 186
statement: this'.data = this'.data[1..this'.size()]
particle-size: 186
particle-size: 186
statement: return this'.data.length
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return r
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 186
particle-size: 186
particle-size: 186
statement: this'.data = this'.data ~ [x]
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 881
particle-size: 881
statement: return this'.data.length
particle-size: 881
particle-size: 881
particle-size: 881
particle-size: 881
statement: this'.__H0.__run()
particle-size: 319
particle-size: 319
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 319
particle-size: 319
statement: this.id = 0
particle-size: 319
statement: return this
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: this'.data = [x] ~ this'.data
particle-size: 319
statement: return ()
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 319
particle-size: 319
statement: this'.data = this'.data[1..this'.size()]
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: return ()
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: this'.Q_in.popFront()
particle-size: 319
particle-size: 319
statement: this'.data = this'.data[1..this'.size()]
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: return ()
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: return ()
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 881
particle-size: 881
statement: return this'.data.length
particle-size: 881
particle-size: 881
particle-size: 881
particle-size: 881
statement: this'.__H1.__run()
particle-size: 215
particle-size: 215
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 215
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 133
particle-size: 133
statement: this'.data = this'.data[1..this'.size()]
particle-size: 133
particle-size: 133
statement: return this'.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 799
particle-size: 799
statement: return this'.data.length
particle-size: 799
particle-size: 799
particle-size: 799
particle-size: 799
statement: this'.__S0.__run()
particle-size: 17
particle-size: 17
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 808
particle-size: 808
statement: return this'.data.length
particle-size: 808
particle-size: 808
particle-size: 808
particle-size: 808
statement: this'.__S1.__run()
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 808
particle-size: 808
statement: return this'.data.length
particle-size: 808
particle-size: 808
particle-size: 808
particle-size: 808
statement: this'.__S2.__run()
particle-size: 57
particle-size: 57
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 40
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 828
particle-size: 828
statement: return this'.data.length
particle-size: 828
particle-size: 828
particle-size: 828
particle-size: 828
statement: this'.__S3.__run()
particle-size: 223
particle-size: 223
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 223
particle-size: 223
statement: r := this'.front()
particle-size: 223
particle-size: 223
statement: return this'.data[0]
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.popFront()
particle-size: 223
particle-size: 223
statement: this'.data = this'.data[1..this'.size()]
particle-size: 223
particle-size: 223
statement: return this'.data.length
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return r
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.data = this'.data ~ [x]
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return ()
particle-size: 1205
particle-size: 1205
particle-size: 1205
particle-size: 372
repetition: 22
statement: __d.__step()
particle-size: 372
particle-size: 372
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: return this'.data.length
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: (action,node) := this'.scheduler()
particle-size: 369
particle-size: 369
statement: actions := ([]: (R × R)[])
particle-size: 369
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 238
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 1
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 194
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
loop-index: 2
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 3
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 30
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(1,i)]
particle-size: 52
loop-index: 4
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 5
particle-size: 369
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 369
particle-size: 369
statement: return this'.data.length
particle-size: 369
particle-size: 369
particle-size: 369
statement: actions ~= [(1,i)]
particle-size: 162
statement: this'.num_actions += 1
particle-size: 369
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 965
particle-size: 965
particle-size: 965
particle-size: 965
particle-size: 965
particle-size: 965
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 52
particle-size: 52
statement: r := this'.front()
particle-size: 52
particle-size: 52
statement: return this'.data[0]
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return r
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = this'.data ~ [x]
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 679
particle-size: 679
statement: return this'.data.length
particle-size: 679
particle-size: 679
particle-size: 679
particle-size: 679
statement: this'.__H0.__run()
particle-size: 238
particle-size: 238
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 238
particle-size: 238
statement: this.id = 0
particle-size: 238
statement: return this
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.data = [x] ~ this'.data
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 238
particle-size: 238
statement: this'.data = this'.data[1..this'.size()]
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.Q_in.popFront()
particle-size: 238
particle-size: 238
statement: this'.data = this'.data[1..this'.size()]
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 679
particle-size: 679
statement: return this'.data.length
particle-size: 679
particle-size: 679
particle-size: 679
particle-size: 679
statement: this'.__H1.__run()
particle-size: 194
particle-size: 194
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 194
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 117
particle-size: 117
statement: this'.data = this'.data[1..this'.size()]
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: this'.__S0.__run()
particle-size: 8
particle-size: 8
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: this'.__S1.__run()
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 606
particle-size: 606
statement: return this'.data.length
particle-size: 606
particle-size: 606
particle-size: 606
particle-size: 606
statement: this'.__S2.__run()
particle-size: 35
particle-size: 35
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 26
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: this'.__S3.__run()
particle-size: 174
particle-size: 174
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 174
particle-size: 174
statement: r := this'.front()
particle-size: 174
particle-size: 174
statement: return this'.data[0]
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return r
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.data = this'.data ~ [x]
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 908
particle-size: 908
particle-size: 908
particle-size: 272
repetition: 23
statement: __d.__step()
particle-size: 272
particle-size: 272
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: (action,node) := this'.scheduler()
particle-size: 269
particle-size: 269
statement: actions := ([]: (R × R)[])
particle-size: 269
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 161
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
loop-index: 1
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
loop-index: 2
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 4
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 21
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 269
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(0,i)]
particle-size: 116
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 269
particle-size: 269
statement: return this'.data.length
particle-size: 269
particle-size: 269
particle-size: 269
statement: actions ~= [(1,i)]
particle-size: 109
statement: this'.num_actions += 1
particle-size: 269
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 657
particle-size: 657
particle-size: 657
particle-size: 657
particle-size: 657
particle-size: 657
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: this'.__H0.__run()
particle-size: 161
particle-size: 161
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 161
particle-size: 161
statement: this.id = 0
particle-size: 161
statement: return this
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.data = [x] ~ this'.data
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 161
particle-size: 161
statement: this'.data = this'.data[1..this'.size()]
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.Q_in.popFront()
particle-size: 161
particle-size: 161
statement: this'.data = this'.data[1..this'.size()]
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: this'.__H1.__run()
particle-size: 162
particle-size: 162
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 162
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 97
particle-size: 97
statement: this'.data = this'.data[1..this'.size()]
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 417
particle-size: 417
statement: return this'.data.length
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: this'.__S0.__run()
particle-size: 4
particle-size: 4
statement: if this'.strategy == 4 {
    this'.strategy = uniformInt(1,2);
    if this'.strategy == 2 {
        this'.strategy = this'.strategy + flip(1 / 2);
    }
}
statement: if this'.strategy == 1 {
    if flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 419
particle-size: 419
statement: return this'.data.length
particle-size: 419
particle-size: 419
particle-size: 419
particle-size: 419
statement: this'.__S1.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 419
particle-size: 419
statement: return this'.data.length
particle-size: 419
particle-size: 419
particle-size: 419
particle-size: 419
statement: this'.__S2.__run()
particle-size: 21
particle-size: 21
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 16
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: this'.__S3.__run()
particle-size: 116
particle-size: 116
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 605
particle-size: 605
particle-size: 605
particle-size: 182
repetition: 24
statement: __d.__step()
particle-size: 182
particle-size: 182
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: return this'.data.length
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 182
statement: (action,node) := this'.scheduler()
particle-size: 179
particle-size: 179
statement: actions := ([]: (R × R)[])
particle-size: 179
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
loop-index: 1
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
loop-index: 2
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 3
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 4
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 5
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
statement: actions ~= [(1,i)]
particle-size: 76
statement: this'.num_actions += 1
particle-size: 179
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this'.front()
particle-size: 76
particle-size: 76
statement: return this'.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 282
particle-size: 282
statement: return this'.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this'.__H0.__run()
particle-size: 100
particle-size: 100
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 100
particle-size: 100
statement: this.id = 0
particle-size: 100
statement: return this
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.data = [x] ~ this'.data
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.Q_in.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 282
particle-size: 282
statement: return this'.data.length
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: this'.__H1.__run()
particle-size: 104
particle-size: 104
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 104
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 242
particle-size: 242
statement: return this'.data.length
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 242
particle-size: 242
statement: return this'.data.length
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: this'.__S1.__run()
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 242
particle-size: 242
statement: return this'.data.length
particle-size: 242
particle-size: 242
particle-size: 242
particle-size: 242
statement: this'.__S2.__run()
particle-size: 8
particle-size: 8
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: this'.__S3.__run()
particle-size: 63
particle-size: 63
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 63
particle-size: 63
statement: r := this'.front()
particle-size: 63
particle-size: 63
statement: return this'.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 117
repetition: 25
statement: __d.__step()
particle-size: 117
particle-size: 117
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (action,node) := this'.scheduler()
particle-size: 114
particle-size: 114
statement: actions := ([]: (R × R)[])
particle-size: 114
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
loop-index: 1
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(0,i)]
particle-size: 76
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
loop-index: 2
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
loop-index: 3
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 5
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
statement: actions ~= [(1,i)]
particle-size: 50
statement: this'.num_actions += 1
particle-size: 114
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 177
particle-size: 177
statement: return this'.data.length
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: this'.__H0.__run()
particle-size: 63
particle-size: 63
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 63
particle-size: 63
statement: this.id = 0
particle-size: 63
statement: return this
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = [x] ~ this'.data
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.Q_in.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 177
particle-size: 177
statement: return this'.data.length
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: this'.__H1.__run()
particle-size: 76
particle-size: 76
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 76
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: this'.Q_in.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this'.__S1.__run()
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if this'.failing == 2 {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
statement: if this'.failing == 1 {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.__S3.__run()
particle-size: 32
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 70
repetition: 26
statement: __d.__step()
particle-size: 70
particle-size: 70
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: return this'.data.length
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: (action,node) := this'.scheduler()
particle-size: 66
particle-size: 66
statement: actions := ([]: (R × R)[])
particle-size: 66
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(0,i)]
particle-size: 36
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
loop-index: 1
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
loop-index: 2
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
loop-index: 3
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 4
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
statement: actions ~= [(1,i)]
particle-size: 27
statement: this'.num_actions += 1
particle-size: 66
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.__H0.__run()
particle-size: 36
particle-size: 36
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 36
particle-size: 36
statement: this.id = 0
particle-size: 36
statement: return this
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = [x] ~ this'.data
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.__H1.__run()
particle-size: 42
particle-size: 42
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 42
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 3)
statement: this'.Q_in.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.__S3.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 44
repetition: 27
statement: __d.__step()
particle-size: 44
particle-size: 44
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: (action,node) := this'.scheduler()
particle-size: 40
particle-size: 40
statement: actions := ([]: (R × R)[])
particle-size: 40
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 1
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 2
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 3
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 4
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 5
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(1,i)]
particle-size: 9
statement: this'.num_actions += 1
particle-size: 40
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.__H0.__run()
particle-size: 22
particle-size: 22
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: this.id = 0
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = [x] ~ this'.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.__H1.__run()
particle-size: 27
particle-size: 27
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 27
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 1)
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 3)
statement: this'.Q_in.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S3.__run()
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 26
repetition: 28
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this'.scheduler()
particle-size: 22
particle-size: 22
statement: actions := ([]: (R × R)[])
particle-size: 22
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 1
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 2
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 3
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 4
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 5
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 22
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__H0.__run()
particle-size: 8
particle-size: 8
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: this.id = 0
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__H1.__run()
particle-size: 14
particle-size: 14
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 14
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 2)
statement: if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 3)
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 12
repetition: 29
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: actions := ([]: (R × R)[])
particle-size: 8
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 1
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 3
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 5
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.num_actions += 1
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.__H0.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: this.id = 0
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = this'.num_arrived + 1
particle-size: 4
statement: if this'.num_arrived == 1 {
    observe(this'.Q_in.data[0][0].id == 1);
} else if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: if this'.num_arrived == 2 {
    observe(this'.Q_in.data[0][0].id == 2);
} else if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: if this'.num_arrived == 3 {
    observe(this'.Q_in.data[0][0].id == 3);
}
statement: observe(this'.Q_in.data[0][0].id == 3)
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 8
repetition: 30
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: q₁ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 8
statement: q₂ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 8
statement: q₃ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 8
statement: q₄ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 8
statement: q₅ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 8
statement: q₆ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 8
statement: q₇ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 8
statement: q₈ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 8
statement: q₉ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 0) != 0)
particle-size: 8
statement: q₁₀ := Expectation(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 3 && (if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2 && (if 4 == 4 {
    __d.__S2.failing;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 8
statement: return (q₁,q₂,q₃,q₄,q₅,q₆,q₇,q₈,q₉,q₁₀)
particle-size: 8
p[r_] := δ_r[(95643630613/107495424000,41922792469/107495424000,1/4,999/4000,35204328469/107495424000,0,0,0,0,0)]

real	3m22.737s
user	2m36.528s
sys	0m46.192s
