statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: this.route3 = 0
particle-size: 1
statement: this.shortest1 = 0
particle-size: 1
statement: this.shortest2 = 0
particle-size: 1
statement: this.shortest3 = 0
particle-size: 1
statement: this.nshortest = 0
particle-size: 1
statement: this.which = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 40 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.__H0.__run()
particle-size: 2
particle-size: 2
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.pkt_count = this.pkt_count + 1
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 1
statement: this.route2 = 3
particle-size: 1
statement: this.route3 = 2 + 1
particle-size: 1
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 1
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 1
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 3
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 5
repetition: 3
statement: __d.__step()
particle-size: 5
particle-size: 5
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (action,node) := this.scheduler()
particle-size: 5
particle-size: 5
statement: actions := ([]: (R × R)[])
particle-size: 5
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 2
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 4
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 5
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.__H0.__run()
particle-size: 5
particle-size: 5
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = [x] ~ this.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = [x] ~ this.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.pkt_count = this.pkt_count + 1
particle-size: 4
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 1
statement: this.route2 = 3
particle-size: 1
statement: this.route3 = 2 + 1
particle-size: 1
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 1
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 1
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 3
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 10
repetition: 4
statement: __d.__step()
particle-size: 10
particle-size: 10
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: (action,node) := this.scheduler()
particle-size: 10
particle-size: 10
statement: actions := ([]: (R × R)[])
particle-size: 10
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 1
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 2
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 4
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 5
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.__H0.__run()
particle-size: 10
particle-size: 10
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = [x] ~ this.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = [x] ~ this.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.pkt_count = this.pkt_count + 1
particle-size: 7
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 3
statement: this.route2 = 3
particle-size: 3
statement: this.route3 = 2 + 1
particle-size: 3
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 3
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 3
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 3
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 3
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 3
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 3
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 3
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 9
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.__S3.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 20
repetition: 5
statement: __d.__step()
particle-size: 20
particle-size: 20
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: (action,node) := this.scheduler()
particle-size: 20
particle-size: 20
statement: actions := ([]: (R × R)[])
particle-size: 20
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 1
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
loop-index: 2
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 3
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
loop-index: 5
particle-size: 20
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this.__H0.__run()
particle-size: 20
particle-size: 20
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this.data = [x] ~ this.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = [x] ~ this.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.pkt_count = this.pkt_count + 1
particle-size: 9
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this.__S0.__run()
particle-size: 7
particle-size: 7
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 7
statement: this.route2 = 3
particle-size: 7
statement: this.route3 = 2 + 1
particle-size: 7
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 7
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 7
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 7
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 7
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 7
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 7
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 7
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 21
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 43
particle-size: 43
statement: return this.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 43
particle-size: 43
statement: return this.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 43
particle-size: 43
statement: return this.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this.__S3.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 42
repetition: 6
statement: __d.__step()
particle-size: 42
particle-size: 42
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: (action,node) := this.scheduler()
particle-size: 42
particle-size: 42
statement: actions := ([]: (R × R)[])
particle-size: 42
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 1
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
loop-index: 2
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 21
loop-index: 3
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
loop-index: 5
particle-size: 42
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 21
particle-size: 21
statement: r := this.front()
particle-size: 21
particle-size: 21
statement: return this.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this.popFront()
particle-size: 21
particle-size: 21
statement: this.data = this.data[1..this.size()]
particle-size: 21
particle-size: 21
statement: return this.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.__H0.__run()
particle-size: 41
particle-size: 41
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 41
particle-size: 41
statement: return this
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.data = [x] ~ this.data
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 17
particle-size: 17
statement: return this
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = [x] ~ this.data
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.pkt_count = this.pkt_count + 1
particle-size: 17
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.__H1.__run()
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.__S0.__run()
particle-size: 15
particle-size: 15
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 15
statement: this.route2 = 3
particle-size: 15
statement: this.route3 = 2 + 1
particle-size: 15
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 15
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 15
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 15
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 15
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 15
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 15
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 15
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 45
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.__S1.__run()
particle-size: 3
particle-size: 3
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.__S3.__run()
particle-size: 3
particle-size: 3
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 77
repetition: 7
statement: __d.__step()
particle-size: 77
particle-size: 77
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: (action,node) := this.scheduler()
particle-size: 77
particle-size: 77
statement: actions := ([]: (R × R)[])
particle-size: 77
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 75
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 1
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
loop-index: 2
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(1,i)]
particle-size: 48
loop-index: 3
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 4
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 77
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 77
particle-size: 77
statement: return this.data.length
particle-size: 77
particle-size: 77
particle-size: 77
statement: actions ~= [(1,i)]
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this.front()
particle-size: 38
particle-size: 38
statement: return this.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.popFront()
particle-size: 38
particle-size: 38
statement: this.data = this.data[1..this.size()]
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this.size() >= 2 {
    return ();
}
particle-size: 16
particle-size: 16
statement: return this.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this.size() >= 2 {
    return ();
}
particle-size: 16
particle-size: 16
statement: return this.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this.size() >= 2 {
    return ();
}
particle-size: 16
particle-size: 16
statement: return this.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.__H0.__run()
particle-size: 75
particle-size: 75
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 75
particle-size: 75
statement: return this
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this.data = [x] ~ this.data
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = [x] ~ this.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.pkt_count = this.pkt_count + 1
particle-size: 18
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.Q_in.popFront()
particle-size: 57
particle-size: 57
statement: this.data = this.data[1..this.size()]
particle-size: 57
particle-size: 57
statement: return this.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this.Q_in.popFront()
particle-size: 57
particle-size: 57
statement: this.data = this.data[1..this.size()]
particle-size: 57
particle-size: 57
statement: return this.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.__H1.__run()
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.__S0.__run()
particle-size: 26
particle-size: 26
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 26
statement: this.route2 = 3
particle-size: 26
statement: this.route3 = 2 + 1
particle-size: 26
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 26
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 26
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 26
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 26
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 26
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 26
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 26
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 78
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this.front()
particle-size: 26
particle-size: 26
statement: return this.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.popFront()
particle-size: 26
particle-size: 26
statement: this.data = this.data[1..this.size()]
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 169
particle-size: 169
statement: return this.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this.__S1.__run()
particle-size: 7
particle-size: 7
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 169
particle-size: 169
statement: return this.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 169
particle-size: 169
statement: return this.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this.__S3.__run()
particle-size: 7
particle-size: 7
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 136
repetition: 8
statement: __d.__step()
particle-size: 136
particle-size: 136
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: (action,node) := this.scheduler()
particle-size: 136
particle-size: 136
statement: actions := ([]: (R × R)[])
particle-size: 136
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 128
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 1
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
loop-index: 2
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 81
loop-index: 3
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 136
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 7
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 367
particle-size: 367
particle-size: 367
particle-size: 367
particle-size: 367
particle-size: 367
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this.front()
particle-size: 56
particle-size: 56
statement: return this.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this.popFront()
particle-size: 56
particle-size: 56
statement: this.data = this.data[1..this.size()]
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 81
particle-size: 81
statement: r := this.front()
particle-size: 81
particle-size: 81
statement: return this.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this.popFront()
particle-size: 81
particle-size: 81
statement: this.data = this.data[1..this.size()]
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.data = this.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.data = this.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 215
particle-size: 215
statement: return this.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this.__H0.__run()
particle-size: 128
particle-size: 128
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 128
particle-size: 128
statement: return this
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: this.data = [x] ~ this.data
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 23
particle-size: 23
statement: return this
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = [x] ~ this.data
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.pkt_count = this.pkt_count + 1
particle-size: 23
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 23
particle-size: 23
statement: r := this.front()
particle-size: 23
particle-size: 23
statement: return this.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.popFront()
particle-size: 23
particle-size: 23
statement: this.data = this.data[1..this.size()]
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if this.size() >= 2 {
    return ();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.Q_in.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.Q_in.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 215
particle-size: 215
statement: return this.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this.__H1.__run()
particle-size: 3
particle-size: 3
statement: this.pkt_count = this.pkt_count + 1
particle-size: 3
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 215
particle-size: 215
statement: return this.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this.__S0.__run()
particle-size: 44
particle-size: 44
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 44
statement: this.route2 = 3
particle-size: 44
statement: this.route3 = 2 + 1
particle-size: 44
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 44
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 44
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 44
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 44
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 44
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 44
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 44
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 132
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 44
particle-size: 44
statement: r := this.front()
particle-size: 44
particle-size: 44
statement: return this.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 44
particle-size: 44
statement: r := this.front()
particle-size: 44
particle-size: 44
statement: return this.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 44
particle-size: 44
statement: r := this.front()
particle-size: 44
particle-size: 44
statement: return this.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: this.__S1.__run()
particle-size: 18
particle-size: 18
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: this.__S2.__run()
particle-size: 3
particle-size: 3
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 303
particle-size: 303
statement: return this.data.length
particle-size: 303
particle-size: 303
particle-size: 303
particle-size: 303
statement: this.__S3.__run()
particle-size: 19
particle-size: 19
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 19
particle-size: 19
statement: r := this.front()
particle-size: 19
particle-size: 19
statement: return this.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.data = this.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 455
particle-size: 455
particle-size: 455
particle-size: 221
repetition: 9
statement: __d.__step()
particle-size: 221
particle-size: 221
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: (action,node) := this.scheduler()
particle-size: 221
particle-size: 221
statement: actions := ([]: (R × R)[])
particle-size: 221
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 208
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(1,i)]
particle-size: 72
loop-index: 1
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
loop-index: 2
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(1,i)]
particle-size: 135
loop-index: 3
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 4
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 5
particle-size: 221
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(0,i)]
particle-size: 33
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 221
particle-size: 221
statement: return this.data.length
particle-size: 221
particle-size: 221
particle-size: 221
statement: actions ~= [(1,i)]
particle-size: 19
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 72
particle-size: 72
statement: r := this.front()
particle-size: 72
particle-size: 72
statement: return this.data[0]
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.popFront()
particle-size: 72
particle-size: 72
statement: this.data = this.data[1..this.size()]
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return r
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 72
particle-size: 72
particle-size: 72
statement: if this.size() >= 2 {
    return ();
}
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.data = this.data ~ [x]
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 135
particle-size: 135
statement: r := this.front()
particle-size: 135
particle-size: 135
statement: return this.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this.popFront()
particle-size: 135
particle-size: 135
statement: this.data = this.data[1..this.size()]
particle-size: 135
particle-size: 135
statement: return this.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 35
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this.data = this.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this.data = this.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 19
particle-size: 19
statement: r := this.front()
particle-size: 19
particle-size: 19
statement: return this.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.data = this.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 351
particle-size: 351
statement: return this.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: this.__H0.__run()
particle-size: 208
particle-size: 208
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 208
particle-size: 208
statement: return this
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: this.data = [x] ~ this.data
particle-size: 208
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = [x] ~ this.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.pkt_count = this.pkt_count + 1
particle-size: 22
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.Q_in.popFront()
particle-size: 186
particle-size: 186
statement: this.data = this.data[1..this.size()]
particle-size: 186
particle-size: 186
statement: return this.data.length
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: this.Q_in.popFront()
particle-size: 186
particle-size: 186
statement: this.data = this.data[1..this.size()]
particle-size: 186
particle-size: 186
statement: return this.data.length
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 208
particle-size: 208
particle-size: 208
particle-size: 208
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 351
particle-size: 351
statement: return this.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: this.__H1.__run()
particle-size: 7
particle-size: 7
statement: this.pkt_count = this.pkt_count + 1
particle-size: 7
statement: this.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 351
particle-size: 351
statement: return this.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: this.__S0.__run()
particle-size: 64
particle-size: 64
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 64
statement: this.route2 = 3
particle-size: 64
statement: this.route3 = 2 + 1
particle-size: 64
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 64
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 64
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 64
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 64
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 64
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 64
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 64
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 192
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 64
particle-size: 64
statement: r := this.front()
particle-size: 64
particle-size: 64
statement: return this.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.popFront()
particle-size: 64
particle-size: 64
statement: this.data = this.data[1..this.size()]
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 64
particle-size: 64
statement: r := this.front()
particle-size: 64
particle-size: 64
statement: return this.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.popFront()
particle-size: 64
particle-size: 64
statement: this.data = this.data[1..this.size()]
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 64
particle-size: 64
statement: r := this.front()
particle-size: 64
particle-size: 64
statement: return this.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this.popFront()
particle-size: 64
particle-size: 64
statement: this.data = this.data[1..this.size()]
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 479
particle-size: 479
statement: return this.data.length
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: this.__S1.__run()
particle-size: 32
particle-size: 32
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 32
particle-size: 32
statement: r := this.front()
particle-size: 32
particle-size: 32
statement: return this.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.popFront()
particle-size: 32
particle-size: 32
statement: this.data = this.data[1..this.size()]
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.data = this.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 479
particle-size: 479
statement: return this.data.length
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: this.__S2.__run()
particle-size: 7
particle-size: 7
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 479
particle-size: 479
statement: return this.data.length
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: this.__S3.__run()
particle-size: 33
particle-size: 33
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 726
particle-size: 726
particle-size: 726
particle-size: 358
repetition: 10
statement: __d.__step()
particle-size: 358
particle-size: 358
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
particle-size: 358
statement: (action,node) := this.scheduler()
particle-size: 358
particle-size: 358
statement: actions := ([]: (R × R)[])
particle-size: 358
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 322
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(1,i)]
particle-size: 87
loop-index: 1
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
loop-index: 2
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 83
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(1,i)]
particle-size: 222
loop-index: 3
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 65
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 4
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 5
particle-size: 358
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(0,i)]
particle-size: 68
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 358
particle-size: 358
statement: return this.data.length
particle-size: 358
particle-size: 358
particle-size: 358
statement: actions ~= [(1,i)]
particle-size: 33
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 956
particle-size: 956
particle-size: 956
particle-size: 956
particle-size: 956
particle-size: 956
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 87
particle-size: 87
statement: r := this.front()
particle-size: 87
particle-size: 87
statement: return this.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this.popFront()
particle-size: 87
particle-size: 87
statement: this.data = this.data[1..this.size()]
particle-size: 87
particle-size: 87
statement: return this.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 87
particle-size: 87
particle-size: 87
statement: if this.size() >= 2 {
    return ();
}
particle-size: 87
particle-size: 87
statement: return this.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this.data = this.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 222
particle-size: 222
statement: r := this.front()
particle-size: 222
particle-size: 222
statement: return this.data[0]
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: this.popFront()
particle-size: 222
particle-size: 222
statement: this.data = this.data[1..this.size()]
particle-size: 222
particle-size: 222
statement: return this.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return r
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: if this.size() >= 2 {
    return ();
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 54
statement: this.data = this.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: if this.size() >= 2 {
    return ();
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: if this.size() >= 2 {
    return ();
}
particle-size: 74
particle-size: 74
statement: return this.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this.front()
particle-size: 32
particle-size: 32
statement: return this.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.popFront()
particle-size: 32
particle-size: 32
statement: this.data = this.data[1..this.size()]
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.data = this.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 381
particle-size: 381
statement: return this.data.length
particle-size: 381
particle-size: 381
particle-size: 381
particle-size: 381
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 575
particle-size: 575
statement: return this.data.length
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: this.__H0.__run()
particle-size: 322
particle-size: 322
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 322
particle-size: 322
statement: return this
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: this.data = [x] ~ this.data
particle-size: 322
statement: return ()
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 25
particle-size: 25
statement: return this
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = [x] ~ this.data
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.pkt_count = this.pkt_count + 1
particle-size: 25
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 25
particle-size: 25
statement: r := this.front()
particle-size: 25
particle-size: 25
statement: return this.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.popFront()
particle-size: 25
particle-size: 25
statement: this.data = this.data[1..this.size()]
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if this.size() >= 2 {
    return ();
}
particle-size: 25
particle-size: 25
statement: return this.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.data = this.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this.Q_in.popFront()
particle-size: 297
particle-size: 297
statement: this.data = this.data[1..this.size()]
particle-size: 297
particle-size: 297
statement: return this.data.length
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
statement: return ()
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
statement: this.Q_in.popFront()
particle-size: 297
particle-size: 297
statement: this.data = this.data[1..this.size()]
particle-size: 297
particle-size: 297
statement: return this.data.length
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
statement: return ()
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 297
statement: return ()
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 575
particle-size: 575
statement: return this.data.length
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: this.__H1.__run()
particle-size: 19
particle-size: 19
statement: this.pkt_count = this.pkt_count + 1
particle-size: 19
statement: this.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 575
particle-size: 575
statement: return this.data.length
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: this.__S0.__run()
particle-size: 83
particle-size: 83
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 83
statement: this.route2 = 3
particle-size: 83
statement: this.route3 = 2 + 1
particle-size: 83
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 83
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 83
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 83
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 83
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 83
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 83
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 83
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 249
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 83
particle-size: 83
statement: r := this.front()
particle-size: 83
particle-size: 83
statement: return this.data[0]
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: this.popFront()
particle-size: 83
particle-size: 83
statement: this.data = this.data[1..this.size()]
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return r
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if this.size() >= 2 {
    return ();
}
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 83
particle-size: 83
particle-size: 83
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 83
particle-size: 83
statement: r := this.front()
particle-size: 83
particle-size: 83
statement: return this.data[0]
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: this.popFront()
particle-size: 83
particle-size: 83
statement: this.data = this.data[1..this.size()]
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return r
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if this.size() >= 2 {
    return ();
}
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 83
particle-size: 83
particle-size: 83
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 83
particle-size: 83
statement: r := this.front()
particle-size: 83
particle-size: 83
statement: return this.data[0]
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: this.popFront()
particle-size: 83
particle-size: 83
statement: this.data = this.data[1..this.size()]
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return r
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if this.size() >= 2 {
    return ();
}
particle-size: 83
particle-size: 83
statement: return this.data.length
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 83
particle-size: 83
particle-size: 83
statement: return ()
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 741
particle-size: 741
statement: return this.data.length
particle-size: 741
particle-size: 741
particle-size: 741
particle-size: 741
statement: this.__S1.__run()
particle-size: 65
particle-size: 65
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 741
particle-size: 741
statement: return this.data.length
particle-size: 741
particle-size: 741
particle-size: 741
particle-size: 741
statement: this.__S2.__run()
particle-size: 18
particle-size: 18
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 741
particle-size: 741
statement: return this.data.length
particle-size: 741
particle-size: 741
particle-size: 741
particle-size: 741
statement: this.__S3.__run()
particle-size: 68
particle-size: 68
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 68
particle-size: 68
statement: r := this.front()
particle-size: 68
particle-size: 68
statement: return this.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.popFront()
particle-size: 68
particle-size: 68
statement: this.data = this.data[1..this.size()]
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.data = this.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 1122
particle-size: 1122
particle-size: 1122
particle-size: 497
repetition: 11
statement: __d.__step()
particle-size: 497
particle-size: 497
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: (action,node) := this.scheduler()
particle-size: 497
particle-size: 497
statement: actions := ([]: (R × R)[])
particle-size: 497
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 446
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(1,i)]
particle-size: 96
loop-index: 1
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 33
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
loop-index: 2
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 96
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(1,i)]
particle-size: 285
loop-index: 3
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(1,i)]
particle-size: 65
loop-index: 4
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 5
particle-size: 497
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(0,i)]
particle-size: 107
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 497
particle-size: 497
statement: return this.data.length
particle-size: 497
particle-size: 497
particle-size: 497
statement: actions ~= [(1,i)]
particle-size: 68
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1346
particle-size: 1346
particle-size: 1346
particle-size: 1346
particle-size: 1346
particle-size: 1346
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 96
particle-size: 96
statement: r := this.front()
particle-size: 96
particle-size: 96
statement: return this.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.popFront()
particle-size: 96
particle-size: 96
statement: this.data = this.data[1..this.size()]
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this.size() >= 2 {
    return ();
}
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.data = this.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 285
particle-size: 285
statement: r := this.front()
particle-size: 285
particle-size: 285
statement: return this.data[0]
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: this.popFront()
particle-size: 285
particle-size: 285
statement: this.data = this.data[1..this.size()]
particle-size: 285
particle-size: 285
statement: return this.data.length
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return ()
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return r
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: if this.size() >= 2 {
    return ();
}
particle-size: 95
particle-size: 95
statement: return this.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 95
particle-size: 95
particle-size: 95
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: if this.size() >= 2 {
    return ();
}
particle-size: 95
particle-size: 95
statement: return this.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 95
particle-size: 95
particle-size: 95
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 95
particle-size: 95
particle-size: 95
statement: if this.size() >= 2 {
    return ();
}
particle-size: 95
particle-size: 95
statement: return this.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 95
particle-size: 95
particle-size: 95
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 532
particle-size: 532
statement: return this.data.length
particle-size: 532
particle-size: 532
particle-size: 532
particle-size: 532
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 68
particle-size: 68
statement: r := this.front()
particle-size: 68
particle-size: 68
statement: return this.data[0]
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.popFront()
particle-size: 68
particle-size: 68
statement: this.data = this.data[1..this.size()]
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return r
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.data = this.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: this.__H0.__run()
particle-size: 446
particle-size: 446
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 446
particle-size: 446
statement: return this
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: this.data = [x] ~ this.data
particle-size: 446
statement: return ()
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 24
particle-size: 24
statement: return this
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = [x] ~ this.data
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.pkt_count = this.pkt_count + 1
particle-size: 24
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.Q_in.popFront()
particle-size: 422
particle-size: 422
statement: this.data = this.data[1..this.size()]
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return ()
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: this.Q_in.popFront()
particle-size: 422
particle-size: 422
statement: this.data = this.data[1..this.size()]
particle-size: 422
particle-size: 422
statement: return this.data.length
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return ()
particle-size: 422
particle-size: 422
particle-size: 422
particle-size: 422
statement: return ()
particle-size: 446
particle-size: 446
particle-size: 446
particle-size: 446
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: this.__H1.__run()
particle-size: 33
particle-size: 33
statement: this.pkt_count = this.pkt_count + 1
particle-size: 33
statement: this.Q_in.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: this.__S0.__run()
particle-size: 96
particle-size: 96
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 96
statement: this.route2 = 3
particle-size: 96
statement: this.route3 = 2 + 1
particle-size: 96
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 96
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 96
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 96
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 96
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 96
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 96
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 96
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 288
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 96
particle-size: 96
statement: r := this.front()
particle-size: 96
particle-size: 96
statement: return this.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.popFront()
particle-size: 96
particle-size: 96
statement: this.data = this.data[1..this.size()]
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this.size() >= 2 {
    return ();
}
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 96
particle-size: 96
statement: r := this.front()
particle-size: 96
particle-size: 96
statement: return this.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.popFront()
particle-size: 96
particle-size: 96
statement: this.data = this.data[1..this.size()]
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this.size() >= 2 {
    return ();
}
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 96
particle-size: 96
statement: r := this.front()
particle-size: 96
particle-size: 96
statement: return this.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this.popFront()
particle-size: 96
particle-size: 96
statement: this.data = this.data[1..this.size()]
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this.size() >= 2 {
    return ();
}
particle-size: 96
particle-size: 96
statement: return this.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1006
particle-size: 1006
statement: return this.data.length
particle-size: 1006
particle-size: 1006
particle-size: 1006
particle-size: 1006
statement: this.__S1.__run()
particle-size: 100
particle-size: 100
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this.size() >= 2 {
    return ();
}
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1006
particle-size: 1006
statement: return this.data.length
particle-size: 1006
particle-size: 1006
particle-size: 1006
particle-size: 1006
statement: this.__S2.__run()
particle-size: 32
particle-size: 32
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 32
particle-size: 32
statement: r := this.front()
particle-size: 32
particle-size: 32
statement: return this.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.popFront()
particle-size: 32
particle-size: 32
statement: this.data = this.data[1..this.size()]
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.data = this.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1006
particle-size: 1006
statement: return this.data.length
particle-size: 1006
particle-size: 1006
particle-size: 1006
particle-size: 1006
statement: this.__S3.__run()
particle-size: 107
particle-size: 107
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 107
particle-size: 107
statement: r := this.front()
particle-size: 107
particle-size: 107
statement: return this.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.data = this.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 1538
particle-size: 1538
particle-size: 1538
particle-size: 664
repetition: 12
statement: __d.__step()
particle-size: 664
particle-size: 664
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: (action,node) := this.scheduler()
particle-size: 663
particle-size: 663
statement: actions := ([]: (R × R)[])
particle-size: 663
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 572
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(1,i)]
particle-size: 106
loop-index: 1
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 68
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
loop-index: 2
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(1,i)]
particle-size: 339
loop-index: 3
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 133
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(1,i)]
particle-size: 100
loop-index: 4
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 65
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 5
particle-size: 663
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(0,i)]
particle-size: 151
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 663
particle-size: 663
statement: return this.data.length
particle-size: 663
particle-size: 663
particle-size: 663
statement: actions ~= [(1,i)]
particle-size: 107
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1777
particle-size: 1777
particle-size: 1777
particle-size: 1777
particle-size: 1777
particle-size: 1777
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 106
particle-size: 106
statement: r := this.front()
particle-size: 106
particle-size: 106
statement: return this.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this.popFront()
particle-size: 106
particle-size: 106
statement: this.data = this.data[1..this.size()]
particle-size: 106
particle-size: 106
statement: return this.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this.size() >= 2 {
    return ();
}
particle-size: 106
particle-size: 106
statement: return this.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this.data = this.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 339
particle-size: 339
statement: r := this.front()
particle-size: 339
particle-size: 339
statement: return this.data[0]
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: this.popFront()
particle-size: 339
particle-size: 339
statement: this.data = this.data[1..this.size()]
particle-size: 339
particle-size: 339
statement: return this.data.length
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: return ()
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: return r
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this.size() >= 2 {
    return ();
}
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this.front()
particle-size: 32
particle-size: 32
statement: return this.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.popFront()
particle-size: 32
particle-size: 32
statement: this.data = this.data[1..this.size()]
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this.data = this.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 107
particle-size: 107
statement: r := this.front()
particle-size: 107
particle-size: 107
statement: return this.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.data = this.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1093
particle-size: 1093
statement: return this.data.length
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: this.__H0.__run()
particle-size: 572
particle-size: 572
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 572
particle-size: 572
statement: return this
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: this.data = [x] ~ this.data
particle-size: 572
statement: return ()
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = [x] ~ this.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.pkt_count = this.pkt_count + 1
particle-size: 22
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.Q_in.popFront()
particle-size: 550
particle-size: 550
statement: this.data = this.data[1..this.size()]
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
statement: return ()
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
statement: this.Q_in.popFront()
particle-size: 550
particle-size: 550
statement: this.data = this.data[1..this.size()]
particle-size: 550
particle-size: 550
statement: return this.data.length
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
statement: return ()
particle-size: 550
particle-size: 550
particle-size: 550
particle-size: 550
statement: return ()
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1093
particle-size: 1093
statement: return this.data.length
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: this.__H1.__run()
particle-size: 68
particle-size: 68
statement: this.pkt_count = this.pkt_count + 1
particle-size: 68
statement: this.Q_in.popFront()
particle-size: 68
particle-size: 68
statement: this.data = this.data[1..this.size()]
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1093
particle-size: 1093
statement: return this.data.length
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: this.__S0.__run()
particle-size: 104
particle-size: 104
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 104
statement: this.route2 = 3
particle-size: 104
statement: this.route3 = 2 + 1
particle-size: 104
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 104
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 104
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 104
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 104
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 104
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 104
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 104
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 312
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 104
particle-size: 104
statement: r := this.front()
particle-size: 104
particle-size: 104
statement: return this.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.popFront()
particle-size: 104
particle-size: 104
statement: this.data = this.data[1..this.size()]
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this.size() >= 2 {
    return ();
}
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.data = this.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 104
particle-size: 104
statement: r := this.front()
particle-size: 104
particle-size: 104
statement: return this.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.popFront()
particle-size: 104
particle-size: 104
statement: this.data = this.data[1..this.size()]
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this.size() >= 2 {
    return ();
}
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.data = this.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 104
particle-size: 104
statement: r := this.front()
particle-size: 104
particle-size: 104
statement: return this.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.popFront()
particle-size: 104
particle-size: 104
statement: this.data = this.data[1..this.size()]
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this.size() >= 2 {
    return ();
}
particle-size: 104
particle-size: 104
statement: return this.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this.data = this.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 312
particle-size: 312
particle-size: 312
particle-size: 312
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1301
particle-size: 1301
statement: return this.data.length
particle-size: 1301
particle-size: 1301
particle-size: 1301
particle-size: 1301
statement: this.__S1.__run()
particle-size: 133
particle-size: 133
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 133
particle-size: 133
statement: r := this.front()
particle-size: 133
particle-size: 133
statement: return this.data[0]
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this.popFront()
particle-size: 133
particle-size: 133
statement: this.data = this.data[1..this.size()]
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return r
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if this.size() >= 2 {
    return ();
}
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: this.data = this.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1301
particle-size: 1301
statement: return this.data.length
particle-size: 1301
particle-size: 1301
particle-size: 1301
particle-size: 1301
statement: this.__S2.__run()
particle-size: 65
particle-size: 65
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1301
particle-size: 1301
statement: return this.data.length
particle-size: 1301
particle-size: 1301
particle-size: 1301
particle-size: 1301
statement: this.__S3.__run()
particle-size: 151
particle-size: 151
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 151
particle-size: 151
statement: r := this.front()
particle-size: 151
particle-size: 151
statement: return this.data[0]
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this.popFront()
particle-size: 151
particle-size: 151
statement: this.data = this.data[1..this.size()]
particle-size: 151
particle-size: 151
statement: return this.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return r
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if this.size() >= 2 {
    return ();
}
particle-size: 151
particle-size: 151
statement: return this.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this.data = this.data ~ [x]
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 1986
particle-size: 1986
particle-size: 1986
particle-size: 796
repetition: 13
statement: __d.__step()
particle-size: 796
particle-size: 796
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: return this.data.length
particle-size: 796
particle-size: 796
particle-size: 796
particle-size: 796
statement: (action,node) := this.scheduler()
particle-size: 795
particle-size: 795
statement: actions := ([]: (R × R)[])
particle-size: 795
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 662
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(1,i)]
particle-size: 106
loop-index: 1
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 107
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
loop-index: 2
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 112
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(1,i)]
particle-size: 357
loop-index: 3
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 155
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(1,i)]
particle-size: 134
loop-index: 4
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(1,i)]
particle-size: 65
loop-index: 5
particle-size: 795
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(0,i)]
particle-size: 187
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 795
particle-size: 795
statement: return this.data.length
particle-size: 795
particle-size: 795
particle-size: 795
statement: actions ~= [(1,i)]
particle-size: 152
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2137
particle-size: 2137
particle-size: 2137
particle-size: 2137
particle-size: 2137
particle-size: 2137
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 106
particle-size: 106
statement: r := this.front()
particle-size: 106
particle-size: 106
statement: return this.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this.popFront()
particle-size: 106
particle-size: 106
statement: this.data = this.data[1..this.size()]
particle-size: 106
particle-size: 106
statement: return this.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this.size() >= 2 {
    return ();
}
particle-size: 106
particle-size: 106
statement: return this.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this.data = this.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 357
particle-size: 357
statement: r := this.front()
particle-size: 357
particle-size: 357
statement: return this.data[0]
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: this.popFront()
particle-size: 357
particle-size: 357
statement: this.data = this.data[1..this.size()]
particle-size: 357
particle-size: 357
statement: return this.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return r
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: if this.size() >= 2 {
    return ();
}
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 60
statement: this.data = this.data ~ [x]
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: if this.size() >= 2 {
    return ();
}
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: if this.size() >= 2 {
    return ();
}
particle-size: 119
particle-size: 119
statement: return this.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this.front()
particle-size: 134
particle-size: 134
statement: return this.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.popFront()
particle-size: 134
particle-size: 134
statement: this.data = this.data[1..this.size()]
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.data = this.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 65
particle-size: 65
statement: r := this.front()
particle-size: 65
particle-size: 65
statement: return this.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.popFront()
particle-size: 65
particle-size: 65
statement: this.data = this.data[1..this.size()]
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 152
particle-size: 152
statement: r := this.front()
particle-size: 152
particle-size: 152
statement: return this.data[0]
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.popFront()
particle-size: 152
particle-size: 152
statement: this.data = this.data[1..this.size()]
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return r
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 152
particle-size: 152
particle-size: 152
statement: if this.size() >= 2 {
    return ();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.data = this.data ~ [x]
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1323
particle-size: 1323
statement: return this.data.length
particle-size: 1323
particle-size: 1323
particle-size: 1323
particle-size: 1323
statement: this.__H0.__run()
particle-size: 662
particle-size: 662
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 662
particle-size: 662
statement: return this
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
statement: this.data = [x] ~ this.data
particle-size: 662
statement: return ()
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = [x] ~ this.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.pkt_count = this.pkt_count + 1
particle-size: 18
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.Q_in.popFront()
particle-size: 644
particle-size: 644
statement: this.data = this.data[1..this.size()]
particle-size: 644
particle-size: 644
statement: return this.data.length
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: return ()
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: this.Q_in.popFront()
particle-size: 644
particle-size: 644
statement: this.data = this.data[1..this.size()]
particle-size: 644
particle-size: 644
statement: return this.data.length
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: return ()
particle-size: 644
particle-size: 644
particle-size: 644
particle-size: 644
statement: return ()
particle-size: 662
particle-size: 662
particle-size: 662
particle-size: 662
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1323
particle-size: 1323
statement: return this.data.length
particle-size: 1323
particle-size: 1323
particle-size: 1323
particle-size: 1323
statement: this.__H1.__run()
particle-size: 107
particle-size: 107
statement: this.pkt_count = this.pkt_count + 1
particle-size: 107
statement: this.Q_in.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1323
particle-size: 1323
statement: return this.data.length
particle-size: 1323
particle-size: 1323
particle-size: 1323
particle-size: 1323
statement: this.__S0.__run()
particle-size: 112
particle-size: 112
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 112
statement: this.route2 = 3
particle-size: 112
statement: this.route3 = 2 + 1
particle-size: 112
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 112
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 112
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 112
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 112
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 112
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 112
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 112
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 336
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 112
particle-size: 112
statement: r := this.front()
particle-size: 112
particle-size: 112
statement: return this.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.popFront()
particle-size: 112
particle-size: 112
statement: this.data = this.data[1..this.size()]
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 112
particle-size: 112
statement: r := this.front()
particle-size: 112
particle-size: 112
statement: return this.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.popFront()
particle-size: 112
particle-size: 112
statement: this.data = this.data[1..this.size()]
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 112
particle-size: 112
statement: r := this.front()
particle-size: 112
particle-size: 112
statement: return this.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.popFront()
particle-size: 112
particle-size: 112
statement: this.data = this.data[1..this.size()]
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1547
particle-size: 1547
statement: return this.data.length
particle-size: 1547
particle-size: 1547
particle-size: 1547
particle-size: 1547
statement: this.__S1.__run()
particle-size: 155
particle-size: 155
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 155
particle-size: 155
statement: r := this.front()
particle-size: 155
particle-size: 155
statement: return this.data[0]
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: this.popFront()
particle-size: 155
particle-size: 155
statement: this.data = this.data[1..this.size()]
particle-size: 155
particle-size: 155
statement: return this.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return r
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if this.size() >= 2 {
    return ();
}
particle-size: 155
particle-size: 155
statement: return this.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: this.data = this.data ~ [x]
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1547
particle-size: 1547
statement: return this.data.length
particle-size: 1547
particle-size: 1547
particle-size: 1547
particle-size: 1547
statement: this.__S2.__run()
particle-size: 100
particle-size: 100
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this.size() >= 2 {
    return ();
}
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1547
particle-size: 1547
statement: return this.data.length
particle-size: 1547
particle-size: 1547
particle-size: 1547
particle-size: 1547
statement: this.__S3.__run()
particle-size: 187
particle-size: 187
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 187
particle-size: 187
statement: r := this.front()
particle-size: 187
particle-size: 187
statement: return this.data[0]
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this.popFront()
particle-size: 187
particle-size: 187
statement: this.data = this.data[1..this.size()]
particle-size: 187
particle-size: 187
statement: return this.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return r
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if this.size() >= 2 {
    return ();
}
particle-size: 187
particle-size: 187
statement: return this.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this.data = this.data ~ [x]
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 2362
particle-size: 2362
particle-size: 2362
particle-size: 897
repetition: 14
statement: __d.__step()
particle-size: 897
particle-size: 897
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: return this.data.length
particle-size: 897
particle-size: 897
particle-size: 897
particle-size: 897
statement: (action,node) := this.scheduler()
particle-size: 894
particle-size: 894
statement: actions := ([]: (R × R)[])
particle-size: 894
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 720
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(1,i)]
particle-size: 101
loop-index: 1
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 152
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
loop-index: 2
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(1,i)]
particle-size: 339
loop-index: 3
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 157
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(1,i)]
particle-size: 156
loop-index: 4
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 134
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(1,i)]
particle-size: 100
loop-index: 5
particle-size: 894
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(0,i)]
particle-size: 222
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 894
particle-size: 894
statement: return this.data.length
particle-size: 894
particle-size: 894
particle-size: 894
statement: actions ~= [(1,i)]
particle-size: 187
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2379
particle-size: 2379
particle-size: 2379
particle-size: 2379
particle-size: 2379
particle-size: 2379
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 101
particle-size: 101
statement: r := this.front()
particle-size: 101
particle-size: 101
statement: return this.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this.popFront()
particle-size: 101
particle-size: 101
statement: this.data = this.data[1..this.size()]
particle-size: 101
particle-size: 101
statement: return this.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: if this.size() >= 2 {
    return ();
}
particle-size: 101
particle-size: 101
statement: return this.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this.data = this.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 339
particle-size: 339
statement: r := this.front()
particle-size: 339
particle-size: 339
statement: return this.data[0]
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: this.popFront()
particle-size: 339
particle-size: 339
statement: this.data = this.data[1..this.size()]
particle-size: 339
particle-size: 339
statement: return this.data.length
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: return ()
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: return r
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 55
statement: this.data = this.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 156
particle-size: 156
statement: r := this.front()
particle-size: 156
particle-size: 156
statement: return this.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.popFront()
particle-size: 156
particle-size: 156
statement: this.data = this.data[1..this.size()]
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 156
particle-size: 156
particle-size: 156
statement: if this.size() >= 2 {
    return ();
}
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.data = this.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this.size() >= 2 {
    return ();
}
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.data = this.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 883
particle-size: 883
statement: return this.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 187
particle-size: 187
statement: r := this.front()
particle-size: 187
particle-size: 187
statement: return this.data[0]
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this.popFront()
particle-size: 187
particle-size: 187
statement: this.data = this.data[1..this.size()]
particle-size: 187
particle-size: 187
statement: return this.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return r
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 187
particle-size: 187
particle-size: 187
statement: if this.size() >= 2 {
    return ();
}
particle-size: 187
particle-size: 187
statement: return this.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this.data = this.data ~ [x]
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1496
particle-size: 1496
statement: return this.data.length
particle-size: 1496
particle-size: 1496
particle-size: 1496
particle-size: 1496
statement: this.__H0.__run()
particle-size: 720
particle-size: 720
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 720
particle-size: 720
statement: return this
particle-size: 720
particle-size: 720
particle-size: 720
particle-size: 720
particle-size: 720
statement: this.data = [x] ~ this.data
particle-size: 720
statement: return ()
particle-size: 720
particle-size: 720
particle-size: 720
particle-size: 720
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = [x] ~ this.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.pkt_count = this.pkt_count + 1
particle-size: 18
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.data = this.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.Q_in.popFront()
particle-size: 702
particle-size: 702
statement: this.data = this.data[1..this.size()]
particle-size: 702
particle-size: 702
statement: return this.data.length
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
statement: return ()
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
statement: this.Q_in.popFront()
particle-size: 702
particle-size: 702
statement: this.data = this.data[1..this.size()]
particle-size: 702
particle-size: 702
statement: return this.data.length
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
statement: return ()
particle-size: 702
particle-size: 702
particle-size: 702
particle-size: 702
statement: return ()
particle-size: 720
particle-size: 720
particle-size: 720
particle-size: 720
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1496
particle-size: 1496
statement: return this.data.length
particle-size: 1496
particle-size: 1496
particle-size: 1496
particle-size: 1496
statement: this.__H1.__run()
particle-size: 152
particle-size: 152
statement: this.pkt_count = this.pkt_count + 1
particle-size: 152
statement: this.Q_in.popFront()
particle-size: 152
particle-size: 152
statement: this.data = this.data[1..this.size()]
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1496
particle-size: 1496
statement: return this.data.length
particle-size: 1496
particle-size: 1496
particle-size: 1496
particle-size: 1496
statement: this.__S0.__run()
particle-size: 111
particle-size: 111
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 111
statement: this.route2 = 3
particle-size: 111
statement: this.route3 = 2 + 1
particle-size: 111
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 111
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 111
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 111
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 111
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 111
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 111
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 111
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 333
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 111
particle-size: 111
statement: r := this.front()
particle-size: 111
particle-size: 111
statement: return this.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.popFront()
particle-size: 111
particle-size: 111
statement: this.data = this.data[1..this.size()]
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this.size() >= 2 {
    return ();
}
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.data = this.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 111
particle-size: 111
statement: r := this.front()
particle-size: 111
particle-size: 111
statement: return this.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.popFront()
particle-size: 111
particle-size: 111
statement: this.data = this.data[1..this.size()]
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this.size() >= 2 {
    return ();
}
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.data = this.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 111
particle-size: 111
statement: r := this.front()
particle-size: 111
particle-size: 111
statement: return this.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.popFront()
particle-size: 111
particle-size: 111
statement: this.data = this.data[1..this.size()]
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this.size() >= 2 {
    return ();
}
particle-size: 111
particle-size: 111
statement: return this.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this.data = this.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 333
particle-size: 333
particle-size: 333
particle-size: 333
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1718
particle-size: 1718
statement: return this.data.length
particle-size: 1718
particle-size: 1718
particle-size: 1718
particle-size: 1718
statement: this.__S1.__run()
particle-size: 157
particle-size: 157
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 157
particle-size: 157
statement: r := this.front()
particle-size: 157
particle-size: 157
statement: return this.data[0]
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: this.popFront()
particle-size: 157
particle-size: 157
statement: this.data = this.data[1..this.size()]
particle-size: 157
particle-size: 157
statement: return this.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return r
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if this.size() >= 2 {
    return ();
}
particle-size: 157
particle-size: 157
statement: return this.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1718
particle-size: 1718
statement: return this.data.length
particle-size: 1718
particle-size: 1718
particle-size: 1718
particle-size: 1718
statement: this.__S2.__run()
particle-size: 134
particle-size: 134
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 134
particle-size: 134
statement: r := this.front()
particle-size: 134
particle-size: 134
statement: return this.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.popFront()
particle-size: 134
particle-size: 134
statement: this.data = this.data[1..this.size()]
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.data = this.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1718
particle-size: 1718
statement: return this.data.length
particle-size: 1718
particle-size: 1718
particle-size: 1718
particle-size: 1718
statement: this.__S3.__run()
particle-size: 222
particle-size: 222
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 222
particle-size: 222
statement: r := this.front()
particle-size: 222
particle-size: 222
statement: return this.data[0]
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: this.popFront()
particle-size: 222
particle-size: 222
statement: this.data = this.data[1..this.size()]
particle-size: 222
particle-size: 222
statement: return this.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return r
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: if this.size() >= 2 {
    return ();
}
particle-size: 222
particle-size: 222
statement: return this.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 221
statement: return ()
particle-size: 221
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 2604
particle-size: 2604
particle-size: 2604
particle-size: 950
repetition: 15
statement: __d.__step()
particle-size: 950
particle-size: 950
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: return this.data.length
particle-size: 950
particle-size: 950
particle-size: 950
particle-size: 950
statement: (action,node) := this.scheduler()
particle-size: 945
particle-size: 945
statement: actions := ([]: (R × R)[])
particle-size: 945
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 756
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(1,i)]
particle-size: 91
loop-index: 1
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 187
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
loop-index: 2
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(1,i)]
particle-size: 309
loop-index: 3
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 157
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(1,i)]
particle-size: 158
loop-index: 4
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 156
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(1,i)]
particle-size: 134
loop-index: 5
particle-size: 945
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(0,i)]
particle-size: 257
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 945
particle-size: 945
statement: return this.data.length
particle-size: 945
particle-size: 945
particle-size: 945
statement: actions ~= [(1,i)]
particle-size: 219
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 91
particle-size: 91
statement: r := this.front()
particle-size: 91
particle-size: 91
statement: return this.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 91
particle-size: 91
particle-size: 91
statement: if this.size() >= 2 {
    return ();
}
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.data = this.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 309
particle-size: 309
statement: r := this.front()
particle-size: 309
particle-size: 309
statement: return this.data[0]
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this.popFront()
particle-size: 309
particle-size: 309
statement: this.data = this.data[1..this.size()]
particle-size: 309
particle-size: 309
statement: return this.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return r
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this.data = this.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 158
particle-size: 158
statement: r := this.front()
particle-size: 158
particle-size: 158
statement: return this.data[0]
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this.popFront()
particle-size: 158
particle-size: 158
statement: this.data = this.data[1..this.size()]
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return r
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 158
particle-size: 158
particle-size: 158
statement: if this.size() >= 2 {
    return ();
}
particle-size: 158
particle-size: 158
statement: return this.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this.data = this.data ~ [x]
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this.front()
particle-size: 134
particle-size: 134
statement: return this.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this.popFront()
particle-size: 134
particle-size: 134
statement: this.data = this.data[1..this.size()]
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
particle-size: 911
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 219
particle-size: 219
statement: r := this.front()
particle-size: 219
particle-size: 219
statement: return this.data[0]
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this.popFront()
particle-size: 219
particle-size: 219
statement: this.data = this.data[1..this.size()]
particle-size: 219
particle-size: 219
statement: return this.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: return ()
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: return r
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 219
particle-size: 219
particle-size: 219
statement: if this.size() >= 2 {
    return ();
}
particle-size: 219
particle-size: 219
statement: return this.data.length
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: this.data = this.data ~ [x]
particle-size: 219
statement: return ()
particle-size: 219
particle-size: 219
particle-size: 219
particle-size: 219
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1618
particle-size: 1618
statement: return this.data.length
particle-size: 1618
particle-size: 1618
particle-size: 1618
particle-size: 1618
statement: this.__H0.__run()
particle-size: 756
particle-size: 756
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 756
particle-size: 756
statement: return this
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: this.data = [x] ~ this.data
particle-size: 756
statement: return ()
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = [x] ~ this.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.pkt_count = this.pkt_count + 1
particle-size: 12
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.Q_in.popFront()
particle-size: 744
particle-size: 744
statement: this.data = this.data[1..this.size()]
particle-size: 744
particle-size: 744
statement: return this.data.length
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
statement: return ()
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
statement: this.Q_in.popFront()
particle-size: 744
particle-size: 744
statement: this.data = this.data[1..this.size()]
particle-size: 744
particle-size: 744
statement: return this.data.length
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
statement: return ()
particle-size: 744
particle-size: 744
particle-size: 744
particle-size: 744
statement: return ()
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1618
particle-size: 1618
statement: return this.data.length
particle-size: 1618
particle-size: 1618
particle-size: 1618
particle-size: 1618
statement: this.__H1.__run()
particle-size: 187
particle-size: 187
statement: this.pkt_count = this.pkt_count + 1
particle-size: 187
statement: this.Q_in.popFront()
particle-size: 187
particle-size: 187
statement: this.data = this.data[1..this.size()]
particle-size: 187
particle-size: 187
statement: return this.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1618
particle-size: 1618
statement: return this.data.length
particle-size: 1618
particle-size: 1618
particle-size: 1618
particle-size: 1618
statement: this.__S0.__run()
particle-size: 105
particle-size: 105
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 105
statement: this.route2 = 3
particle-size: 105
statement: this.route3 = 2 + 1
particle-size: 105
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 105
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 105
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 105
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 105
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 105
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 105
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 105
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 315
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.data = this.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1828
particle-size: 1828
statement: return this.data.length
particle-size: 1828
particle-size: 1828
particle-size: 1828
particle-size: 1828
statement: this.__S1.__run()
particle-size: 157
particle-size: 157
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 157
particle-size: 157
statement: r := this.front()
particle-size: 157
particle-size: 157
statement: return this.data[0]
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: this.popFront()
particle-size: 157
particle-size: 157
statement: this.data = this.data[1..this.size()]
particle-size: 157
particle-size: 157
statement: return this.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return r
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if this.size() >= 2 {
    return ();
}
particle-size: 157
particle-size: 157
statement: return this.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1828
particle-size: 1828
statement: return this.data.length
particle-size: 1828
particle-size: 1828
particle-size: 1828
particle-size: 1828
statement: this.__S2.__run()
particle-size: 156
particle-size: 156
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 156
particle-size: 156
statement: r := this.front()
particle-size: 156
particle-size: 156
statement: return this.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.popFront()
particle-size: 156
particle-size: 156
statement: this.data = this.data[1..this.size()]
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if this.size() >= 2 {
    return ();
}
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.data = this.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1828
particle-size: 1828
statement: return this.data.length
particle-size: 1828
particle-size: 1828
particle-size: 1828
particle-size: 1828
statement: this.__S3.__run()
particle-size: 257
particle-size: 257
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 257
particle-size: 257
statement: r := this.front()
particle-size: 257
particle-size: 257
statement: return this.data[0]
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: this.popFront()
particle-size: 257
particle-size: 257
statement: this.data = this.data[1..this.size()]
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return r
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if this.size() >= 2 {
    return ();
}
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 256
statement: return ()
particle-size: 256
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 2744
particle-size: 2744
particle-size: 2744
particle-size: 981
repetition: 16
statement: __d.__step()
particle-size: 981
particle-size: 981
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: return this.data.length
particle-size: 981
particle-size: 981
particle-size: 981
particle-size: 981
statement: (action,node) := this.scheduler()
particle-size: 976
particle-size: 976
statement: actions := ([]: (R × R)[])
particle-size: 976
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 755
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(1,i)]
particle-size: 78
loop-index: 1
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 220
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
loop-index: 2
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 94
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(1,i)]
particle-size: 279
loop-index: 3
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 149
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(1,i)]
particle-size: 159
loop-index: 4
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 159
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(1,i)]
particle-size: 156
loop-index: 5
particle-size: 976
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(0,i)]
particle-size: 280
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 976
particle-size: 976
statement: return this.data.length
particle-size: 976
particle-size: 976
particle-size: 976
statement: actions ~= [(1,i)]
particle-size: 247
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2576
particle-size: 2576
particle-size: 2576
particle-size: 2576
particle-size: 2576
particle-size: 2576
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 78
particle-size: 78
statement: r := this.front()
particle-size: 78
particle-size: 78
statement: return this.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.popFront()
particle-size: 78
particle-size: 78
statement: this.data = this.data[1..this.size()]
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 78
particle-size: 78
particle-size: 78
statement: if this.size() >= 2 {
    return ();
}
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this.data = this.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 279
particle-size: 279
statement: r := this.front()
particle-size: 279
particle-size: 279
statement: return this.data[0]
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: this.popFront()
particle-size: 279
particle-size: 279
statement: this.data = this.data[1..this.size()]
particle-size: 279
particle-size: 279
statement: return this.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return ()
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return r
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 44
statement: this.data = this.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this.data = this.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 159
particle-size: 159
statement: r := this.front()
particle-size: 159
particle-size: 159
statement: return this.data[0]
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this.popFront()
particle-size: 159
particle-size: 159
statement: this.data = this.data[1..this.size()]
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return r
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this.data = this.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 156
particle-size: 156
statement: r := this.front()
particle-size: 156
particle-size: 156
statement: return this.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.popFront()
particle-size: 156
particle-size: 156
statement: this.data = this.data[1..this.size()]
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 156
particle-size: 156
particle-size: 156
statement: if this.size() >= 2 {
    return ();
}
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 156
particle-size: 156
particle-size: 156
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 919
particle-size: 919
statement: return this.data.length
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 919
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 247
particle-size: 247
statement: r := this.front()
particle-size: 247
particle-size: 247
statement: return this.data[0]
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: this.popFront()
particle-size: 247
particle-size: 247
statement: this.data = this.data[1..this.size()]
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return ()
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return r
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 247
particle-size: 247
particle-size: 247
statement: if this.size() >= 2 {
    return ();
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: this.data = this.data ~ [x]
particle-size: 247
statement: return ()
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1657
particle-size: 1657
statement: return this.data.length
particle-size: 1657
particle-size: 1657
particle-size: 1657
particle-size: 1657
statement: this.__H0.__run()
particle-size: 755
particle-size: 755
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 755
particle-size: 755
statement: return this
particle-size: 755
particle-size: 755
particle-size: 755
particle-size: 755
particle-size: 755
statement: this.data = [x] ~ this.data
particle-size: 755
statement: return ()
particle-size: 755
particle-size: 755
particle-size: 755
particle-size: 755
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = [x] ~ this.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.pkt_count = this.pkt_count + 1
particle-size: 8
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 8
particle-size: 8
statement: r := this.front()
particle-size: 8
particle-size: 8
statement: return this.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.popFront()
particle-size: 8
particle-size: 8
statement: this.data = this.data[1..this.size()]
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this.Q_in.popFront()
particle-size: 747
particle-size: 747
statement: this.data = this.data[1..this.size()]
particle-size: 747
particle-size: 747
statement: return this.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: return ()
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: this.Q_in.popFront()
particle-size: 747
particle-size: 747
statement: this.data = this.data[1..this.size()]
particle-size: 747
particle-size: 747
statement: return this.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: return ()
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: return ()
particle-size: 755
particle-size: 755
particle-size: 755
particle-size: 755
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1657
particle-size: 1657
statement: return this.data.length
particle-size: 1657
particle-size: 1657
particle-size: 1657
particle-size: 1657
statement: this.__H1.__run()
particle-size: 220
particle-size: 220
statement: this.pkt_count = this.pkt_count + 1
particle-size: 220
statement: this.Q_in.popFront()
particle-size: 220
particle-size: 220
statement: this.data = this.data[1..this.size()]
particle-size: 220
particle-size: 220
statement: return this.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1657
particle-size: 1657
statement: return this.data.length
particle-size: 1657
particle-size: 1657
particle-size: 1657
particle-size: 1657
statement: this.__S0.__run()
particle-size: 94
particle-size: 94
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 94
statement: this.route2 = 3
particle-size: 94
statement: this.route3 = 2 + 1
particle-size: 94
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 94
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 94
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 94
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 94
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 94
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 94
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 94
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 282
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 94
particle-size: 94
statement: r := this.front()
particle-size: 94
particle-size: 94
statement: return this.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.popFront()
particle-size: 94
particle-size: 94
statement: this.data = this.data[1..this.size()]
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this.size() >= 2 {
    return ();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 94
particle-size: 94
statement: r := this.front()
particle-size: 94
particle-size: 94
statement: return this.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.popFront()
particle-size: 94
particle-size: 94
statement: this.data = this.data[1..this.size()]
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this.size() >= 2 {
    return ();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 94
particle-size: 94
statement: r := this.front()
particle-size: 94
particle-size: 94
statement: return this.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.popFront()
particle-size: 94
particle-size: 94
statement: this.data = this.data[1..this.size()]
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this.size() >= 2 {
    return ();
}
particle-size: 94
particle-size: 94
statement: return this.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this.data = this.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 282
particle-size: 282
particle-size: 282
particle-size: 282
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1845
particle-size: 1845
statement: return this.data.length
particle-size: 1845
particle-size: 1845
particle-size: 1845
particle-size: 1845
statement: this.__S1.__run()
particle-size: 149
particle-size: 149
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 149
particle-size: 149
statement: r := this.front()
particle-size: 149
particle-size: 149
statement: return this.data[0]
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: this.popFront()
particle-size: 149
particle-size: 149
statement: this.data = this.data[1..this.size()]
particle-size: 149
particle-size: 149
statement: return this.data.length
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return r
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if this.size() >= 2 {
    return ();
}
particle-size: 149
particle-size: 149
statement: return this.data.length
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 149
particle-size: 149
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 149
particle-size: 149
particle-size: 149
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1845
particle-size: 1845
statement: return this.data.length
particle-size: 1845
particle-size: 1845
particle-size: 1845
particle-size: 1845
statement: this.__S2.__run()
particle-size: 159
particle-size: 159
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 159
particle-size: 159
statement: r := this.front()
particle-size: 159
particle-size: 159
statement: return this.data[0]
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this.popFront()
particle-size: 159
particle-size: 159
statement: this.data = this.data[1..this.size()]
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return r
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this.data = this.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1845
particle-size: 1845
statement: return this.data.length
particle-size: 1845
particle-size: 1845
particle-size: 1845
particle-size: 1845
statement: this.__S3.__run()
particle-size: 280
particle-size: 280
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 280
particle-size: 280
statement: r := this.front()
particle-size: 280
particle-size: 280
statement: return this.data[0]
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: this.popFront()
particle-size: 280
particle-size: 280
statement: this.data = this.data[1..this.size()]
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return r
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: if this.size() >= 2 {
    return ();
}
particle-size: 280
particle-size: 280
statement: return this.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 279
statement: return ()
particle-size: 279
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 2769
particle-size: 2769
particle-size: 2769
particle-size: 962
repetition: 17
statement: __d.__step()
particle-size: 962
particle-size: 962
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: return this.data.length
particle-size: 962
particle-size: 962
particle-size: 962
particle-size: 962
statement: (action,node) := this.scheduler()
particle-size: 956
particle-size: 956
statement: actions := ([]: (R × R)[])
particle-size: 956
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 740
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(1,i)]
particle-size: 61
loop-index: 1
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 248
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
loop-index: 2
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 80
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(1,i)]
particle-size: 243
loop-index: 3
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 135
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(1,i)]
particle-size: 151
loop-index: 4
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 160
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(1,i)]
particle-size: 159
loop-index: 5
particle-size: 956
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(0,i)]
particle-size: 289
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 956
particle-size: 956
statement: return this.data.length
particle-size: 956
particle-size: 956
particle-size: 956
statement: actions ~= [(1,i)]
particle-size: 262
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 61
particle-size: 61
statement: r := this.front()
particle-size: 61
particle-size: 61
statement: return this.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.popFront()
particle-size: 61
particle-size: 61
statement: this.data = this.data[1..this.size()]
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.data = this.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 243
particle-size: 243
statement: r := this.front()
particle-size: 243
particle-size: 243
statement: return this.data[0]
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: this.popFront()
particle-size: 243
particle-size: 243
statement: this.data = this.data[1..this.size()]
particle-size: 243
particle-size: 243
statement: return this.data.length
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return ()
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return r
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: if this.size() >= 2 {
    return ();
}
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 37
statement: this.data = this.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: if this.size() >= 2 {
    return ();
}
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this.data = this.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: if this.size() >= 2 {
    return ();
}
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 151
particle-size: 151
statement: r := this.front()
particle-size: 151
particle-size: 151
statement: return this.data[0]
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this.popFront()
particle-size: 151
particle-size: 151
statement: this.data = this.data[1..this.size()]
particle-size: 151
particle-size: 151
statement: return this.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return r
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 151
particle-size: 151
particle-size: 151
statement: if this.size() >= 2 {
    return ();
}
particle-size: 151
particle-size: 151
statement: return this.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 151
particle-size: 151
particle-size: 151
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 159
particle-size: 159
statement: r := this.front()
particle-size: 159
particle-size: 159
statement: return this.data[0]
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this.popFront()
particle-size: 159
particle-size: 159
statement: this.data = this.data[1..this.size()]
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return r
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 159
particle-size: 159
particle-size: 159
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 876
particle-size: 876
statement: return this.data.length
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 262
particle-size: 262
statement: r := this.front()
particle-size: 262
particle-size: 262
statement: return this.data[0]
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this.popFront()
particle-size: 262
particle-size: 262
statement: this.data = this.data[1..this.size()]
particle-size: 262
particle-size: 262
statement: return this.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return r
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 262
particle-size: 262
particle-size: 262
statement: if this.size() >= 2 {
    return ();
}
particle-size: 262
particle-size: 262
statement: return this.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 262
particle-size: 262
particle-size: 262
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1652
particle-size: 1652
statement: return this.data.length
particle-size: 1652
particle-size: 1652
particle-size: 1652
particle-size: 1652
statement: this.__H0.__run()
particle-size: 740
particle-size: 740
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 740
particle-size: 740
statement: return this
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
statement: this.data = [x] ~ this.data
particle-size: 740
statement: return ()
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = [x] ~ this.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.pkt_count = this.pkt_count + 1
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = this.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_in.popFront()
particle-size: 735
particle-size: 735
statement: this.data = this.data[1..this.size()]
particle-size: 735
particle-size: 735
statement: return this.data.length
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
statement: return ()
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
statement: this.Q_in.popFront()
particle-size: 735
particle-size: 735
statement: this.data = this.data[1..this.size()]
particle-size: 735
particle-size: 735
statement: return this.data.length
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
statement: return ()
particle-size: 735
particle-size: 735
particle-size: 735
particle-size: 735
statement: return ()
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1652
particle-size: 1652
statement: return this.data.length
particle-size: 1652
particle-size: 1652
particle-size: 1652
particle-size: 1652
statement: this.__H1.__run()
particle-size: 248
particle-size: 248
statement: this.pkt_count = this.pkt_count + 1
particle-size: 248
statement: this.Q_in.popFront()
particle-size: 248
particle-size: 248
statement: this.data = this.data[1..this.size()]
particle-size: 248
particle-size: 248
statement: return this.data.length
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 248
particle-size: 248
particle-size: 248
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1652
particle-size: 1652
statement: return this.data.length
particle-size: 1652
particle-size: 1652
particle-size: 1652
particle-size: 1652
statement: this.__S0.__run()
particle-size: 80
particle-size: 80
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 80
statement: this.route2 = 3
particle-size: 80
statement: this.route3 = 2 + 1
particle-size: 80
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 80
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 80
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 80
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 80
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 80
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 80
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 80
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 240
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 80
particle-size: 80
statement: r := this.front()
particle-size: 80
particle-size: 80
statement: return this.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.popFront()
particle-size: 80
particle-size: 80
statement: this.data = this.data[1..this.size()]
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this.size() >= 2 {
    return ();
}
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.data = this.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this.front()
particle-size: 80
particle-size: 80
statement: return this.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.popFront()
particle-size: 80
particle-size: 80
statement: this.data = this.data[1..this.size()]
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this.size() >= 2 {
    return ();
}
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.data = this.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 80
particle-size: 80
statement: r := this.front()
particle-size: 80
particle-size: 80
statement: return this.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.popFront()
particle-size: 80
particle-size: 80
statement: this.data = this.data[1..this.size()]
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this.size() >= 2 {
    return ();
}
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.data = this.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1812
particle-size: 1812
statement: return this.data.length
particle-size: 1812
particle-size: 1812
particle-size: 1812
particle-size: 1812
statement: this.__S1.__run()
particle-size: 135
particle-size: 135
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 135
particle-size: 135
statement: r := this.front()
particle-size: 135
particle-size: 135
statement: return this.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this.popFront()
particle-size: 135
particle-size: 135
statement: this.data = this.data[1..this.size()]
particle-size: 135
particle-size: 135
statement: return this.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if this.size() >= 2 {
    return ();
}
particle-size: 135
particle-size: 135
statement: return this.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1812
particle-size: 1812
statement: return this.data.length
particle-size: 1812
particle-size: 1812
particle-size: 1812
particle-size: 1812
statement: this.__S2.__run()
particle-size: 160
particle-size: 160
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 160
particle-size: 160
statement: r := this.front()
particle-size: 160
particle-size: 160
statement: return this.data[0]
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this.popFront()
particle-size: 160
particle-size: 160
statement: this.data = this.data[1..this.size()]
particle-size: 160
particle-size: 160
statement: return this.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return r
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if this.size() >= 2 {
    return ();
}
particle-size: 160
particle-size: 160
statement: return this.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this.data = this.data ~ [x]
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1812
particle-size: 1812
statement: return this.data.length
particle-size: 1812
particle-size: 1812
particle-size: 1812
particle-size: 1812
statement: this.__S3.__run()
particle-size: 289
particle-size: 289
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 289
particle-size: 289
statement: r := this.front()
particle-size: 289
particle-size: 289
statement: return this.data[0]
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: this.popFront()
particle-size: 289
particle-size: 289
statement: this.data = this.data[1..this.size()]
particle-size: 289
particle-size: 289
statement: return this.data.length
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: return ()
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: return r
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: if this.size() >= 2 {
    return ();
}
particle-size: 289
particle-size: 289
statement: return this.data.length
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 289
particle-size: 289
particle-size: 289
statement: return ()
particle-size: 289
particle-size: 289
particle-size: 289
particle-size: 289
statement: return ()
particle-size: 2694
particle-size: 2694
particle-size: 2694
particle-size: 918
repetition: 18
statement: __d.__step()
particle-size: 918
particle-size: 918
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: return this.data.length
particle-size: 918
particle-size: 918
particle-size: 918
particle-size: 918
statement: (action,node) := this.scheduler()
particle-size: 911
particle-size: 911
statement: actions := ([]: (R × R)[])
particle-size: 911
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 683
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(1,i)]
particle-size: 48
loop-index: 1
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 262
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
loop-index: 2
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 62
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(1,i)]
particle-size: 204
loop-index: 3
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 117
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(1,i)]
particle-size: 137
loop-index: 4
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 152
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(1,i)]
particle-size: 160
loop-index: 5
particle-size: 911
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(0,i)]
particle-size: 275
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 911
particle-size: 911
statement: return this.data.length
particle-size: 911
particle-size: 911
particle-size: 911
statement: actions ~= [(1,i)]
particle-size: 258
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2358
particle-size: 2358
particle-size: 2358
particle-size: 2358
particle-size: 2358
particle-size: 2358
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 204
particle-size: 204
statement: r := this.front()
particle-size: 204
particle-size: 204
statement: return this.data[0]
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: this.popFront()
particle-size: 204
particle-size: 204
statement: this.data = this.data[1..this.size()]
particle-size: 204
particle-size: 204
statement: return this.data.length
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return ()
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: return r
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
particle-size: 204
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 28
statement: this.data = this.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 68
particle-size: 68
particle-size: 68
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this.data = this.data ~ [x]
particle-size: 68
statement: return ()
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 68
particle-size: 68
particle-size: 68
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 137
particle-size: 137
statement: r := this.front()
particle-size: 137
particle-size: 137
statement: return this.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this.popFront()
particle-size: 137
particle-size: 137
statement: this.data = this.data[1..this.size()]
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 137
particle-size: 137
particle-size: 137
statement: if this.size() >= 2 {
    return ();
}
particle-size: 137
particle-size: 137
statement: return this.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 160
particle-size: 160
statement: r := this.front()
particle-size: 160
particle-size: 160
statement: return this.data[0]
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this.popFront()
particle-size: 160
particle-size: 160
statement: this.data = this.data[1..this.size()]
particle-size: 160
particle-size: 160
statement: return this.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return r
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 160
particle-size: 160
particle-size: 160
statement: if this.size() >= 2 {
    return ();
}
particle-size: 160
particle-size: 160
statement: return this.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 160
particle-size: 160
particle-size: 160
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 807
particle-size: 807
statement: return this.data.length
particle-size: 807
particle-size: 807
particle-size: 807
particle-size: 807
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 258
particle-size: 258
statement: r := this.front()
particle-size: 258
particle-size: 258
statement: return this.data[0]
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this.popFront()
particle-size: 258
particle-size: 258
statement: this.data = this.data[1..this.size()]
particle-size: 258
particle-size: 258
statement: return this.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return r
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 258
particle-size: 258
particle-size: 258
statement: if this.size() >= 2 {
    return ();
}
particle-size: 258
particle-size: 258
statement: return this.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 258
particle-size: 258
particle-size: 258
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1551
particle-size: 1551
statement: return this.data.length
particle-size: 1551
particle-size: 1551
particle-size: 1551
particle-size: 1551
statement: this.__H0.__run()
particle-size: 683
particle-size: 683
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 683
particle-size: 683
statement: return this
particle-size: 683
particle-size: 683
particle-size: 683
particle-size: 683
particle-size: 683
statement: this.data = [x] ~ this.data
particle-size: 683
statement: return ()
particle-size: 683
particle-size: 683
particle-size: 683
particle-size: 683
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = [x] ~ this.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.pkt_count = this.pkt_count + 1
particle-size: 5
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.data = this.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.Q_in.popFront()
particle-size: 678
particle-size: 678
statement: this.data = this.data[1..this.size()]
particle-size: 678
particle-size: 678
statement: return this.data.length
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
statement: return ()
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
statement: this.Q_in.popFront()
particle-size: 678
particle-size: 678
statement: this.data = this.data[1..this.size()]
particle-size: 678
particle-size: 678
statement: return this.data.length
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
statement: return ()
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
statement: return ()
particle-size: 683
particle-size: 683
particle-size: 683
particle-size: 683
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1551
particle-size: 1551
statement: return this.data.length
particle-size: 1551
particle-size: 1551
particle-size: 1551
particle-size: 1551
statement: this.__H1.__run()
particle-size: 262
particle-size: 262
statement: this.pkt_count = this.pkt_count + 1
particle-size: 262
statement: this.Q_in.popFront()
particle-size: 262
particle-size: 262
statement: this.data = this.data[1..this.size()]
particle-size: 262
particle-size: 262
statement: return this.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1551
particle-size: 1551
statement: return this.data.length
particle-size: 1551
particle-size: 1551
particle-size: 1551
particle-size: 1551
statement: this.__S0.__run()
particle-size: 62
particle-size: 62
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 62
statement: this.route2 = 3
particle-size: 62
statement: this.route3 = 2 + 1
particle-size: 62
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 62
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 62
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 62
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 62
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 62
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 62
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 62
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 186
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 62
particle-size: 62
statement: r := this.front()
particle-size: 62
particle-size: 62
statement: return this.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 62
particle-size: 62
statement: r := this.front()
particle-size: 62
particle-size: 62
statement: return this.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this.front()
particle-size: 62
particle-size: 62
statement: return this.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1675
particle-size: 1675
statement: return this.data.length
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
statement: this.__S1.__run()
particle-size: 117
particle-size: 117
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 117
particle-size: 117
statement: r := this.front()
particle-size: 117
particle-size: 117
statement: return this.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.popFront()
particle-size: 117
particle-size: 117
statement: this.data = this.data[1..this.size()]
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if this.size() >= 2 {
    return ();
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this.data = this.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1675
particle-size: 1675
statement: return this.data.length
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
statement: this.__S2.__run()
particle-size: 152
particle-size: 152
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 152
particle-size: 152
statement: r := this.front()
particle-size: 152
particle-size: 152
statement: return this.data[0]
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.popFront()
particle-size: 152
particle-size: 152
statement: this.data = this.data[1..this.size()]
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return r
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if this.size() >= 2 {
    return ();
}
particle-size: 152
particle-size: 152
statement: return this.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this.data = this.data ~ [x]
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1675
particle-size: 1675
statement: return this.data.length
particle-size: 1675
particle-size: 1675
particle-size: 1675
particle-size: 1675
statement: this.__S3.__run()
particle-size: 275
particle-size: 275
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 275
particle-size: 275
statement: r := this.front()
particle-size: 275
particle-size: 275
statement: return this.data[0]
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: this.popFront()
particle-size: 275
particle-size: 275
statement: this.data = this.data[1..this.size()]
particle-size: 275
particle-size: 275
statement: return this.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return r
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: if this.size() >= 2 {
    return ();
}
particle-size: 275
particle-size: 275
statement: return this.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 272
statement: return ()
particle-size: 272
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 2489
particle-size: 2489
particle-size: 2489
particle-size: 825
repetition: 19
statement: __d.__step()
particle-size: 825
particle-size: 825
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return this.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: (action,node) := this.scheduler()
particle-size: 818
particle-size: 818
statement: actions := ([]: (R × R)[])
particle-size: 818
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 598
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(1,i)]
particle-size: 33
loop-index: 1
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 258
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
loop-index: 2
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 48
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(1,i)]
particle-size: 156
loop-index: 3
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 97
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(1,i)]
particle-size: 120
loop-index: 4
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(1,i)]
particle-size: 153
loop-index: 5
particle-size: 818
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(0,i)]
particle-size: 258
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 818
particle-size: 818
statement: return this.data.length
particle-size: 818
particle-size: 818
particle-size: 818
statement: actions ~= [(1,i)]
particle-size: 231
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2091
particle-size: 2091
particle-size: 2091
particle-size: 2091
particle-size: 2091
particle-size: 2091
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 156
particle-size: 156
statement: r := this.front()
particle-size: 156
particle-size: 156
statement: return this.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this.popFront()
particle-size: 156
particle-size: 156
statement: this.data = this.data[1..this.size()]
particle-size: 156
particle-size: 156
statement: return this.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: if this.size() >= 2 {
    return ();
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: if this.size() >= 2 {
    return ();
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this.data = this.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: if this.size() >= 2 {
    return ();
}
particle-size: 52
particle-size: 52
statement: return this.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 120
particle-size: 120
statement: r := this.front()
particle-size: 120
particle-size: 120
statement: return this.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this.popFront()
particle-size: 120
particle-size: 120
statement: this.data = this.data[1..this.size()]
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 120
particle-size: 120
particle-size: 120
statement: if this.size() >= 2 {
    return ();
}
particle-size: 120
particle-size: 120
statement: return this.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 153
particle-size: 153
statement: r := this.front()
particle-size: 153
particle-size: 153
statement: return this.data[0]
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this.popFront()
particle-size: 153
particle-size: 153
statement: this.data = this.data[1..this.size()]
particle-size: 153
particle-size: 153
statement: return this.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return r
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 153
particle-size: 153
particle-size: 153
statement: if this.size() >= 2 {
    return ();
}
particle-size: 153
particle-size: 153
statement: return this.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 153
particle-size: 153
particle-size: 153
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 693
particle-size: 693
statement: return this.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 231
particle-size: 231
statement: r := this.front()
particle-size: 231
particle-size: 231
statement: return this.data[0]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this.popFront()
particle-size: 231
particle-size: 231
statement: this.data = this.data[1..this.size()]
particle-size: 231
particle-size: 231
statement: return this.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return r
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 231
particle-size: 231
particle-size: 231
statement: if this.size() >= 2 {
    return ();
}
particle-size: 231
particle-size: 231
statement: return this.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 230
statement: return ()
particle-size: 230
particle-size: 231
particle-size: 231
particle-size: 231
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1398
particle-size: 1398
statement: return this.data.length
particle-size: 1398
particle-size: 1398
particle-size: 1398
particle-size: 1398
statement: this.__H0.__run()
particle-size: 598
particle-size: 598
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 598
particle-size: 598
statement: return this
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: this.data = [x] ~ this.data
particle-size: 598
statement: return ()
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.pkt_count = this.pkt_count + 1
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_in.popFront()
particle-size: 596
particle-size: 596
statement: this.data = this.data[1..this.size()]
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return ()
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: this.Q_in.popFront()
particle-size: 596
particle-size: 596
statement: this.data = this.data[1..this.size()]
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return ()
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return ()
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1398
particle-size: 1398
statement: return this.data.length
particle-size: 1398
particle-size: 1398
particle-size: 1398
particle-size: 1398
statement: this.__H1.__run()
particle-size: 258
particle-size: 258
statement: this.pkt_count = this.pkt_count + 1
particle-size: 258
statement: this.Q_in.popFront()
particle-size: 258
particle-size: 258
statement: this.data = this.data[1..this.size()]
particle-size: 258
particle-size: 258
statement: return this.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1398
particle-size: 1398
statement: return this.data.length
particle-size: 1398
particle-size: 1398
particle-size: 1398
particle-size: 1398
statement: this.__S0.__run()
particle-size: 48
particle-size: 48
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 48
statement: this.route2 = 3
particle-size: 48
statement: this.route3 = 2 + 1
particle-size: 48
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 48
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 48
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 48
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 48
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 48
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 48
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 48
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 144
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 48
particle-size: 48
statement: r := this.front()
particle-size: 48
particle-size: 48
statement: return this.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this.data = this.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1494
particle-size: 1494
statement: return this.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: this.__S1.__run()
particle-size: 97
particle-size: 97
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 97
particle-size: 97
statement: r := this.front()
particle-size: 97
particle-size: 97
statement: return this.data[0]
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.popFront()
particle-size: 97
particle-size: 97
statement: this.data = this.data[1..this.size()]
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return r
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if this.size() >= 2 {
    return ();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.data = this.data ~ [x]
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1494
particle-size: 1494
statement: return this.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: this.__S2.__run()
particle-size: 139
particle-size: 139
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 139
particle-size: 139
statement: r := this.front()
particle-size: 139
particle-size: 139
statement: return this.data[0]
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this.popFront()
particle-size: 139
particle-size: 139
statement: this.data = this.data[1..this.size()]
particle-size: 139
particle-size: 139
statement: return this.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return r
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if this.size() >= 2 {
    return ();
}
particle-size: 139
particle-size: 139
statement: return this.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this.data = this.data ~ [x]
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1494
particle-size: 1494
statement: return this.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: this.__S3.__run()
particle-size: 258
particle-size: 258
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 258
particle-size: 258
statement: r := this.front()
particle-size: 258
particle-size: 258
statement: return this.data[0]
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this.popFront()
particle-size: 258
particle-size: 258
statement: this.data = this.data[1..this.size()]
particle-size: 258
particle-size: 258
statement: return this.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return r
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if this.size() >= 2 {
    return ();
}
particle-size: 258
particle-size: 258
statement: return this.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 255
statement: return ()
particle-size: 255
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 2194
particle-size: 2194
particle-size: 2194
particle-size: 719
repetition: 20
statement: __d.__step()
particle-size: 719
particle-size: 719
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: return this.data.length
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: (action,node) := this.scheduler()
particle-size: 710
particle-size: 710
statement: actions := ([]: (R × R)[])
particle-size: 710
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 498
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 1
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 232
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
loop-index: 2
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 33
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(1,i)]
particle-size: 114
loop-index: 3
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 73
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(1,i)]
particle-size: 100
loop-index: 4
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 122
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(1,i)]
particle-size: 140
loop-index: 5
particle-size: 710
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(0,i)]
particle-size: 231
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 710
particle-size: 710
statement: return this.data.length
particle-size: 710
particle-size: 710
particle-size: 710
statement: actions ~= [(1,i)]
particle-size: 205
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1770
particle-size: 1770
particle-size: 1770
particle-size: 1770
particle-size: 1770
particle-size: 1770
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this.front()
particle-size: 114
particle-size: 114
statement: return this.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this.popFront()
particle-size: 114
particle-size: 114
statement: this.data = this.data[1..this.size()]
particle-size: 114
particle-size: 114
statement: return this.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.data = this.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 100
particle-size: 100
statement: r := this.front()
particle-size: 100
particle-size: 100
statement: return this.data[0]
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: this.popFront()
particle-size: 100
particle-size: 100
statement: this.data = this.data[1..this.size()]
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return r
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 100
particle-size: 100
particle-size: 100
statement: if this.size() >= 2 {
    return ();
}
particle-size: 100
particle-size: 100
statement: return this.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 140
particle-size: 140
statement: r := this.front()
particle-size: 140
particle-size: 140
statement: return this.data[0]
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.popFront()
particle-size: 140
particle-size: 140
statement: this.data = this.data[1..this.size()]
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return ()
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return r
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 140
particle-size: 140
particle-size: 140
statement: if this.size() >= 2 {
    return ();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return ()
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 140
particle-size: 140
particle-size: 140
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 581
particle-size: 581
statement: return this.data.length
particle-size: 581
particle-size: 581
particle-size: 581
particle-size: 581
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 205
particle-size: 205
statement: r := this.front()
particle-size: 205
particle-size: 205
statement: return this.data[0]
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: this.popFront()
particle-size: 205
particle-size: 205
statement: this.data = this.data[1..this.size()]
particle-size: 205
particle-size: 205
statement: return this.data.length
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: return ()
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: return r
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 205
particle-size: 205
particle-size: 205
statement: if this.size() >= 2 {
    return ();
}
particle-size: 205
particle-size: 205
statement: return this.data.length
particle-size: 205
particle-size: 205
particle-size: 205
particle-size: 205
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 204
statement: return ()
particle-size: 204
particle-size: 205
particle-size: 205
particle-size: 205
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1189
particle-size: 1189
statement: return this.data.length
particle-size: 1189
particle-size: 1189
particle-size: 1189
particle-size: 1189
statement: this.__H0.__run()
particle-size: 498
particle-size: 498
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 498
particle-size: 498
statement: return this
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: this.data = [x] ~ this.data
particle-size: 498
statement: return ()
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = [x] ~ this.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.pkt_count = this.pkt_count + 1
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_in.popFront()
particle-size: 496
particle-size: 496
statement: this.data = this.data[1..this.size()]
particle-size: 496
particle-size: 496
statement: return this.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: this.Q_in.popFront()
particle-size: 496
particle-size: 496
statement: this.data = this.data[1..this.size()]
particle-size: 496
particle-size: 496
statement: return this.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1189
particle-size: 1189
statement: return this.data.length
particle-size: 1189
particle-size: 1189
particle-size: 1189
particle-size: 1189
statement: this.__H1.__run()
particle-size: 232
particle-size: 232
statement: this.pkt_count = this.pkt_count + 1
particle-size: 232
statement: this.Q_in.popFront()
particle-size: 232
particle-size: 232
statement: this.data = this.data[1..this.size()]
particle-size: 232
particle-size: 232
statement: return this.data.length
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return ()
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: return ()
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1189
particle-size: 1189
statement: return this.data.length
particle-size: 1189
particle-size: 1189
particle-size: 1189
particle-size: 1189
statement: this.__S0.__run()
particle-size: 33
particle-size: 33
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 33
statement: this.route2 = 3
particle-size: 33
statement: this.route3 = 2 + 1
particle-size: 33
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 33
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 33
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 33
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 33
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 33
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 33
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 33
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 99
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1255
particle-size: 1255
statement: return this.data.length
particle-size: 1255
particle-size: 1255
particle-size: 1255
particle-size: 1255
statement: this.__S1.__run()
particle-size: 73
particle-size: 73
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 73
particle-size: 73
statement: r := this.front()
particle-size: 73
particle-size: 73
statement: return this.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this.popFront()
particle-size: 73
particle-size: 73
statement: this.data = this.data[1..this.size()]
particle-size: 73
particle-size: 73
statement: return this.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if this.size() >= 2 {
    return ();
}
particle-size: 73
particle-size: 73
statement: return this.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this.data = this.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1255
particle-size: 1255
statement: return this.data.length
particle-size: 1255
particle-size: 1255
particle-size: 1255
particle-size: 1255
statement: this.__S2.__run()
particle-size: 122
particle-size: 122
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 122
particle-size: 122
statement: r := this.front()
particle-size: 122
particle-size: 122
statement: return this.data[0]
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this.popFront()
particle-size: 122
particle-size: 122
statement: this.data = this.data[1..this.size()]
particle-size: 122
particle-size: 122
statement: return this.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return ()
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return r
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if this.size() >= 2 {
    return ();
}
particle-size: 122
particle-size: 122
statement: return this.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 121
statement: return ()
particle-size: 121
particle-size: 122
particle-size: 122
particle-size: 122
statement: return ()
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1255
particle-size: 1255
statement: return this.data.length
particle-size: 1255
particle-size: 1255
particle-size: 1255
particle-size: 1255
statement: this.__S3.__run()
particle-size: 231
particle-size: 231
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 231
particle-size: 231
statement: r := this.front()
particle-size: 231
particle-size: 231
statement: return this.data[0]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this.popFront()
particle-size: 231
particle-size: 231
statement: this.data = this.data[1..this.size()]
particle-size: 231
particle-size: 231
statement: return this.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return r
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if this.size() >= 2 {
    return ();
}
particle-size: 231
particle-size: 231
statement: return this.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 1845
particle-size: 1845
particle-size: 1845
particle-size: 596
repetition: 21
statement: __d.__step()
particle-size: 596
particle-size: 596
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: return this.data.length
particle-size: 596
particle-size: 596
particle-size: 596
particle-size: 596
statement: (action,node) := this.scheduler()
particle-size: 587
particle-size: 587
statement: actions := ([]: (R × R)[])
particle-size: 587
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 415
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 1
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 206
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
loop-index: 2
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 72
loop-index: 3
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 54
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 76
loop-index: 4
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 123
loop-index: 5
particle-size: 587
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(0,i)]
particle-size: 202
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 587
particle-size: 587
statement: return this.data.length
particle-size: 587
particle-size: 587
particle-size: 587
statement: actions ~= [(1,i)]
particle-size: 180
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1467
particle-size: 1467
particle-size: 1467
particle-size: 1467
particle-size: 1467
particle-size: 1467
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 72
particle-size: 72
statement: r := this.front()
particle-size: 72
particle-size: 72
statement: return this.data[0]
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: this.popFront()
particle-size: 72
particle-size: 72
statement: this.data = this.data[1..this.size()]
particle-size: 72
particle-size: 72
statement: return this.data.length
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: return r
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 8
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this.front()
particle-size: 76
particle-size: 76
statement: return this.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this.popFront()
particle-size: 76
particle-size: 76
statement: this.data = this.data[1..this.size()]
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 76
particle-size: 76
particle-size: 76
statement: if this.size() >= 2 {
    return ();
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this.data = this.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 123
particle-size: 123
statement: r := this.front()
particle-size: 123
particle-size: 123
statement: return this.data[0]
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this.popFront()
particle-size: 123
particle-size: 123
statement: this.data = this.data[1..this.size()]
particle-size: 123
particle-size: 123
statement: return this.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return r
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 123
particle-size: 123
particle-size: 123
statement: if this.size() >= 2 {
    return ();
}
particle-size: 123
particle-size: 123
statement: return this.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 465
particle-size: 465
statement: return this.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 180
particle-size: 180
statement: r := this.front()
particle-size: 180
particle-size: 180
statement: return this.data[0]
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this.popFront()
particle-size: 180
particle-size: 180
statement: this.data = this.data[1..this.size()]
particle-size: 180
particle-size: 180
statement: return this.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return r
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 180
particle-size: 180
particle-size: 180
statement: if this.size() >= 2 {
    return ();
}
particle-size: 180
particle-size: 180
statement: return this.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 178
statement: return ()
particle-size: 178
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 1002
particle-size: 1002
statement: return this.data.length
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
statement: this.__H0.__run()
particle-size: 415
particle-size: 415
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 415
particle-size: 415
statement: return this
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: this.data = [x] ~ this.data
particle-size: 415
statement: return ()
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 414
particle-size: 414
statement: this.data = this.data[1..this.size()]
particle-size: 414
particle-size: 414
statement: return this.data.length
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: this.Q_in.popFront()
particle-size: 414
particle-size: 414
statement: this.data = this.data[1..this.size()]
particle-size: 414
particle-size: 414
statement: return this.data.length
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: return ()
particle-size: 415
particle-size: 415
particle-size: 415
particle-size: 415
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 1002
particle-size: 1002
statement: return this.data.length
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
statement: this.__H1.__run()
particle-size: 206
particle-size: 206
statement: this.pkt_count = this.pkt_count + 1
particle-size: 206
statement: this.Q_in.popFront()
particle-size: 206
particle-size: 206
statement: this.data = this.data[1..this.size()]
particle-size: 206
particle-size: 206
statement: return this.data.length
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 1002
particle-size: 1002
statement: return this.data.length
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
statement: this.__S0.__run()
particle-size: 22
particle-size: 22
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 22
statement: this.route2 = 3
particle-size: 22
statement: this.route3 = 2 + 1
particle-size: 22
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 22
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 22
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 22
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 22
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 22
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 22
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 22
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 66
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 1046
particle-size: 1046
statement: return this.data.length
particle-size: 1046
particle-size: 1046
particle-size: 1046
particle-size: 1046
statement: this.__S1.__run()
particle-size: 54
particle-size: 54
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 54
particle-size: 54
statement: r := this.front()
particle-size: 54
particle-size: 54
statement: return this.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this.popFront()
particle-size: 54
particle-size: 54
statement: this.data = this.data[1..this.size()]
particle-size: 54
particle-size: 54
statement: return this.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this.data = this.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 1046
particle-size: 1046
statement: return this.data.length
particle-size: 1046
particle-size: 1046
particle-size: 1046
particle-size: 1046
statement: this.__S2.__run()
particle-size: 103
particle-size: 103
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 103
particle-size: 103
statement: r := this.front()
particle-size: 103
particle-size: 103
statement: return this.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this.popFront()
particle-size: 103
particle-size: 103
statement: this.data = this.data[1..this.size()]
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 1046
particle-size: 1046
statement: return this.data.length
particle-size: 1046
particle-size: 1046
particle-size: 1046
particle-size: 1046
statement: this.__S3.__run()
particle-size: 202
particle-size: 202
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 202
particle-size: 202
statement: r := this.front()
particle-size: 202
particle-size: 202
statement: return this.data[0]
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: this.popFront()
particle-size: 202
particle-size: 202
statement: this.data = this.data[1..this.size()]
particle-size: 202
particle-size: 202
statement: return this.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return r
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: if this.size() >= 2 {
    return ();
}
particle-size: 202
particle-size: 202
statement: return this.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 199
statement: return ()
particle-size: 199
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 1520
particle-size: 1520
particle-size: 1520
particle-size: 495
repetition: 22
statement: __d.__step()
particle-size: 495
particle-size: 495
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: return this.data.length
particle-size: 495
particle-size: 495
particle-size: 495
particle-size: 495
statement: (action,node) := this.scheduler()
particle-size: 486
particle-size: 486
statement: actions := ([]: (R × R)[])
particle-size: 486
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 338
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 181
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
loop-index: 2
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(1,i)]
particle-size: 51
loop-index: 3
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 4
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 80
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 5
particle-size: 486
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(0,i)]
particle-size: 168
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 486
particle-size: 486
statement: return this.data.length
particle-size: 486
particle-size: 486
particle-size: 486
statement: actions ~= [(1,i)]
particle-size: 155
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 51
particle-size: 51
statement: r := this.front()
particle-size: 51
particle-size: 51
statement: return this.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this.popFront()
particle-size: 51
particle-size: 51
statement: this.data = this.data[1..this.size()]
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this.front()
particle-size: 56
particle-size: 56
statement: return this.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this.popFront()
particle-size: 56
particle-size: 56
statement: this.data = this.data[1..this.size()]
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this.data = this.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this.front()
particle-size: 105
particle-size: 105
statement: return this.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this.popFront()
particle-size: 105
particle-size: 105
statement: this.data = this.data[1..this.size()]
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 377
particle-size: 377
statement: return this.data.length
particle-size: 377
particle-size: 377
particle-size: 377
particle-size: 377
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 155
particle-size: 155
statement: r := this.front()
particle-size: 155
particle-size: 155
statement: return this.data[0]
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: this.popFront()
particle-size: 155
particle-size: 155
statement: this.data = this.data[1..this.size()]
particle-size: 155
particle-size: 155
statement: return this.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return r
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 155
particle-size: 155
particle-size: 155
statement: if this.size() >= 2 {
    return ();
}
particle-size: 155
particle-size: 155
statement: return this.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 155
particle-size: 155
particle-size: 155
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 815
particle-size: 815
statement: return this.data.length
particle-size: 815
particle-size: 815
particle-size: 815
particle-size: 815
statement: this.__H0.__run()
particle-size: 338
particle-size: 338
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 338
particle-size: 338
statement: return this
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: this.data = [x] ~ this.data
particle-size: 338
statement: return ()
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 337
particle-size: 337
statement: this.data = this.data[1..this.size()]
particle-size: 337
particle-size: 337
statement: return this.data.length
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
statement: return ()
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
statement: this.Q_in.popFront()
particle-size: 337
particle-size: 337
statement: this.data = this.data[1..this.size()]
particle-size: 337
particle-size: 337
statement: return this.data.length
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
statement: return ()
particle-size: 337
particle-size: 337
particle-size: 337
particle-size: 337
statement: return ()
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 815
particle-size: 815
statement: return this.data.length
particle-size: 815
particle-size: 815
particle-size: 815
particle-size: 815
statement: this.__H1.__run()
particle-size: 181
particle-size: 181
statement: this.pkt_count = this.pkt_count + 1
particle-size: 181
statement: this.Q_in.popFront()
particle-size: 181
particle-size: 181
statement: this.data = this.data[1..this.size()]
particle-size: 181
particle-size: 181
statement: return this.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 815
particle-size: 815
statement: return this.data.length
particle-size: 815
particle-size: 815
particle-size: 815
particle-size: 815
statement: this.__S0.__run()
particle-size: 14
particle-size: 14
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 14
statement: this.route2 = 3
particle-size: 14
statement: this.route3 = 2 + 1
particle-size: 14
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 14
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 14
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 14
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 14
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 14
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 14
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 14
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 42
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 843
particle-size: 843
statement: return this.data.length
particle-size: 843
particle-size: 843
particle-size: 843
particle-size: 843
statement: this.__S1.__run()
particle-size: 34
particle-size: 34
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if this.size() >= 2 {
    return ();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.data = this.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 843
particle-size: 843
statement: return this.data.length
particle-size: 843
particle-size: 843
particle-size: 843
particle-size: 843
statement: this.__S2.__run()
particle-size: 80
particle-size: 80
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 80
particle-size: 80
statement: r := this.front()
particle-size: 80
particle-size: 80
statement: return this.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this.popFront()
particle-size: 80
particle-size: 80
statement: this.data = this.data[1..this.size()]
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this.size() >= 2 {
    return ();
}
particle-size: 80
particle-size: 80
statement: return this.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 843
particle-size: 843
statement: return this.data.length
particle-size: 843
particle-size: 843
particle-size: 843
particle-size: 843
statement: this.__S3.__run()
particle-size: 168
particle-size: 168
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 168
particle-size: 168
statement: r := this.front()
particle-size: 168
particle-size: 168
statement: return this.data[0]
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: this.popFront()
particle-size: 168
particle-size: 168
statement: this.data = this.data[1..this.size()]
particle-size: 168
particle-size: 168
statement: return this.data.length
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return r
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: if this.size() >= 2 {
    return ();
}
particle-size: 168
particle-size: 168
statement: return this.data.length
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 165
statement: return ()
particle-size: 165
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 1229
particle-size: 1229
particle-size: 1229
particle-size: 404
repetition: 23
statement: __d.__step()
particle-size: 404
particle-size: 404
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return this.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: (action,node) := this.scheduler()
particle-size: 395
particle-size: 395
statement: actions := ([]: (R × R)[])
particle-size: 395
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 276
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 1
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 157
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
loop-index: 2
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(1,i)]
particle-size: 36
loop-index: 3
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(1,i)]
particle-size: 35
loop-index: 4
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 60
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 5
particle-size: 395
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 395
particle-size: 395
statement: return this.data.length
particle-size: 395
particle-size: 395
particle-size: 395
statement: actions ~= [(1,i)]
particle-size: 131
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 954
particle-size: 954
particle-size: 954
particle-size: 954
particle-size: 954
particle-size: 954
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 36
particle-size: 36
statement: r := this.front()
particle-size: 36
particle-size: 36
statement: return this.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this.popFront()
particle-size: 36
particle-size: 36
statement: this.data = this.data[1..this.size()]
particle-size: 36
particle-size: 36
statement: return this.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.data = this.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 35
particle-size: 35
statement: r := this.front()
particle-size: 35
particle-size: 35
statement: return this.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.popFront()
particle-size: 35
particle-size: 35
statement: this.data = this.data[1..this.size()]
particle-size: 35
particle-size: 35
statement: return this.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 35
particle-size: 35
particle-size: 35
statement: if this.size() >= 2 {
    return ();
}
particle-size: 35
particle-size: 35
statement: return this.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this.data = this.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this.front()
particle-size: 82
particle-size: 82
statement: return this.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this.popFront()
particle-size: 82
particle-size: 82
statement: this.data = this.data[1..this.size()]
particle-size: 82
particle-size: 82
statement: return this.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 82
particle-size: 82
particle-size: 82
statement: if this.size() >= 2 {
    return ();
}
particle-size: 82
particle-size: 82
statement: return this.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 131
particle-size: 131
statement: r := this.front()
particle-size: 131
particle-size: 131
statement: return this.data[0]
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this.popFront()
particle-size: 131
particle-size: 131
statement: this.data = this.data[1..this.size()]
particle-size: 131
particle-size: 131
statement: return this.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return r
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 131
particle-size: 131
particle-size: 131
statement: if this.size() >= 2 {
    return ();
}
particle-size: 131
particle-size: 131
statement: return this.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: this.__H0.__run()
particle-size: 276
particle-size: 276
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 276
particle-size: 276
statement: return this
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: this.data = [x] ~ this.data
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 276
particle-size: 276
statement: this.data = this.data[1..this.size()]
particle-size: 276
particle-size: 276
statement: return this.data.length
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: this.Q_in.popFront()
particle-size: 276
particle-size: 276
statement: this.data = this.data[1..this.size()]
particle-size: 276
particle-size: 276
statement: return this.data.length
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: this.__H1.__run()
particle-size: 157
particle-size: 157
statement: this.pkt_count = this.pkt_count + 1
particle-size: 157
statement: this.Q_in.popFront()
particle-size: 157
particle-size: 157
statement: this.data = this.data[1..this.size()]
particle-size: 157
particle-size: 157
statement: return this.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 664
particle-size: 664
statement: return this.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: this.__S0.__run()
particle-size: 10
particle-size: 10
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 10
statement: this.route2 = 3
particle-size: 10
statement: this.route3 = 2 + 1
particle-size: 10
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 10
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 10
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 10
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 10
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 10
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 10
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 10
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 30
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: this.__S1.__run()
particle-size: 22
particle-size: 22
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: this.__S2.__run()
particle-size: 60
particle-size: 60
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 60
particle-size: 60
statement: r := this.front()
particle-size: 60
particle-size: 60
statement: return this.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this.popFront()
particle-size: 60
particle-size: 60
statement: this.data = this.data[1..this.size()]
particle-size: 60
particle-size: 60
statement: return this.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if this.size() >= 2 {
    return ();
}
particle-size: 60
particle-size: 60
statement: return this.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 684
particle-size: 684
statement: return this.data.length
particle-size: 684
particle-size: 684
particle-size: 684
particle-size: 684
statement: this.__S3.__run()
particle-size: 139
particle-size: 139
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 139
particle-size: 139
statement: r := this.front()
particle-size: 139
particle-size: 139
statement: return this.data[0]
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this.popFront()
particle-size: 139
particle-size: 139
statement: this.data = this.data[1..this.size()]
particle-size: 139
particle-size: 139
statement: return this.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return r
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if this.size() >= 2 {
    return ();
}
particle-size: 139
particle-size: 139
statement: return this.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 983
particle-size: 983
particle-size: 983
particle-size: 325
repetition: 24
statement: __d.__step()
particle-size: 325
particle-size: 325
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return this.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (action,node) := this.scheduler()
particle-size: 315
particle-size: 315
statement: actions := ([]: (R × R)[])
particle-size: 315
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 216
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 1
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 133
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
loop-index: 2
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 3
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 4
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(1,i)]
particle-size: 63
loop-index: 5
particle-size: 315
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(0,i)]
particle-size: 107
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 315
particle-size: 315
statement: return this.data.length
particle-size: 315
particle-size: 315
particle-size: 315
statement: actions ~= [(1,i)]
particle-size: 110
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
particle-size: 740
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this.front()
particle-size: 27
particle-size: 27
statement: return this.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.popFront()
particle-size: 27
particle-size: 27
statement: this.data = this.data[1..this.size()]
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.data = this.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.data = this.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 63
particle-size: 63
statement: r := this.front()
particle-size: 63
particle-size: 63
statement: return this.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this.popFront()
particle-size: 63
particle-size: 63
statement: this.data = this.data[1..this.size()]
particle-size: 63
particle-size: 63
statement: return this.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 63
particle-size: 63
particle-size: 63
statement: if this.size() >= 2 {
    return ();
}
particle-size: 63
particle-size: 63
statement: return this.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 226
particle-size: 226
statement: return this.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 110
particle-size: 110
statement: r := this.front()
particle-size: 110
particle-size: 110
statement: return this.data[0]
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: this.popFront()
particle-size: 110
particle-size: 110
statement: this.data = this.data[1..this.size()]
particle-size: 110
particle-size: 110
statement: return this.data.length
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return ()
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return r
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 110
particle-size: 110
particle-size: 110
statement: if this.size() >= 2 {
    return ();
}
particle-size: 110
particle-size: 110
statement: return this.data.length
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 110
particle-size: 110
particle-size: 110
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 514
particle-size: 514
statement: return this.data.length
particle-size: 514
particle-size: 514
particle-size: 514
particle-size: 514
statement: this.__H0.__run()
particle-size: 216
particle-size: 216
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 216
particle-size: 216
statement: return this
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this.data = [x] ~ this.data
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 216
particle-size: 216
statement: this.data = this.data[1..this.size()]
particle-size: 216
particle-size: 216
statement: return this.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this.Q_in.popFront()
particle-size: 216
particle-size: 216
statement: this.data = this.data[1..this.size()]
particle-size: 216
particle-size: 216
statement: return this.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 514
particle-size: 514
statement: return this.data.length
particle-size: 514
particle-size: 514
particle-size: 514
particle-size: 514
statement: this.__H1.__run()
particle-size: 133
particle-size: 133
statement: this.pkt_count = this.pkt_count + 1
particle-size: 133
statement: this.Q_in.popFront()
particle-size: 133
particle-size: 133
statement: this.data = this.data[1..this.size()]
particle-size: 133
particle-size: 133
statement: return this.data.length
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 514
particle-size: 514
statement: return this.data.length
particle-size: 514
particle-size: 514
particle-size: 514
particle-size: 514
statement: this.__S0.__run()
particle-size: 6
particle-size: 6
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 6
statement: this.route2 = 3
particle-size: 6
statement: this.route3 = 2 + 1
particle-size: 6
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 6
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 6
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 6
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 6
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 6
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 6
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 6
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 18
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 526
particle-size: 526
statement: return this.data.length
particle-size: 526
particle-size: 526
particle-size: 526
particle-size: 526
statement: this.__S1.__run()
particle-size: 14
particle-size: 14
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 526
particle-size: 526
statement: return this.data.length
particle-size: 526
particle-size: 526
particle-size: 526
particle-size: 526
statement: this.__S2.__run()
particle-size: 38
particle-size: 38
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 38
particle-size: 38
statement: r := this.front()
particle-size: 38
particle-size: 38
statement: return this.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.popFront()
particle-size: 38
particle-size: 38
statement: this.data = this.data[1..this.size()]
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this.data = this.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 526
particle-size: 526
statement: return this.data.length
particle-size: 526
particle-size: 526
particle-size: 526
particle-size: 526
statement: this.__S3.__run()
particle-size: 107
particle-size: 107
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 107
particle-size: 107
statement: r := this.front()
particle-size: 107
particle-size: 107
statement: return this.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this.popFront()
particle-size: 107
particle-size: 107
statement: this.data = this.data[1..this.size()]
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 762
particle-size: 762
particle-size: 762
particle-size: 257
repetition: 25
statement: __d.__step()
particle-size: 257
particle-size: 257
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return this.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: (action,node) := this.scheduler()
particle-size: 247
particle-size: 247
statement: actions := ([]: (R × R)[])
particle-size: 247
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 169
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 112
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
loop-index: 2
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 4
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 24
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 5
particle-size: 247
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(0,i)]
particle-size: 81
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 247
particle-size: 247
statement: return this.data.length
particle-size: 247
particle-size: 247
particle-size: 247
statement: actions ~= [(1,i)]
particle-size: 85
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this.front()
particle-size: 18
particle-size: 18
statement: return this.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this.popFront()
particle-size: 18
particle-size: 18
statement: this.data = this.data[1..this.size()]
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this.front()
particle-size: 42
particle-size: 42
statement: return this.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this.popFront()
particle-size: 42
particle-size: 42
statement: this.data = this.data[1..this.size()]
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 42
particle-size: 42
particle-size: 42
statement: if this.size() >= 2 {
    return ();
}
particle-size: 42
particle-size: 42
statement: return this.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 85
particle-size: 85
statement: r := this.front()
particle-size: 85
particle-size: 85
statement: return this.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this.popFront()
particle-size: 85
particle-size: 85
statement: this.data = this.data[1..this.size()]
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 85
particle-size: 85
particle-size: 85
statement: if this.size() >= 2 {
    return ();
}
particle-size: 85
particle-size: 85
statement: return this.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 83
statement: return ()
particle-size: 83
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 400
particle-size: 400
statement: return this.data.length
particle-size: 400
particle-size: 400
particle-size: 400
particle-size: 400
statement: this.__H0.__run()
particle-size: 169
particle-size: 169
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 169
particle-size: 169
statement: return this
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this.data = [x] ~ this.data
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 169
particle-size: 169
statement: this.data = this.data[1..this.size()]
particle-size: 169
particle-size: 169
statement: return this.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this.Q_in.popFront()
particle-size: 169
particle-size: 169
statement: this.data = this.data[1..this.size()]
particle-size: 169
particle-size: 169
statement: return this.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 400
particle-size: 400
statement: return this.data.length
particle-size: 400
particle-size: 400
particle-size: 400
particle-size: 400
statement: this.__H1.__run()
particle-size: 112
particle-size: 112
statement: this.pkt_count = this.pkt_count + 1
particle-size: 112
statement: this.Q_in.popFront()
particle-size: 112
particle-size: 112
statement: this.data = this.data[1..this.size()]
particle-size: 112
particle-size: 112
statement: return this.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 400
particle-size: 400
statement: return this.data.length
particle-size: 400
particle-size: 400
particle-size: 400
particle-size: 400
statement: this.__S0.__run()
particle-size: 4
particle-size: 4
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 4
statement: this.route2 = 3
particle-size: 4
statement: this.route3 = 2 + 1
particle-size: 4
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 4
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 4
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 4
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 4
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 4
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 4
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 4
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 12
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 408
particle-size: 408
statement: return this.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: this.__S1.__run()
particle-size: 10
particle-size: 10
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 408
particle-size: 408
statement: return this.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: this.__S2.__run()
particle-size: 24
particle-size: 24
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 24
particle-size: 24
statement: r := this.front()
particle-size: 24
particle-size: 24
statement: return this.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this.data = this.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 408
particle-size: 408
statement: return this.data.length
particle-size: 408
particle-size: 408
particle-size: 408
particle-size: 408
statement: this.__S3.__run()
particle-size: 81
particle-size: 81
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 81
particle-size: 81
statement: r := this.front()
particle-size: 81
particle-size: 81
statement: return this.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this.popFront()
particle-size: 81
particle-size: 81
statement: this.data = this.data[1..this.size()]
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if this.size() >= 2 {
    return ();
}
particle-size: 81
particle-size: 81
statement: return this.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 3
statement: this.data = this.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 579
particle-size: 579
particle-size: 579
particle-size: 199
repetition: 26
statement: __d.__step()
particle-size: 199
particle-size: 199
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: return this.data.length
particle-size: 199
particle-size: 199
particle-size: 199
particle-size: 199
statement: (action,node) := this.scheduler()
particle-size: 189
particle-size: 189
statement: actions := ([]: (R × R)[])
particle-size: 189
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 123
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 87
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
loop-index: 2
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 4
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 5
particle-size: 189
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(0,i)]
particle-size: 53
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 189
particle-size: 189
statement: return this.data.length
particle-size: 189
particle-size: 189
particle-size: 189
statement: actions ~= [(1,i)]
particle-size: 67
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 403
particle-size: 403
particle-size: 403
particle-size: 403
particle-size: 403
particle-size: 403
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (pkt,port) := this.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,1));
}
statement: this.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this.front()
particle-size: 12
particle-size: 12
statement: return this.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this.popFront()
particle-size: 12
particle-size: 12
statement: this.data = this.data[1..this.size()]
particle-size: 12
particle-size: 12
statement: return this.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this.front()
particle-size: 27
particle-size: 27
statement: return this.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this.popFront()
particle-size: 27
particle-size: 27
statement: this.data = this.data[1..this.size()]
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 117
particle-size: 117
statement: return this.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 67
particle-size: 67
statement: r := this.front()
particle-size: 67
particle-size: 67
statement: return this.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this.popFront()
particle-size: 67
particle-size: 67
statement: this.data = this.data[1..this.size()]
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 67
particle-size: 67
particle-size: 67
statement: if this.size() >= 2 {
    return ();
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 286
particle-size: 286
statement: return this.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this.__H0.__run()
particle-size: 123
particle-size: 123
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 123
particle-size: 123
statement: return this
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this.data = [x] ~ this.data
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 123
particle-size: 123
statement: this.data = this.data[1..this.size()]
particle-size: 123
particle-size: 123
statement: return this.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this.Q_in.popFront()
particle-size: 123
particle-size: 123
statement: this.data = this.data[1..this.size()]
particle-size: 123
particle-size: 123
statement: return this.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 286
particle-size: 286
statement: return this.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this.__H1.__run()
particle-size: 87
particle-size: 87
statement: this.pkt_count = this.pkt_count + 1
particle-size: 87
statement: this.Q_in.popFront()
particle-size: 87
particle-size: 87
statement: this.data = this.data[1..this.size()]
particle-size: 87
particle-size: 87
statement: return this.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 286
particle-size: 286
statement: return this.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: this.__S0.__run()
particle-size: 2
particle-size: 2
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 2
statement: this.route2 = 3
particle-size: 2
statement: this.route3 = 2 + 1
particle-size: 2
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 2
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 2
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 2
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 2
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 2
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 2
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 2
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 6
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this.__S1.__run()
particle-size: 6
particle-size: 6
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this.__S2.__run()
particle-size: 15
particle-size: 15
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.data = this.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 290
particle-size: 290
statement: return this.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this.__S3.__run()
particle-size: 53
particle-size: 53
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 53
particle-size: 53
statement: r := this.front()
particle-size: 53
particle-size: 53
statement: return this.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this.popFront()
particle-size: 53
particle-size: 53
statement: this.data = this.data[1..this.size()]
particle-size: 53
particle-size: 53
statement: return this.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 148
repetition: 27
statement: __d.__step()
particle-size: 148
particle-size: 148
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return this.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: (action,node) := this.scheduler()
particle-size: 138
particle-size: 138
statement: actions := ([]: (R × R)[])
particle-size: 138
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 91
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
loop-index: 1
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 69
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
loop-index: 2
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 3
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 138
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 138
particle-size: 138
statement: return this.data.length
particle-size: 138
particle-size: 138
particle-size: 138
statement: actions ~= [(1,i)]
particle-size: 47
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this.front()
particle-size: 17
particle-size: 17
statement: return this.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this.data = this.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 76
particle-size: 76
statement: return this.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this.front()
particle-size: 47
particle-size: 47
statement: return this.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this.popFront()
particle-size: 47
particle-size: 47
statement: this.data = this.data[1..this.size()]
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 209
particle-size: 209
statement: return this.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: this.__H0.__run()
particle-size: 91
particle-size: 91
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 91
particle-size: 91
statement: return this
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.data = [x] ~ this.data
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this.data = this.data[1..this.size()]
particle-size: 91
particle-size: 91
statement: return this.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 209
particle-size: 209
statement: return this.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: this.__H1.__run()
particle-size: 69
particle-size: 69
statement: this.pkt_count = this.pkt_count + 1
particle-size: 69
statement: this.Q_in.popFront()
particle-size: 69
particle-size: 69
statement: this.data = this.data[1..this.size()]
particle-size: 69
particle-size: 69
statement: return this.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 209
particle-size: 209
statement: return this.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: this.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.route1 = 1 + 1 + 1;
    this.route2 = 3;
    this.route3 = 2 + 1;
    this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3;
    this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3;
    this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2;
    this.nshortest = this.shortest1 + this.shortest2 + this.shortest3;
    for i in [1..3]{
        if (i == this.nshortest) {
            this.which = uniformInt(1,i);
        }
    }
    if this.which == this.shortest1 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
    } else if this.which == this.shortest1 + this.shortest2 {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
    } else {
        this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
    }
}
statement: this.route1 = 1 + 1 + 1
particle-size: 1
statement: this.route2 = 3
particle-size: 1
statement: this.route3 = 2 + 1
particle-size: 1
statement: this.shortest1 = this.route1 <= this.route2 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest2 = this.route2 <= this.route1 && this.route2 <= this.route3
particle-size: 1
statement: this.shortest3 = this.route3 <= this.route1 && this.route3 <= this.route2
particle-size: 1
statement: this.nshortest = this.shortest1 + this.shortest2 + this.shortest3
particle-size: 1
statement: for i in [1..3]{
    if (i == this.nshortest) {
        this.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 2
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
loop-index: 3
particle-size: 1
statement: if (i == this.nshortest) {
    this.which = uniformInt(1,i);
}
statement: this.which = uniformInt(1,i)
particle-size: 3
statement: if this.which == this.shortest1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.which == this.shortest1 + this.shortest2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
} else {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 211
particle-size: 211
statement: return this.data.length
particle-size: 211
particle-size: 211
particle-size: 211
particle-size: 211
statement: this.__S1.__run()
particle-size: 4
particle-size: 4
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 211
particle-size: 211
statement: return this.data.length
particle-size: 211
particle-size: 211
particle-size: 211
particle-size: 211
statement: this.__S2.__run()
particle-size: 10
particle-size: 10
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 10
particle-size: 10
statement: r := this.front()
particle-size: 10
particle-size: 10
statement: return this.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this.data = this.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 211
particle-size: 211
statement: return this.data.length
particle-size: 211
particle-size: 211
particle-size: 211
particle-size: 211
statement: this.__S3.__run()
particle-size: 34
particle-size: 34
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this.front()
particle-size: 34
particle-size: 34
statement: return this.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if this.size() >= 2 {
    return ();
}
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 297
particle-size: 297
particle-size: 297
particle-size: 109
repetition: 28
statement: __d.__step()
particle-size: 109
particle-size: 109
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return this.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: (action,node) := this.scheduler()
particle-size: 98
particle-size: 98
statement: actions := ([]: (R × R)[])
particle-size: 98
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(0,i)]
particle-size: 62
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
loop-index: 1
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(0,i)]
particle-size: 48
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
loop-index: 2
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 4
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(1,i)]
particle-size: 11
loop-index: 5
particle-size: 98
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 98
particle-size: 98
statement: return this.data.length
particle-size: 98
particle-size: 98
particle-size: 98
statement: actions ~= [(1,i)]
particle-size: 33
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: (pkt,port) := this.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this.front()
particle-size: 3
particle-size: 3
statement: return this.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this.__H0.Q_in.pushBack((pkt,1));
}
statement: this.__H0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,1));
}
statement: this.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,1));
}
statement: this.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 11
particle-size: 11
statement: r := this.front()
particle-size: 11
particle-size: 11
statement: return this.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.data = this.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 51
particle-size: 51
statement: return this.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this.front()
particle-size: 33
particle-size: 33
statement: return this.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this.popFront()
particle-size: 33
particle-size: 33
statement: this.data = this.data[1..this.size()]
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.__H0.__run()
particle-size: 62
particle-size: 62
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 62
particle-size: 62
statement: return this
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.data = [x] ~ this.data
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this.Q_in.popFront()
particle-size: 62
particle-size: 62
statement: this.data = this.data[1..this.size()]
particle-size: 62
particle-size: 62
statement: return this.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.__H1.__run()
particle-size: 48
particle-size: 48
statement: this.pkt_count = this.pkt_count + 1
particle-size: 48
statement: this.Q_in.popFront()
particle-size: 48
particle-size: 48
statement: this.data = this.data[1..this.size()]
particle-size: 48
particle-size: 48
statement: return this.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.__S1.__run()
particle-size: 2
particle-size: 2
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 140
particle-size: 140
statement: return this.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this.__S3.__run()
particle-size: 22
particle-size: 22
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 78
repetition: 29
statement: __d.__step()
particle-size: 78
particle-size: 78
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: (action,node) := this.scheduler()
particle-size: 67
particle-size: 67
statement: actions := ([]: (R × R)[])
particle-size: 67
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
loop-index: 1
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
loop-index: 2
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
loop-index: 3
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 67
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 67
particle-size: 67
statement: return this.data.length
particle-size: 67
particle-size: 67
particle-size: 67
statement: actions ~= [(1,i)]
particle-size: 22
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this.front()
particle-size: 6
particle-size: 6
statement: return this.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.data = this.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this.front()
particle-size: 22
particle-size: 22
statement: return this.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this.popFront()
particle-size: 22
particle-size: 22
statement: this.data = this.data[1..this.size()]
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.__H0.__run()
particle-size: 44
particle-size: 44
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 44
particle-size: 44
statement: return this
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.data = [x] ~ this.data
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this.Q_in.popFront()
particle-size: 44
particle-size: 44
statement: this.data = this.data[1..this.size()]
particle-size: 44
particle-size: 44
statement: return this.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.__H1.__run()
particle-size: 34
particle-size: 34
statement: this.pkt_count = this.pkt_count + 1
particle-size: 34
statement: this.Q_in.popFront()
particle-size: 34
particle-size: 34
statement: this.data = this.data[1..this.size()]
particle-size: 34
particle-size: 34
statement: return this.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],2));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.__S2.__run()
particle-size: 4
particle-size: 4
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 97
particle-size: 97
statement: return this.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this.__S3.__run()
particle-size: 14
particle-size: 14
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this.front()
particle-size: 14
particle-size: 14
statement: return this.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.popFront()
particle-size: 14
particle-size: 14
statement: this.data = this.data[1..this.size()]
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 56
repetition: 30
statement: __d.__step()
particle-size: 56
particle-size: 56
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return this.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (action,node) := this.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 28
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 24
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 15
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: (pkt,port) := this.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,2));
}
statement: this.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 20
particle-size: 20
statement: return this.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 15
particle-size: 15
statement: r := this.front()
particle-size: 15
particle-size: 15
statement: return this.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this.popFront()
particle-size: 15
particle-size: 15
statement: this.data = this.data[1..this.size()]
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.__H0.__run()
particle-size: 28
particle-size: 28
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.data = [x] ~ this.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 28
particle-size: 28
statement: this.data = this.data[1..this.size()]
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this.Q_in.popFront()
particle-size: 28
particle-size: 28
statement: this.data = this.data[1..this.size()]
particle-size: 28
particle-size: 28
statement: return this.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.__H1.__run()
particle-size: 24
particle-size: 24
statement: this.pkt_count = this.pkt_count + 1
particle-size: 24
statement: this.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this.data = this.data[1..this.size()]
particle-size: 24
particle-size: 24
statement: return this.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 61
particle-size: 61
statement: return this.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this.__S3.__run()
particle-size: 7
particle-size: 7
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this.front()
particle-size: 7
particle-size: 7
statement: return this.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = this.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 41
repetition: 31
statement: __d.__step()
particle-size: 41
particle-size: 41
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: (action,node) := this.scheduler()
particle-size: 30
particle-size: 30
statement: actions := ([]: (R × R)[])
particle-size: 30
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
loop-index: 1
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
loop-index: 2
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
loop-index: 3
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
loop-index: 4
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 30
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 30
particle-size: 30
statement: return this.data.length
particle-size: 30
particle-size: 30
particle-size: 30
statement: actions ~= [(1,i)]
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this.front()
particle-size: 9
particle-size: 9
statement: return this.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this.popFront()
particle-size: 9
particle-size: 9
statement: this.data = this.data[1..this.size()]
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.__H0.__run()
particle-size: 19
particle-size: 19
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 19
particle-size: 19
statement: return this
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.data = [x] ~ this.data
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this.data = this.data[1..this.size()]
particle-size: 19
particle-size: 19
statement: return this.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.__H1.__run()
particle-size: 17
particle-size: 17
statement: this.pkt_count = this.pkt_count + 1
particle-size: 17
statement: this.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this.data = this.data[1..this.size()]
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 41
particle-size: 41
statement: return this.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this.__S3.__run()
particle-size: 4
particle-size: 4
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this.front()
particle-size: 4
particle-size: 4
statement: return this.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.popFront()
particle-size: 4
particle-size: 4
statement: this.data = this.data[1..this.size()]
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 29
repetition: 32
statement: __d.__step()
particle-size: 29
particle-size: 29
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return this.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: (action,node) := this.scheduler()
particle-size: 18
particle-size: 18
statement: actions := ([]: (R × R)[])
particle-size: 18
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 1
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 2
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 3
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 4
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 18
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(1,i)]
particle-size: 5
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this.__S3.Q_in.pushBack((pkt,2));
}
statement: this.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this.front()
particle-size: 5
particle-size: 5
statement: return this.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this.popFront()
particle-size: 5
particle-size: 5
statement: this.data = this.data[1..this.size()]
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.__H0.__run()
particle-size: 11
particle-size: 11
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 11
particle-size: 11
statement: return this
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.data = [x] ~ this.data
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this.data = this.data[1..this.size()]
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.__H1.__run()
particle-size: 10
particle-size: 10
statement: this.pkt_count = this.pkt_count + 1
particle-size: 10
statement: this.Q_in.popFront()
particle-size: 10
particle-size: 10
statement: this.data = this.data[1..this.size()]
particle-size: 10
particle-size: 10
statement: return this.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 23
particle-size: 23
statement: return this.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this.__S3.__run()
particle-size: 2
particle-size: 2
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 22
repetition: 33
statement: __d.__step()
particle-size: 22
particle-size: 22
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return this.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: (action,node) := this.scheduler()
particle-size: 11
particle-size: 11
statement: actions := ([]: (R × R)[])
particle-size: 11
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
loop-index: 1
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
loop-index: 2
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
loop-index: 3
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
loop-index: 4
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
loop-index: 5
particle-size: 11
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
statement: actions ~= [(1,i)]
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this.front()
particle-size: 2
particle-size: 2
statement: return this.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.popFront()
particle-size: 2
particle-size: 2
statement: this.data = this.data[1..this.size()]
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.data = this.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.__H0.__run()
particle-size: 7
particle-size: 7
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.data = [x] ~ this.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this.data = this.data[1..this.size()]
particle-size: 7
particle-size: 7
statement: return this.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.__H1.__run()
particle-size: 6
particle-size: 6
statement: this.pkt_count = this.pkt_count + 1
particle-size: 6
statement: this.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this.data = this.data[1..this.size()]
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 14
particle-size: 14
statement: return this.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this.__S3.__run()
particle-size: 1
particle-size: 1
statement: if this.Q_in.data[0][1] == 1 || this.Q_in.data[0][1] == 2 {
    this.Q_out.pushBack((this.Q_in.takeFront()[0],3));
}
statement: this.Q_out.pushBack((this.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 17
repetition: 34
statement: __d.__step()
particle-size: 17
particle-size: 17
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return this.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (action,node) := this.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_out.size() {
    (pkt,port) := this.__H0.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_out.size() {
    (pkt,port) := this.__H1.Q_out.takeFront();
    if port == 1 {
        this.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_out.size() {
    (pkt,port) := this.__S0.Q_out.takeFront();
    if port == 1 {
        this.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this.__S1.Q_out.size() {
    (pkt,port) := this.__S1.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this.__S2.Q_out.size() {
    (pkt,port) := this.__S2.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this.__S3.Q_out.size() {
    (pkt,port) := this.__S3.Q_out.takeFront();
    if port == 1 {
        this.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this.front()
particle-size: 1
particle-size: 1
statement: return this.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this.__H1.Q_in.pushBack((pkt,1));
}
statement: this.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = this.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.__H0.__run()
particle-size: 3
particle-size: 3
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.data = [x] ~ this.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this.__H1.__run()
particle-size: 3
particle-size: 3
statement: this.pkt_count = this.pkt_count + 1
particle-size: 3
statement: this.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this.data = this.data[1..this.size()]
particle-size: 3
particle-size: 3
statement: return this.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 13
repetition: 35
statement: __d.__step()
particle-size: 13
particle-size: 13
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return this.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: (action,node) := this.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this.__H0.Q_in;
    } else if i == 1 {
        this.__H1.Q_in;
    } else if i == 2 {
        this.__S0.Q_in;
    } else if i == 3 {
        this.__S1.Q_in;
    } else if i == 4 {
        this.__S2.Q_in;
    } else {
        this.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this.__H0.Q_out;
    } else if i == 1 {
        this.__H1.Q_out;
    } else if i == 2 {
        this.__S0.Q_out;
    } else if i == 3 {
        this.__S1.Q_out;
    } else if i == 4 {
        this.__S2.Q_out;
    } else {
        this.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_in;
} else if i == 1 {
    this.__H1.Q_in;
} else if i == 2 {
    this.__S0.Q_in;
} else if i == 3 {
    this.__S1.Q_in;
} else if i == 4 {
    this.__S2.Q_in;
} else {
    this.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this.__H0.Q_out;
} else if i == 1 {
    this.__H1.Q_out;
} else if i == 2 {
    this.__S0.Q_out;
} else if i == 3 {
    this.__S1.Q_out;
} else if i == 4 {
    this.__S2.Q_out;
} else {
    this.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this.__H0.Q_out.size() {
        (pkt,port) := this.__H0.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this.__H1.Q_out.size() {
        (pkt,port) := this.__H1.Q_out.takeFront();
        if port == 1 {
            this.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this.__S0.Q_out.size() {
        (pkt,port) := this.__S0.Q_out.takeFront();
        if port == 1 {
            this.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this.__S1.Q_out.size() {
        (pkt,port) := this.__S1.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this.__S2.Q_out.size() {
        (pkt,port) := this.__S2.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this.__S3.Q_out.size() {
        (pkt,port) := this.__S3.Q_out.takeFront();
        if port == 1 {
            this.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this.__H0.Q_in.size() {
        this.__H0.__run();
    }
    if node == 1 && this.__H1.Q_in.size() {
        this.__H1.__run();
    }
    if node == 2 && this.__S0.Q_in.size() {
        this.__S0.__run();
    }
    if node == 3 && this.__S1.Q_in.size() {
        this.__S1.__run();
    }
    if node == 4 && this.__S2.Q_in.size() {
        this.__S2.__run();
    }
    if node == 5 && this.__S3.Q_in.size() {
        this.__S3.__run();
    }
}
statement: if node == 0 && this.__H0.Q_in.size() {
    this.__H0.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.__H0.__run()
particle-size: 1
particle-size: 1
statement: this.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.data = [x] ~ this.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this.pkt_count < 3 {
    this.Q_in.pushFront((Packet'(),0));
    this.pkt_count = this.pkt_count + 1;
    this.Q_out.pushBack((this.Q_in.takeFront()[0],1));
} else {
    this.Q_in.popFront();
    this.Q_in.popFront();
}
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this.__H1.Q_in.size() {
    this.__H1.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this.__H1.__run()
particle-size: 1
particle-size: 1
statement: this.pkt_count = this.pkt_count + 1
particle-size: 1
statement: this.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this.data = this.data[1..this.size()]
particle-size: 1
particle-size: 1
statement: return this.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this.__S0.Q_in.size() {
    this.__S0.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this.__S1.Q_in.size() {
    this.__S1.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this.__S2.Q_in.size() {
    this.__S2.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this.__S3.Q_in.size() {
    this.__S3.__run();
}
particle-size: 2
particle-size: 2
statement: return this.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 11
repetition: 36
statement: __d.__step()
particle-size: 11
particle-size: 11
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
repetition: 37
statement: __d.__step()
particle-size: 11
particle-size: 11
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
repetition: 38
statement: __d.__step()
particle-size: 11
particle-size: 11
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
repetition: 39
statement: __d.__step()
particle-size: 11
particle-size: 11
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
repetition: 40
statement: __d.__step()
particle-size: 11
particle-size: 11
statement: if this.__H0.Q_in.size() || this.__H0.Q_out.size() || this.__H1.Q_in.size() || this.__H1.Q_out.size() || this.__S0.Q_in.size() || this.__S0.Q_out.size() || this.__S1.Q_in.size() || this.__S1.Q_out.size() || this.__S2.Q_in.size() || this.__S2.Q_out.size() || this.__S3.Q_in.size() || this.__S3.Q_out.size() {
    (action,node) := this.scheduler();
    if action {
        if node == 0 && this.__H0.Q_out.size() {
            (pkt,port) := this.__H0.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this.__H1.Q_out.size() {
            (pkt,port) := this.__H1.Q_out.takeFront();
            if port == 1 {
                this.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this.__S0.Q_out.size() {
            (pkt,port) := this.__S0.Q_out.takeFront();
            if port == 1 {
                this.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this.__S1.Q_out.size() {
            (pkt,port) := this.__S1.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this.__S2.Q_out.size() {
            (pkt,port) := this.__S2.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this.__S3.Q_out.size() {
            (pkt,port) := this.__S3.Q_out.takeFront();
            if port == 1 {
                this.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this.__H0.Q_in.size() {
            this.__H0.__run();
        }
        if node == 1 && this.__H1.Q_in.size() {
            this.__H1.__run();
        }
        if node == 2 && this.__S0.Q_in.size() {
            this.__S0.__run();
        }
        if node == 3 && this.__S1.Q_in.size() {
            this.__S1.__run();
        }
        if node == 4 && this.__S2.Q_in.size() {
            this.__S2.__run();
        }
        if node == 5 && this.__S3.Q_in.size() {
            this.__S3.__run();
        }
    }
}
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return this.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: q₁ := Expectation(((if 1 == 0 {
    __d.__H0.pkt_count;
} else if 1 == 1 {
    __d.__H1.pkt_count;
} else {
    assert(0);
}) < 3) != 0)
particle-size: 11
statement: return (q₁)
particle-size: 11
p[r_] := DiracDelta[-1/23988055525253185536*19983445559637345983+r]

real	34m51.847s
user	34m41.520s
sys	0m10.344s
