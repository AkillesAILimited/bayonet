statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: this.route3 = 0
particle-size: 1
statement: this.shortest1 = 0
particle-size: 1
statement: this.shortest2 = 0
particle-size: 1
statement: this.shortest3 = 0
particle-size: 1
statement: this.nshortest = 0
particle-size: 1
statement: this.which = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 40 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 1
statement: this'.route2 = ?
particle-size: 1
statement: this'.route3 = ? + ?
particle-size: 1
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 1
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 1
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 1
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 1
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 1
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 1
loop-index: 2
particle-size: 2
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 4
loop-index: 3
particle-size: 3
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 3
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 9
repetition: 3
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: actions := ([]: (R × R)[])
particle-size: 9
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 3
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 4
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
loop-index: 5
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.__H0.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 1
statement: this'.route2 = ?
particle-size: 1
statement: this'.route3 = ? + ?
particle-size: 1
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 1
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 1
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 1
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 1
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 1
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 1
loop-index: 2
particle-size: 2
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 4
loop-index: 3
particle-size: 3
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 3
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 18
repetition: 4
statement: __d.__step()
particle-size: 18
particle-size: 18
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (action,node) := this'.scheduler()
particle-size: 18
particle-size: 18
statement: actions := ([]: (R × R)[])
particle-size: 18
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 2
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 3
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 4
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
loop-index: 5
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.__H0.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 15
particle-size: 15
statement: return this
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = [x] ~ this'.data
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 3
statement: this'.route2 = ?
particle-size: 3
statement: this'.route3 = ? + ?
particle-size: 3
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 3
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 3
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 3
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 3
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 3
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 3
loop-index: 2
particle-size: 6
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 12
loop-index: 3
particle-size: 9
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 9
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.__S3.__run()
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 40
repetition: 5
statement: __d.__step()
particle-size: 40
particle-size: 40
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: (action,node) := this'.scheduler()
particle-size: 40
particle-size: 40
statement: actions := ([]: (R × R)[])
particle-size: 40
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 1
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 2
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(1,i)]
particle-size: 21
loop-index: 3
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
loop-index: 5
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
statement: actions ~= [(1,i)]
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.__H0.__run()
particle-size: 40
particle-size: 40
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 40
particle-size: 40
statement: return this
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = [x] ~ this'.data
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 21
particle-size: 21
statement: return this
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = [x] ~ this'.data
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 21
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.__S0.__run()
particle-size: 11
particle-size: 11
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 11
statement: this'.route2 = ?
particle-size: 11
statement: this'.route3 = ? + ?
particle-size: 11
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 11
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 11
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 11
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 11
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 11
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 10
loop-index: 2
particle-size: 18
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 34
loop-index: 3
particle-size: 26
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 21
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this'.__S3.__run()
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 87
repetition: 6
statement: __d.__step()
particle-size: 87
particle-size: 87
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: (action,node) := this'.scheduler()
particle-size: 87
particle-size: 87
statement: actions := ([]: (R × R)[])
particle-size: 87
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 86
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(1,i)]
particle-size: 46
loop-index: 1
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
loop-index: 2
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(1,i)]
particle-size: 46
loop-index: 3
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
loop-index: 5
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
statement: actions ~= [(1,i)]
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.__H0.__run()
particle-size: 86
particle-size: 86
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 86
particle-size: 86
statement: return this
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = [x] ~ this'.data
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 37
particle-size: 37
statement: return this
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = [x] ~ this'.data
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 37
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 37
particle-size: 37
statement: r := this'.front()
particle-size: 37
particle-size: 37
statement: return this'.data[0]
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.popFront()
particle-size: 37
particle-size: 37
statement: this'.data = this'.data[1..this'.size()]
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return r
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.Q_in.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.Q_in.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.__S0.__run()
particle-size: 28
particle-size: 28
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 28
statement: this'.route2 = ?
particle-size: 28
statement: this'.route3 = ? + ?
particle-size: 28
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 28
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 28
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 28
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 28
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 28
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 22
loop-index: 2
particle-size: 40
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 72
loop-index: 3
particle-size: 60
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 45
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: this'.__S3.__run()
particle-size: 9
particle-size: 9
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 314
particle-size: 314
particle-size: 314
particle-size: 164
repetition: 7
statement: __d.__step()
particle-size: 164
particle-size: 164
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: (action,node) := this'.scheduler()
particle-size: 164
particle-size: 164
statement: actions := ([]: (R × R)[])
particle-size: 164
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 1
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
loop-index: 2
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(1,i)]
particle-size: 102
loop-index: 3
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
statement: actions ~= [(1,i)]
particle-size: 9
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 454
particle-size: 454
particle-size: 454
particle-size: 454
particle-size: 454
particle-size: 454
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 82
particle-size: 82
particle-size: 82
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 102
particle-size: 102
statement: r := this'.front()
particle-size: 102
particle-size: 102
statement: return this'.data[0]
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return r
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 42
particle-size: 42
particle-size: 42
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.__H0.__run()
particle-size: 162
particle-size: 162
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 162
particle-size: 162
statement: return this
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = [x] ~ this'.data
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 39
particle-size: 39
statement: return this
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.data = [x] ~ this'.data
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 39
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.data = this'.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.Q_in.popFront()
particle-size: 123
particle-size: 123
statement: this'.data = this'.data[1..this'.size()]
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.Q_in.popFront()
particle-size: 123
particle-size: 123
statement: this'.data = this'.data[1..this'.size()]
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.__S0.__run()
particle-size: 54
particle-size: 54
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 54
statement: this'.route2 = ?
particle-size: 54
statement: this'.route3 = ? + ?
particle-size: 54
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 54
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 54
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 54
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 54
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 54
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 45
loop-index: 2
particle-size: 78
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 142
loop-index: 3
particle-size: 113
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 78
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 119
particle-size: 119
statement: r := this'.front()
particle-size: 119
particle-size: 119
statement: return this'.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 401
particle-size: 401
statement: return this'.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this'.__S1.__run()
particle-size: 14
particle-size: 14
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 401
particle-size: 401
statement: return this'.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 401
particle-size: 401
statement: return this'.data.length
particle-size: 401
particle-size: 401
particle-size: 401
particle-size: 401
statement: this'.__S3.__run()
particle-size: 18
particle-size: 18
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 286
repetition: 8
statement: __d.__step()
particle-size: 286
particle-size: 286
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
particle-size: 286
statement: (action,node) := this'.scheduler()
particle-size: 286
particle-size: 286
statement: actions := ([]: (R × R)[])
particle-size: 286
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 270
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(1,i)]
particle-size: 123
loop-index: 1
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
loop-index: 2
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 96
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(1,i)]
particle-size: 168
loop-index: 3
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 4
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 286
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 286
particle-size: 286
statement: return this'.data.length
particle-size: 286
particle-size: 286
particle-size: 286
statement: actions ~= [(1,i)]
particle-size: 18
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 782
particle-size: 782
particle-size: 782
particle-size: 782
particle-size: 782
particle-size: 782
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 123
particle-size: 123
statement: r := this'.front()
particle-size: 123
particle-size: 123
statement: return this'.data[0]
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.popFront()
particle-size: 123
particle-size: 123
statement: this'.data = this'.data[1..this'.size()]
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return r
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 123
particle-size: 123
particle-size: 123
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 122
statement: return ()
particle-size: 122
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 168
particle-size: 168
statement: r := this'.front()
particle-size: 168
particle-size: 168
statement: return this'.data[0]
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: this'.popFront()
particle-size: 168
particle-size: 168
statement: this'.data = this'.data[1..this'.size()]
particle-size: 168
particle-size: 168
statement: return this'.data.length
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return r
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 51
particle-size: 51
particle-size: 51
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 69
particle-size: 69
particle-size: 69
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.data = this'.data ~ [x]
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 457
particle-size: 457
statement: return this'.data.length
particle-size: 457
particle-size: 457
particle-size: 457
particle-size: 457
statement: this'.__H0.__run()
particle-size: 270
particle-size: 270
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 270
particle-size: 270
statement: return this
particle-size: 270
particle-size: 270
particle-size: 270
particle-size: 270
particle-size: 270
statement: this'.data = [x] ~ this'.data
particle-size: 270
statement: return ()
particle-size: 270
particle-size: 270
particle-size: 270
particle-size: 270
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 45
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_in.popFront()
particle-size: 225
particle-size: 225
statement: this'.data = this'.data[1..this'.size()]
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: return ()
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.Q_in.popFront()
particle-size: 225
particle-size: 225
statement: this'.data = this'.data[1..this'.size()]
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: return ()
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: return ()
particle-size: 270
particle-size: 270
particle-size: 270
particle-size: 270
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 457
particle-size: 457
statement: return this'.data.length
particle-size: 457
particle-size: 457
particle-size: 457
particle-size: 457
statement: this'.__H1.__run()
particle-size: 9
particle-size: 9
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 457
particle-size: 457
statement: return this'.data.length
particle-size: 457
particle-size: 457
particle-size: 457
particle-size: 457
statement: this'.__S0.__run()
particle-size: 96
particle-size: 96
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 96
statement: this'.route2 = ?
particle-size: 96
statement: this'.route3 = ? + ?
particle-size: 96
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 96
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 96
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 96
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 96
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 96
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 66
loop-index: 2
particle-size: 124
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 202
loop-index: 3
particle-size: 176
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 132
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 58
particle-size: 58
statement: r := this'.front()
particle-size: 58
particle-size: 58
statement: return this'.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.popFront()
particle-size: 58
particle-size: 58
statement: this'.data = this'.data[1..this'.size()]
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 58
particle-size: 58
particle-size: 58
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 184
particle-size: 184
statement: r := this'.front()
particle-size: 184
particle-size: 184
statement: return this'.data[0]
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.popFront()
particle-size: 184
particle-size: 184
statement: this'.data = this'.data[1..this'.size()]
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return r
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 665
particle-size: 665
statement: return this'.data.length
particle-size: 665
particle-size: 665
particle-size: 665
particle-size: 665
statement: this'.__S1.__run()
particle-size: 32
particle-size: 32
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 665
particle-size: 665
statement: return this'.data.length
particle-size: 665
particle-size: 665
particle-size: 665
particle-size: 665
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 665
particle-size: 665
statement: return this'.data.length
particle-size: 665
particle-size: 665
particle-size: 665
particle-size: 665
statement: this'.__S3.__run()
particle-size: 44
particle-size: 44
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 990
particle-size: 990
particle-size: 990
particle-size: 427
repetition: 9
statement: __d.__step()
particle-size: 427
particle-size: 427
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
particle-size: 427
statement: (action,node) := this'.scheduler()
particle-size: 427
particle-size: 427
statement: actions := ([]: (R × R)[])
particle-size: 427
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 398
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(1,i)]
particle-size: 153
loop-index: 1
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
loop-index: 2
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 142
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(1,i)]
particle-size: 247
loop-index: 3
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 56
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 4
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 427
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(0,i)]
particle-size: 71
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 427
particle-size: 427
statement: return this'.data.length
particle-size: 427
particle-size: 427
particle-size: 427
statement: actions ~= [(1,i)]
particle-size: 44
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1181
particle-size: 1181
particle-size: 1181
particle-size: 1181
particle-size: 1181
particle-size: 1181
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 153
particle-size: 153
statement: r := this'.front()
particle-size: 153
particle-size: 153
statement: return this'.data[0]
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.popFront()
particle-size: 153
particle-size: 153
statement: this'.data = this'.data[1..this'.size()]
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return r
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 153
particle-size: 153
particle-size: 153
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.data = this'.data ~ [x]
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 247
particle-size: 247
statement: r := this'.front()
particle-size: 247
particle-size: 247
statement: return this'.data[0]
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: this'.popFront()
particle-size: 247
particle-size: 247
statement: this'.data = this'.data[1..this'.size()]
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return ()
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return r
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 68
particle-size: 68
particle-size: 68
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: return ()
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 68
particle-size: 68
particle-size: 68
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 75
particle-size: 75
particle-size: 75
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.data = this'.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: this'.__H0.__run()
particle-size: 398
particle-size: 398
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 398
particle-size: 398
statement: return this
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: this'.data = [x] ~ this'.data
particle-size: 398
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 41
particle-size: 41
statement: return this
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = [x] ~ this'.data
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 41
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.Q_in.popFront()
particle-size: 357
particle-size: 357
statement: this'.data = this'.data[1..this'.size()]
particle-size: 357
particle-size: 357
statement: return this'.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: this'.Q_in.popFront()
particle-size: 357
particle-size: 357
statement: this'.data = this'.data[1..this'.size()]
particle-size: 357
particle-size: 357
statement: return this'.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 398
particle-size: 398
particle-size: 398
particle-size: 398
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: this'.__H1.__run()
particle-size: 18
particle-size: 18
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: this'.__S0.__run()
particle-size: 142
particle-size: 142
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 142
statement: this'.route2 = ?
particle-size: 142
statement: this'.route3 = ? + ?
particle-size: 142
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 142
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 142
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 142
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 142
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 142
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 101
loop-index: 2
particle-size: 187
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 308
loop-index: 3
particle-size: 260
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 192
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 80
particle-size: 80
particle-size: 80
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 275
particle-size: 275
statement: r := this'.front()
particle-size: 275
particle-size: 275
statement: return this'.data[0]
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: this'.popFront()
particle-size: 275
particle-size: 275
statement: this'.data = this'.data[1..this'.size()]
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return r
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 241
statement: return ()
particle-size: 241
particle-size: 275
particle-size: 275
particle-size: 275
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1004
particle-size: 1004
statement: return this'.data.length
particle-size: 1004
particle-size: 1004
particle-size: 1004
particle-size: 1004
statement: this'.__S1.__run()
particle-size: 56
particle-size: 56
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1004
particle-size: 1004
statement: return this'.data.length
particle-size: 1004
particle-size: 1004
particle-size: 1004
particle-size: 1004
statement: this'.__S2.__run()
particle-size: 14
particle-size: 14
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1004
particle-size: 1004
statement: return this'.data.length
particle-size: 1004
particle-size: 1004
particle-size: 1004
particle-size: 1004
statement: this'.__S3.__run()
particle-size: 71
particle-size: 71
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 71
particle-size: 71
statement: r := this'.front()
particle-size: 71
particle-size: 71
statement: return this'.data[0]
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return r
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.data = this'.data ~ [x]
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 1486
particle-size: 1486
particle-size: 1486
particle-size: 653
repetition: 10
statement: __d.__step()
particle-size: 653
particle-size: 653
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: (action,node) := this'.scheduler()
particle-size: 653
particle-size: 653
statement: actions := ([]: (R × R)[])
particle-size: 653
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 575
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(1,i)]
particle-size: 177
loop-index: 1
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
loop-index: 2
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 179
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(1,i)]
particle-size: 385
loop-index: 3
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 4
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 5
particle-size: 653
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(0,i)]
particle-size: 125
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 653
particle-size: 653
statement: return this'.data.length
particle-size: 653
particle-size: 653
particle-size: 653
statement: actions ~= [(1,i)]
particle-size: 71
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1761
particle-size: 1761
particle-size: 1761
particle-size: 1761
particle-size: 1761
particle-size: 1761
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 177
particle-size: 177
statement: r := this'.front()
particle-size: 177
particle-size: 177
statement: return this'.data[0]
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: this'.popFront()
particle-size: 177
particle-size: 177
statement: this'.data = this'.data[1..this'.size()]
particle-size: 177
particle-size: 177
statement: return this'.data.length
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: return ()
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: return r
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 177
particle-size: 177
particle-size: 177
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 177
particle-size: 177
statement: return this'.data.length
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: this'.data = this'.data ~ [x]
particle-size: 177
statement: return ()
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 385
particle-size: 385
statement: r := this'.front()
particle-size: 385
particle-size: 385
statement: return this'.data[0]
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
statement: this'.popFront()
particle-size: 385
particle-size: 385
statement: this'.data = this'.data[1..this'.size()]
particle-size: 385
particle-size: 385
statement: return this'.data.length
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
statement: return ()
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
statement: return r
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
particle-size: 385
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 106
particle-size: 106
particle-size: 106
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 160
particle-size: 160
particle-size: 160
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this'.data = this'.data ~ [x]
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 703
particle-size: 703
statement: return this'.data.length
particle-size: 703
particle-size: 703
particle-size: 703
particle-size: 703
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 71
particle-size: 71
statement: r := this'.front()
particle-size: 71
particle-size: 71
statement: return this'.data[0]
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return r
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 71
particle-size: 71
particle-size: 71
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.data = this'.data ~ [x]
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1058
particle-size: 1058
statement: return this'.data.length
particle-size: 1058
particle-size: 1058
particle-size: 1058
particle-size: 1058
statement: this'.__H0.__run()
particle-size: 575
particle-size: 575
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 575
particle-size: 575
statement: return this
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: this'.data = [x] ~ this'.data
particle-size: 575
statement: return ()
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 46
particle-size: 46
statement: return this
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = [x] ~ this'.data
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_in.popFront()
particle-size: 529
particle-size: 529
statement: this'.data = this'.data[1..this'.size()]
particle-size: 529
particle-size: 529
statement: return this'.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: this'.Q_in.popFront()
particle-size: 529
particle-size: 529
statement: this'.data = this'.data[1..this'.size()]
particle-size: 529
particle-size: 529
statement: return this'.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 575
particle-size: 575
particle-size: 575
particle-size: 575
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1058
particle-size: 1058
statement: return this'.data.length
particle-size: 1058
particle-size: 1058
particle-size: 1058
particle-size: 1058
statement: this'.__H1.__run()
particle-size: 44
particle-size: 44
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 44
statement: this'.Q_in.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1058
particle-size: 1058
statement: return this'.data.length
particle-size: 1058
particle-size: 1058
particle-size: 1058
particle-size: 1058
statement: this'.__S0.__run()
particle-size: 179
particle-size: 179
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 179
statement: this'.route2 = ?
particle-size: 179
statement: this'.route3 = ? + ?
particle-size: 179
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 179
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 179
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 179
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 179
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 179
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 125
loop-index: 2
particle-size: 234
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 384
loop-index: 3
particle-size: 325
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 249
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 99
particle-size: 99
statement: r := this'.front()
particle-size: 99
particle-size: 99
statement: return this'.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.popFront()
particle-size: 99
particle-size: 99
statement: this'.data = this'.data[1..this'.size()]
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 99
particle-size: 99
particle-size: 99
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 132
particle-size: 132
statement: r := this'.front()
particle-size: 132
particle-size: 132
statement: return this'.data[0]
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return r
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 346
particle-size: 346
statement: r := this'.front()
particle-size: 346
particle-size: 346
statement: return this'.data[0]
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
statement: this'.popFront()
particle-size: 346
particle-size: 346
statement: this'.data = this'.data[1..this'.size()]
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
statement: return ()
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
statement: return r
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
particle-size: 346
statement: return ()
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 312
statement: return ()
particle-size: 312
particle-size: 346
particle-size: 346
particle-size: 346
statement: return ()
particle-size: 566
particle-size: 566
particle-size: 566
particle-size: 566
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1445
particle-size: 1445
statement: return this'.data.length
particle-size: 1445
particle-size: 1445
particle-size: 1445
particle-size: 1445
statement: this'.__S1.__run()
particle-size: 103
particle-size: 103
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1445
particle-size: 1445
statement: return this'.data.length
particle-size: 1445
particle-size: 1445
particle-size: 1445
particle-size: 1445
statement: this'.__S2.__run()
particle-size: 32
particle-size: 32
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1445
particle-size: 1445
statement: return this'.data.length
particle-size: 1445
particle-size: 1445
particle-size: 1445
particle-size: 1445
statement: this'.__S3.__run()
particle-size: 125
particle-size: 125
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 125
particle-size: 125
statement: r := this'.front()
particle-size: 125
particle-size: 125
statement: return this'.data[0]
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.popFront()
particle-size: 125
particle-size: 125
statement: this'.data = this'.data[1..this'.size()]
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return r
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.data = this'.data ~ [x]
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 859
repetition: 11
statement: __d.__step()
particle-size: 859
particle-size: 859
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
particle-size: 859
statement: (action,node) := this'.scheduler()
particle-size: 859
particle-size: 859
statement: actions := ([]: (R × R)[])
particle-size: 859
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 751
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(1,i)]
particle-size: 185
loop-index: 1
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 71
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
loop-index: 2
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 199
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(1,i)]
particle-size: 481
loop-index: 3
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 154
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(1,i)]
particle-size: 103
loop-index: 4
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 5
particle-size: 859
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(0,i)]
particle-size: 188
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 859
particle-size: 859
statement: return this'.data.length
particle-size: 859
particle-size: 859
particle-size: 859
statement: actions ~= [(1,i)]
particle-size: 125
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2338
particle-size: 2338
particle-size: 2338
particle-size: 2338
particle-size: 2338
particle-size: 2338
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 185
particle-size: 185
statement: r := this'.front()
particle-size: 185
particle-size: 185
statement: return this'.data[0]
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: this'.popFront()
particle-size: 185
particle-size: 185
statement: this'.data = this'.data[1..this'.size()]
particle-size: 185
particle-size: 185
statement: return this'.data.length
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: return ()
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: return r
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 185
particle-size: 185
particle-size: 185
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 185
particle-size: 185
statement: return this'.data.length
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: this'.data = this'.data ~ [x]
particle-size: 185
statement: return ()
particle-size: 185
particle-size: 185
particle-size: 185
particle-size: 185
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 479
particle-size: 479
statement: r := this'.front()
particle-size: 479
particle-size: 479
statement: return this'.data[0]
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: this'.popFront()
particle-size: 479
particle-size: 479
statement: this'.data = this'.data[1..this'.size()]
particle-size: 479
particle-size: 479
statement: return this'.data.length
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: return ()
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: return r
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
particle-size: 479
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 122
particle-size: 122
particle-size: 122
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return ()
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 122
particle-size: 122
particle-size: 122
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 147
particle-size: 147
particle-size: 147
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 147
particle-size: 147
statement: return this'.data.length
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 147
particle-size: 147
particle-size: 147
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 210
particle-size: 210
particle-size: 210
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 210
particle-size: 210
statement: return this'.data.length
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 207
statement: return ()
particle-size: 207
particle-size: 210
particle-size: 210
particle-size: 210
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 102
particle-size: 102
statement: r := this'.front()
particle-size: 102
particle-size: 102
statement: return this'.data[0]
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return r
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 102
particle-size: 102
particle-size: 102
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.data = this'.data ~ [x]
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 125
particle-size: 125
statement: r := this'.front()
particle-size: 125
particle-size: 125
statement: return this'.data[0]
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.popFront()
particle-size: 125
particle-size: 125
statement: this'.data = this'.data[1..this'.size()]
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: return r
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 125
particle-size: 125
particle-size: 125
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 125
particle-size: 125
statement: return this'.data.length
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: this'.data = this'.data ~ [x]
particle-size: 125
statement: return ()
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1415
particle-size: 1415
statement: return this'.data.length
particle-size: 1415
particle-size: 1415
particle-size: 1415
particle-size: 1415
statement: this'.__H0.__run()
particle-size: 749
particle-size: 749
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 749
particle-size: 749
statement: return this
particle-size: 749
particle-size: 749
particle-size: 749
particle-size: 749
particle-size: 749
statement: this'.data = [x] ~ this'.data
particle-size: 749
statement: return ()
particle-size: 749
particle-size: 749
particle-size: 749
particle-size: 749
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 43
particle-size: 43
statement: return this
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = [x] ~ this'.data
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 43
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = this'.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.Q_in.popFront()
particle-size: 706
particle-size: 706
statement: this'.data = this'.data[1..this'.size()]
particle-size: 706
particle-size: 706
statement: return this'.data.length
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
statement: return ()
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
statement: this'.Q_in.popFront()
particle-size: 706
particle-size: 706
statement: this'.data = this'.data[1..this'.size()]
particle-size: 706
particle-size: 706
statement: return this'.data.length
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
statement: return ()
particle-size: 706
particle-size: 706
particle-size: 706
particle-size: 706
statement: return ()
particle-size: 749
particle-size: 749
particle-size: 749
particle-size: 749
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1415
particle-size: 1415
statement: return this'.data.length
particle-size: 1415
particle-size: 1415
particle-size: 1415
particle-size: 1415
statement: this'.__H1.__run()
particle-size: 71
particle-size: 71
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 71
statement: this'.Q_in.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1415
particle-size: 1415
statement: return this'.data.length
particle-size: 1415
particle-size: 1415
particle-size: 1415
particle-size: 1415
statement: this'.__S0.__run()
particle-size: 199
particle-size: 199
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 199
statement: this'.route2 = ?
particle-size: 199
statement: this'.route3 = ? + ?
particle-size: 199
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 199
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 199
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 199
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 199
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 199
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 147
loop-index: 2
particle-size: 271
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 454
loop-index: 3
particle-size: 364
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 288
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 107
particle-size: 107
statement: r := this'.front()
particle-size: 107
particle-size: 107
statement: return this'.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.popFront()
particle-size: 107
particle-size: 107
statement: this'.data = this'.data[1..this'.size()]
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 153
particle-size: 153
statement: r := this'.front()
particle-size: 153
particle-size: 153
statement: return this'.data[0]
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.popFront()
particle-size: 153
particle-size: 153
statement: this'.data = this'.data[1..this'.size()]
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return r
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 140
statement: return ()
particle-size: 140
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 399
particle-size: 399
statement: r := this'.front()
particle-size: 399
particle-size: 399
statement: return this'.data[0]
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: this'.popFront()
particle-size: 399
particle-size: 399
statement: this'.data = this'.data[1..this'.size()]
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: return ()
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: return r
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: return ()
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 365
statement: return ()
particle-size: 365
particle-size: 399
particle-size: 399
particle-size: 399
statement: return ()
particle-size: 648
particle-size: 648
particle-size: 648
particle-size: 648
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1864
particle-size: 1864
statement: return this'.data.length
particle-size: 1864
particle-size: 1864
particle-size: 1864
particle-size: 1864
statement: this'.__S1.__run()
particle-size: 153
particle-size: 153
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 153
particle-size: 153
statement: r := this'.front()
particle-size: 153
particle-size: 153
statement: return this'.data[0]
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.popFront()
particle-size: 153
particle-size: 153
statement: this'.data = this'.data[1..this'.size()]
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return r
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 153
particle-size: 153
statement: return this'.data.length
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: this'.data = this'.data ~ [x]
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 153
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1864
particle-size: 1864
statement: return this'.data.length
particle-size: 1864
particle-size: 1864
particle-size: 1864
particle-size: 1864
statement: this'.__S2.__run()
particle-size: 55
particle-size: 55
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1864
particle-size: 1864
statement: return this'.data.length
particle-size: 1864
particle-size: 1864
particle-size: 1864
particle-size: 1864
statement: this'.__S3.__run()
particle-size: 188
particle-size: 188
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 188
particle-size: 188
statement: r := this'.front()
particle-size: 188
particle-size: 188
statement: return this'.data[0]
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.popFront()
particle-size: 188
particle-size: 188
statement: this'.data = this'.data[1..this'.size()]
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return r
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.data = this'.data ~ [x]
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 2787
particle-size: 2787
particle-size: 2787
particle-size: 1088
repetition: 12
statement: __d.__step()
particle-size: 1088
particle-size: 1088
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: return this'.data.length
particle-size: 1088
particle-size: 1088
particle-size: 1088
particle-size: 1088
statement: (action,node) := this'.scheduler()
particle-size: 1086
particle-size: 1086
statement: actions := ([]: (R × R)[])
particle-size: 1086
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 930
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(1,i)]
particle-size: 194
loop-index: 1
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
loop-index: 2
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 204
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(1,i)]
particle-size: 553
loop-index: 3
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 195
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(1,i)]
particle-size: 154
loop-index: 4
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 5
particle-size: 1086
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(0,i)]
particle-size: 254
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1086
particle-size: 1086
statement: return this'.data.length
particle-size: 1086
particle-size: 1086
particle-size: 1086
statement: actions ~= [(1,i)]
particle-size: 188
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2955
particle-size: 2955
particle-size: 2955
particle-size: 2955
particle-size: 2955
particle-size: 2955
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 194
particle-size: 194
statement: r := this'.front()
particle-size: 194
particle-size: 194
statement: return this'.data[0]
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: this'.popFront()
particle-size: 194
particle-size: 194
statement: this'.data = this'.data[1..this'.size()]
particle-size: 194
particle-size: 194
statement: return this'.data.length
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: return r
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 194
particle-size: 194
particle-size: 194
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 194
particle-size: 194
statement: return this'.data.length
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: this'.data = this'.data ~ [x]
particle-size: 194
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 553
particle-size: 553
statement: r := this'.front()
particle-size: 553
particle-size: 553
statement: return this'.data[0]
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: this'.popFront()
particle-size: 553
particle-size: 553
statement: this'.data = this'.data[1..this'.size()]
particle-size: 553
particle-size: 553
statement: return this'.data.length
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: return ()
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: return r
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 138
particle-size: 138
particle-size: 138
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: return ()
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 138
particle-size: 138
particle-size: 138
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 172
particle-size: 172
particle-size: 172
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 172
particle-size: 172
particle-size: 172
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 243
particle-size: 243
particle-size: 243
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 243
particle-size: 243
statement: return this'.data.length
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 240
statement: return ()
particle-size: 240
particle-size: 243
particle-size: 243
particle-size: 243
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 154
particle-size: 154
statement: r := this'.front()
particle-size: 154
particle-size: 154
statement: return this'.data[0]
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.popFront()
particle-size: 154
particle-size: 154
statement: this'.data = this'.data[1..this'.size()]
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return r
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 154
particle-size: 154
particle-size: 154
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1145
particle-size: 1145
statement: return this'.data.length
particle-size: 1145
particle-size: 1145
particle-size: 1145
particle-size: 1145
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 188
particle-size: 188
statement: r := this'.front()
particle-size: 188
particle-size: 188
statement: return this'.data[0]
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.popFront()
particle-size: 188
particle-size: 188
statement: this'.data = this'.data[1..this'.size()]
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return r
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 188
particle-size: 188
particle-size: 188
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.data = this'.data ~ [x]
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1810
particle-size: 1810
statement: return this'.data.length
particle-size: 1810
particle-size: 1810
particle-size: 1810
particle-size: 1810
statement: this'.__H0.__run()
particle-size: 930
particle-size: 930
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 930
particle-size: 930
statement: return this
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: this'.data = [x] ~ this'.data
particle-size: 930
statement: return ()
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 40
particle-size: 40
statement: return this
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = [x] ~ this'.data
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.Q_in.popFront()
particle-size: 890
particle-size: 890
statement: this'.data = this'.data[1..this'.size()]
particle-size: 890
particle-size: 890
statement: return this'.data.length
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
statement: return ()
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
statement: this'.Q_in.popFront()
particle-size: 890
particle-size: 890
statement: this'.data = this'.data[1..this'.size()]
particle-size: 890
particle-size: 890
statement: return this'.data.length
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
statement: return ()
particle-size: 890
particle-size: 890
particle-size: 890
particle-size: 890
statement: return ()
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1810
particle-size: 1810
statement: return this'.data.length
particle-size: 1810
particle-size: 1810
particle-size: 1810
particle-size: 1810
statement: this'.__H1.__run()
particle-size: 124
particle-size: 124
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 124
statement: this'.Q_in.popFront()
particle-size: 124
particle-size: 124
statement: this'.data = this'.data[1..this'.size()]
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1810
particle-size: 1810
statement: return this'.data.length
particle-size: 1810
particle-size: 1810
particle-size: 1810
particle-size: 1810
statement: this'.__S0.__run()
particle-size: 204
particle-size: 204
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 204
statement: this'.route2 = ?
particle-size: 204
statement: this'.route3 = ? + ?
particle-size: 204
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 204
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 204
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 204
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 204
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 204
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 149
loop-index: 2
particle-size: 276
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 462
loop-index: 3
particle-size: 370
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 312
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 167
particle-size: 167
statement: r := this'.front()
particle-size: 167
particle-size: 167
statement: return this'.data[0]
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.popFront()
particle-size: 167
particle-size: 167
statement: this'.data = this'.data[1..this'.size()]
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return r
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 413
particle-size: 413
statement: r := this'.front()
particle-size: 413
particle-size: 413
statement: return this'.data[0]
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: this'.popFront()
particle-size: 413
particle-size: 413
statement: this'.data = this'.data[1..this'.size()]
particle-size: 413
particle-size: 413
statement: return this'.data.length
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return r
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 413
particle-size: 413
statement: return this'.data.length
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: this'.data = this'.data ~ [x]
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return ()
particle-size: 691
particle-size: 691
particle-size: 691
particle-size: 691
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2297
particle-size: 2297
statement: return this'.data.length
particle-size: 2297
particle-size: 2297
particle-size: 2297
particle-size: 2297
statement: this'.__S1.__run()
particle-size: 195
particle-size: 195
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 195
particle-size: 195
statement: r := this'.front()
particle-size: 195
particle-size: 195
statement: return this'.data[0]
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: this'.popFront()
particle-size: 195
particle-size: 195
statement: this'.data = this'.data[1..this'.size()]
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: return ()
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: return r
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 195
particle-size: 195
statement: return this'.data.length
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: this'.data = this'.data ~ [x]
particle-size: 195
statement: return ()
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: return ()
particle-size: 195
particle-size: 195
particle-size: 195
particle-size: 195
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2297
particle-size: 2297
statement: return this'.data.length
particle-size: 2297
particle-size: 2297
particle-size: 2297
particle-size: 2297
statement: this'.__S2.__run()
particle-size: 103
particle-size: 103
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2297
particle-size: 2297
statement: return this'.data.length
particle-size: 2297
particle-size: 2297
particle-size: 2297
particle-size: 2297
statement: this'.__S3.__run()
particle-size: 254
particle-size: 254
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 254
particle-size: 254
statement: r := this'.front()
particle-size: 254
particle-size: 254
statement: return this'.data[0]
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: this'.popFront()
particle-size: 254
particle-size: 254
statement: this'.data = this'.data[1..this'.size()]
particle-size: 254
particle-size: 254
statement: return this'.data.length
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: return ()
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: return r
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 254
particle-size: 254
statement: return this'.data.length
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: this'.data = this'.data ~ [x]
particle-size: 254
statement: return ()
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: return ()
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: return ()
particle-size: 3444
particle-size: 3444
particle-size: 3444
particle-size: 1270
repetition: 13
statement: __d.__step()
particle-size: 1270
particle-size: 1270
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: return this'.data.length
particle-size: 1270
particle-size: 1270
particle-size: 1270
particle-size: 1270
statement: (action,node) := this'.scheduler()
particle-size: 1268
particle-size: 1268
statement: actions := ([]: (R × R)[])
particle-size: 1268
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 1048
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(1,i)]
particle-size: 187
loop-index: 1
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 188
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
loop-index: 2
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 208
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(1,i)]
particle-size: 587
loop-index: 3
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 226
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(1,i)]
particle-size: 197
loop-index: 4
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 154
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(1,i)]
particle-size: 103
loop-index: 5
particle-size: 1268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(0,i)]
particle-size: 309
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1268
particle-size: 1268
statement: return this'.data.length
particle-size: 1268
particle-size: 1268
particle-size: 1268
statement: actions ~= [(1,i)]
particle-size: 257
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 3464
particle-size: 3464
particle-size: 3464
particle-size: 3464
particle-size: 3464
particle-size: 3464
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 187
particle-size: 187
statement: r := this'.front()
particle-size: 187
particle-size: 187
statement: return this'.data[0]
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this'.popFront()
particle-size: 187
particle-size: 187
statement: this'.data = this'.data[1..this'.size()]
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return r
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 187
particle-size: 187
particle-size: 187
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: this'.data = this'.data ~ [x]
particle-size: 187
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 587
particle-size: 587
statement: r := this'.front()
particle-size: 587
particle-size: 587
statement: return this'.data[0]
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: this'.popFront()
particle-size: 587
particle-size: 587
statement: this'.data = this'.data[1..this'.size()]
particle-size: 587
particle-size: 587
statement: return this'.data.length
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return ()
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: return r
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 139
particle-size: 139
particle-size: 139
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 66
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 139
particle-size: 139
particle-size: 139
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 184
particle-size: 184
particle-size: 184
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 182
statement: return ()
particle-size: 182
particle-size: 184
particle-size: 184
particle-size: 184
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 264
particle-size: 264
particle-size: 264
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 264
particle-size: 264
statement: return this'.data.length
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 264
particle-size: 264
particle-size: 264
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 197
particle-size: 197
statement: r := this'.front()
particle-size: 197
particle-size: 197
statement: return this'.data[0]
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.popFront()
particle-size: 197
particle-size: 197
statement: this'.data = this'.data[1..this'.size()]
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return r
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 197
particle-size: 197
particle-size: 197
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.data = this'.data ~ [x]
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1331
particle-size: 1331
statement: return this'.data.length
particle-size: 1331
particle-size: 1331
particle-size: 1331
particle-size: 1331
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 257
particle-size: 257
statement: r := this'.front()
particle-size: 257
particle-size: 257
statement: return this'.data[0]
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: this'.popFront()
particle-size: 257
particle-size: 257
statement: this'.data = this'.data[1..this'.size()]
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return r
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 257
particle-size: 257
particle-size: 257
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: this'.data = this'.data ~ [x]
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2133
particle-size: 2133
statement: return this'.data.length
particle-size: 2133
particle-size: 2133
particle-size: 2133
particle-size: 2133
statement: this'.__H0.__run()
particle-size: 1048
particle-size: 1048
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1048
particle-size: 1048
statement: return this
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
statement: this'.data = [x] ~ this'.data
particle-size: 1048
statement: return ()
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 32
particle-size: 32
statement: return this
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = [x] ~ this'.data
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.Q_in.popFront()
particle-size: 1016
particle-size: 1016
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1016
particle-size: 1016
statement: return this'.data.length
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
statement: return ()
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
statement: this'.Q_in.popFront()
particle-size: 1016
particle-size: 1016
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1016
particle-size: 1016
statement: return this'.data.length
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
statement: return ()
particle-size: 1016
particle-size: 1016
particle-size: 1016
particle-size: 1016
statement: return ()
particle-size: 1048
particle-size: 1048
particle-size: 1048
particle-size: 1048
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2133
particle-size: 2133
statement: return this'.data.length
particle-size: 2133
particle-size: 2133
particle-size: 2133
particle-size: 2133
statement: this'.__H1.__run()
particle-size: 188
particle-size: 188
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 188
statement: this'.Q_in.popFront()
particle-size: 188
particle-size: 188
statement: this'.data = this'.data[1..this'.size()]
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2133
particle-size: 2133
statement: return this'.data.length
particle-size: 2133
particle-size: 2133
particle-size: 2133
particle-size: 2133
statement: this'.__S0.__run()
particle-size: 208
particle-size: 208
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 208
statement: this'.route2 = ?
particle-size: 208
statement: this'.route3 = ? + ?
particle-size: 208
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 208
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 208
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 208
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 208
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 208
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 155
loop-index: 2
particle-size: 283
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 476
loop-index: 3
particle-size: 375
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 336
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 181
particle-size: 181
statement: r := this'.front()
particle-size: 181
particle-size: 181
statement: return this'.data[0]
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.popFront()
particle-size: 181
particle-size: 181
statement: this'.data = this'.data[1..this'.size()]
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return r
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 431
particle-size: 431
statement: r := this'.front()
particle-size: 431
particle-size: 431
statement: return this'.data[0]
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: this'.popFront()
particle-size: 431
particle-size: 431
statement: this'.data = this'.data[1..this'.size()]
particle-size: 431
particle-size: 431
statement: return this'.data.length
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: return ()
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: return r
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 431
particle-size: 431
statement: return this'.data.length
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: this'.data = this'.data ~ [x]
particle-size: 431
statement: return ()
particle-size: 431
particle-size: 431
particle-size: 431
particle-size: 431
statement: return ()
particle-size: 728
particle-size: 728
particle-size: 728
particle-size: 728
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2653
particle-size: 2653
statement: return this'.data.length
particle-size: 2653
particle-size: 2653
particle-size: 2653
particle-size: 2653
statement: this'.__S1.__run()
particle-size: 226
particle-size: 226
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 226
particle-size: 226
statement: r := this'.front()
particle-size: 226
particle-size: 226
statement: return this'.data[0]
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: this'.popFront()
particle-size: 226
particle-size: 226
statement: this'.data = this'.data[1..this'.size()]
particle-size: 226
particle-size: 226
statement: return this'.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: return r
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 226
particle-size: 226
statement: return this'.data.length
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: this'.data = this'.data ~ [x]
particle-size: 226
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2653
particle-size: 2653
statement: return this'.data.length
particle-size: 2653
particle-size: 2653
particle-size: 2653
particle-size: 2653
statement: this'.__S2.__run()
particle-size: 154
particle-size: 154
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 154
particle-size: 154
statement: r := this'.front()
particle-size: 154
particle-size: 154
statement: return this'.data[0]
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.popFront()
particle-size: 154
particle-size: 154
statement: this'.data = this'.data[1..this'.size()]
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return r
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2653
particle-size: 2653
statement: return this'.data.length
particle-size: 2653
particle-size: 2653
particle-size: 2653
particle-size: 2653
statement: this'.__S3.__run()
particle-size: 309
particle-size: 309
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 309
particle-size: 309
statement: r := this'.front()
particle-size: 309
particle-size: 309
statement: return this'.data[0]
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.popFront()
particle-size: 309
particle-size: 309
statement: this'.data = this'.data[1..this'.size()]
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return r
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.data = this'.data ~ [x]
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return ()
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: return ()
particle-size: 3986
particle-size: 3986
particle-size: 3986
particle-size: 1405
repetition: 14
statement: __d.__step()
particle-size: 1405
particle-size: 1405
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: return this'.data.length
particle-size: 1405
particle-size: 1405
particle-size: 1405
particle-size: 1405
statement: (action,node) := this'.scheduler()
particle-size: 1401
particle-size: 1401
statement: actions := ([]: (R × R)[])
particle-size: 1401
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 1125
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(1,i)]
particle-size: 174
loop-index: 1
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 257
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
loop-index: 2
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 198
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(1,i)]
particle-size: 571
loop-index: 3
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 228
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(1,i)]
particle-size: 228
loop-index: 4
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 197
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(1,i)]
particle-size: 154
loop-index: 5
particle-size: 1401
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(0,i)]
particle-size: 364
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1401
particle-size: 1401
statement: return this'.data.length
particle-size: 1401
particle-size: 1401
particle-size: 1401
statement: actions ~= [(1,i)]
particle-size: 308
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 3804
particle-size: 3804
particle-size: 3804
particle-size: 3804
particle-size: 3804
particle-size: 3804
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 174
particle-size: 174
statement: r := this'.front()
particle-size: 174
particle-size: 174
statement: return this'.data[0]
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return r
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 174
particle-size: 174
particle-size: 174
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.data = this'.data ~ [x]
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 571
particle-size: 571
statement: r := this'.front()
particle-size: 571
particle-size: 571
statement: return this'.data[0]
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
statement: this'.popFront()
particle-size: 571
particle-size: 571
statement: this'.data = this'.data[1..this'.size()]
particle-size: 571
particle-size: 571
statement: return this'.data.length
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
statement: return ()
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
statement: return r
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
particle-size: 571
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 127
particle-size: 127
particle-size: 127
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 178
particle-size: 178
particle-size: 178
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 176
statement: return ()
particle-size: 176
particle-size: 178
particle-size: 178
particle-size: 178
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 266
particle-size: 266
particle-size: 266
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 263
statement: return ()
particle-size: 263
particle-size: 266
particle-size: 266
particle-size: 266
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 228
particle-size: 228
particle-size: 228
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.data = this'.data ~ [x]
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 154
particle-size: 154
statement: r := this'.front()
particle-size: 154
particle-size: 154
statement: return this'.data[0]
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.popFront()
particle-size: 154
particle-size: 154
statement: this'.data = this'.data[1..this'.size()]
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return r
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 154
particle-size: 154
particle-size: 154
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1435
particle-size: 1435
statement: return this'.data.length
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 308
particle-size: 308
statement: r := this'.front()
particle-size: 308
particle-size: 308
statement: return this'.data[0]
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: this'.popFront()
particle-size: 308
particle-size: 308
statement: this'.data = this'.data[1..this'.size()]
particle-size: 308
particle-size: 308
statement: return this'.data.length
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: return ()
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: return r
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 308
particle-size: 308
particle-size: 308
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 308
particle-size: 308
statement: return this'.data.length
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: this'.data = this'.data ~ [x]
particle-size: 308
statement: return ()
particle-size: 308
particle-size: 308
particle-size: 308
particle-size: 308
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2369
particle-size: 2369
statement: return this'.data.length
particle-size: 2369
particle-size: 2369
particle-size: 2369
particle-size: 2369
statement: this'.__H0.__run()
particle-size: 1125
particle-size: 1125
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1125
particle-size: 1125
statement: return this
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: this'.data = [x] ~ this'.data
particle-size: 1125
statement: return ()
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 32
particle-size: 32
statement: return this
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = [x] ~ this'.data
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.Q_in.popFront()
particle-size: 1093
particle-size: 1093
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1093
particle-size: 1093
statement: return this'.data.length
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: return ()
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: this'.Q_in.popFront()
particle-size: 1093
particle-size: 1093
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1093
particle-size: 1093
statement: return this'.data.length
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: return ()
particle-size: 1093
particle-size: 1093
particle-size: 1093
particle-size: 1093
statement: return ()
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2369
particle-size: 2369
statement: return this'.data.length
particle-size: 2369
particle-size: 2369
particle-size: 2369
particle-size: 2369
statement: this'.__H1.__run()
particle-size: 257
particle-size: 257
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 257
statement: this'.Q_in.popFront()
particle-size: 257
particle-size: 257
statement: this'.data = this'.data[1..this'.size()]
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2369
particle-size: 2369
statement: return this'.data.length
particle-size: 2369
particle-size: 2369
particle-size: 2369
particle-size: 2369
statement: this'.__S0.__run()
particle-size: 198
particle-size: 198
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 198
statement: this'.route2 = ?
particle-size: 198
statement: this'.route3 = ? + ?
particle-size: 198
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 198
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 198
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 198
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 198
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 198
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 154
loop-index: 2
particle-size: 274
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 466
loop-index: 3
particle-size: 357
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 333
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 113
particle-size: 113
statement: r := this'.front()
particle-size: 113
particle-size: 113
statement: return this'.data[0]
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.popFront()
particle-size: 113
particle-size: 113
statement: this'.data = this'.data[1..this'.size()]
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return r
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.data = this'.data ~ [x]
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 183
particle-size: 183
statement: r := this'.front()
particle-size: 183
particle-size: 183
statement: return this'.data[0]
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.popFront()
particle-size: 183
particle-size: 183
statement: this'.data = this'.data[1..this'.size()]
particle-size: 183
particle-size: 183
statement: return this'.data.length
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return r
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 183
particle-size: 183
statement: return this'.data.length
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.data = this'.data ~ [x]
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 423
particle-size: 423
statement: r := this'.front()
particle-size: 423
particle-size: 423
statement: return this'.data[0]
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: this'.popFront()
particle-size: 423
particle-size: 423
statement: this'.data = this'.data[1..this'.size()]
particle-size: 423
particle-size: 423
statement: return this'.data.length
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: return ()
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: return r
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 423
particle-size: 423
statement: return this'.data.length
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: this'.data = this'.data ~ [x]
particle-size: 423
statement: return ()
particle-size: 423
particle-size: 423
particle-size: 423
particle-size: 423
statement: return ()
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2890
particle-size: 2890
statement: return this'.data.length
particle-size: 2890
particle-size: 2890
particle-size: 2890
particle-size: 2890
statement: this'.__S1.__run()
particle-size: 228
particle-size: 228
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 226
statement: return ()
particle-size: 226
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2890
particle-size: 2890
statement: return this'.data.length
particle-size: 2890
particle-size: 2890
particle-size: 2890
particle-size: 2890
statement: this'.__S2.__run()
particle-size: 197
particle-size: 197
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 197
particle-size: 197
statement: r := this'.front()
particle-size: 197
particle-size: 197
statement: return this'.data[0]
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.popFront()
particle-size: 197
particle-size: 197
statement: this'.data = this'.data[1..this'.size()]
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return r
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.data = this'.data ~ [x]
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2890
particle-size: 2890
statement: return this'.data.length
particle-size: 2890
particle-size: 2890
particle-size: 2890
particle-size: 2890
statement: this'.__S3.__run()
particle-size: 364
particle-size: 364
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 364
particle-size: 364
statement: r := this'.front()
particle-size: 364
particle-size: 364
statement: return this'.data[0]
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: this'.popFront()
particle-size: 364
particle-size: 364
statement: this'.data = this'.data[1..this'.size()]
particle-size: 364
particle-size: 364
statement: return this'.data.length
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return r
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 364
particle-size: 364
statement: return this'.data.length
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 361
statement: return ()
particle-size: 361
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 4329
particle-size: 4329
particle-size: 4329
particle-size: 1466
repetition: 15
statement: __d.__step()
particle-size: 1466
particle-size: 1466
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: return this'.data.length
particle-size: 1466
particle-size: 1466
particle-size: 1466
particle-size: 1466
statement: (action,node) := this'.scheduler()
particle-size: 1459
particle-size: 1459
statement: actions := ([]: (R × R)[])
particle-size: 1459
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 1167
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(1,i)]
particle-size: 155
loop-index: 1
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 307
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
loop-index: 2
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 182
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(1,i)]
particle-size: 533
loop-index: 3
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 227
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(1,i)]
particle-size: 230
loop-index: 4
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 228
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(1,i)]
particle-size: 197
loop-index: 5
particle-size: 1459
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(0,i)]
particle-size: 417
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1459
particle-size: 1459
statement: return this'.data.length
particle-size: 1459
particle-size: 1459
particle-size: 1459
statement: actions ~= [(1,i)]
particle-size: 354
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 3997
particle-size: 3997
particle-size: 3997
particle-size: 3997
particle-size: 3997
particle-size: 3997
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 155
particle-size: 155
statement: r := this'.front()
particle-size: 155
particle-size: 155
statement: return this'.data[0]
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: this'.popFront()
particle-size: 155
particle-size: 155
statement: this'.data = this'.data[1..this'.size()]
particle-size: 155
particle-size: 155
statement: return this'.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: return r
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 155
particle-size: 155
particle-size: 155
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 155
particle-size: 155
statement: return this'.data.length
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: this'.data = this'.data ~ [x]
particle-size: 155
statement: return ()
particle-size: 155
particle-size: 155
particle-size: 155
particle-size: 155
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 533
particle-size: 533
statement: r := this'.front()
particle-size: 533
particle-size: 533
statement: return this'.data[0]
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
statement: this'.popFront()
particle-size: 533
particle-size: 533
statement: this'.data = this'.data[1..this'.size()]
particle-size: 533
particle-size: 533
statement: return this'.data.length
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
statement: return ()
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
statement: return r
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
particle-size: 533
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 113
particle-size: 113
particle-size: 113
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: return ()
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 113
particle-size: 113
particle-size: 113
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 166
particle-size: 166
particle-size: 166
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 166
particle-size: 166
statement: return this'.data.length
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: this'.data = this'.data ~ [x]
particle-size: 166
statement: return ()
particle-size: 166
particle-size: 166
particle-size: 166
particle-size: 166
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 254
particle-size: 254
particle-size: 254
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 254
particle-size: 254
statement: return this'.data.length
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 248
statement: return ()
particle-size: 248
particle-size: 254
particle-size: 254
particle-size: 254
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 230
particle-size: 230
statement: r := this'.front()
particle-size: 230
particle-size: 230
statement: return this'.data[0]
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: this'.popFront()
particle-size: 230
particle-size: 230
statement: this'.data = this'.data[1..this'.size()]
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: return ()
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: return r
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 230
particle-size: 230
particle-size: 230
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: this'.data = this'.data ~ [x]
particle-size: 230
statement: return ()
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 197
particle-size: 197
statement: r := this'.front()
particle-size: 197
particle-size: 197
statement: return this'.data[0]
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: this'.popFront()
particle-size: 197
particle-size: 197
statement: this'.data = this'.data[1..this'.size()]
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return r
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 197
particle-size: 197
particle-size: 197
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 197
particle-size: 197
statement: return this'.data.length
particle-size: 197
particle-size: 197
particle-size: 197
particle-size: 197
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 194
statement: return ()
particle-size: 194
particle-size: 197
particle-size: 197
particle-size: 197
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1469
particle-size: 1469
statement: return this'.data.length
particle-size: 1469
particle-size: 1469
particle-size: 1469
particle-size: 1469
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 354
particle-size: 354
statement: r := this'.front()
particle-size: 354
particle-size: 354
statement: return this'.data[0]
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: this'.popFront()
particle-size: 354
particle-size: 354
statement: this'.data = this'.data[1..this'.size()]
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return ()
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return r
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 354
particle-size: 354
particle-size: 354
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: this'.data = this'.data ~ [x]
particle-size: 354
statement: return ()
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2528
particle-size: 2528
statement: return this'.data.length
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
statement: this'.__H0.__run()
particle-size: 1167
particle-size: 1167
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1167
particle-size: 1167
statement: return this
particle-size: 1167
particle-size: 1167
particle-size: 1167
particle-size: 1167
particle-size: 1167
statement: this'.data = [x] ~ this'.data
particle-size: 1167
statement: return ()
particle-size: 1167
particle-size: 1167
particle-size: 1167
particle-size: 1167
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 1147
particle-size: 1147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1147
particle-size: 1147
statement: return this'.data.length
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
statement: return ()
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
statement: this'.Q_in.popFront()
particle-size: 1147
particle-size: 1147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1147
particle-size: 1147
statement: return this'.data.length
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
statement: return ()
particle-size: 1147
particle-size: 1147
particle-size: 1147
particle-size: 1147
statement: return ()
particle-size: 1167
particle-size: 1167
particle-size: 1167
particle-size: 1167
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2528
particle-size: 2528
statement: return this'.data.length
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
statement: this'.__H1.__run()
particle-size: 307
particle-size: 307
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 307
statement: this'.Q_in.popFront()
particle-size: 307
particle-size: 307
statement: this'.data = this'.data[1..this'.size()]
particle-size: 307
particle-size: 307
statement: return this'.data.length
particle-size: 307
particle-size: 307
particle-size: 307
particle-size: 307
particle-size: 307
statement: return ()
particle-size: 307
particle-size: 307
particle-size: 307
particle-size: 307
statement: return ()
particle-size: 307
particle-size: 307
particle-size: 307
particle-size: 307
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2528
particle-size: 2528
statement: return this'.data.length
particle-size: 2528
particle-size: 2528
particle-size: 2528
particle-size: 2528
statement: this'.__S0.__run()
particle-size: 182
particle-size: 182
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 182
statement: this'.route2 = ?
particle-size: 182
statement: this'.route3 = ? + ?
particle-size: 182
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 182
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 182
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 182
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 182
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 182
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 144
loop-index: 2
particle-size: 253
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 434
loop-index: 3
particle-size: 329
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 315
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 106
particle-size: 106
statement: r := this'.front()
particle-size: 106
particle-size: 106
statement: return this'.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.popFront()
particle-size: 106
particle-size: 106
statement: this'.data = this'.data[1..this'.size()]
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 176
particle-size: 176
statement: r := this'.front()
particle-size: 176
particle-size: 176
statement: return this'.data[0]
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: this'.popFront()
particle-size: 176
particle-size: 176
statement: this'.data = this'.data[1..this'.size()]
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return ()
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return r
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: this'.data = this'.data ~ [x]
particle-size: 176
statement: return ()
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 396
particle-size: 396
statement: r := this'.front()
particle-size: 396
particle-size: 396
statement: return this'.data[0]
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: this'.popFront()
particle-size: 396
particle-size: 396
statement: this'.data = this'.data[1..this'.size()]
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return ()
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return r
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: this'.data = this'.data ~ [x]
particle-size: 396
statement: return ()
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return ()
particle-size: 678
particle-size: 678
particle-size: 678
particle-size: 678
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3024
particle-size: 3024
statement: return this'.data.length
particle-size: 3024
particle-size: 3024
particle-size: 3024
particle-size: 3024
statement: this'.__S1.__run()
particle-size: 227
particle-size: 227
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 227
particle-size: 227
statement: r := this'.front()
particle-size: 227
particle-size: 227
statement: return this'.data[0]
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: this'.popFront()
particle-size: 227
particle-size: 227
statement: this'.data = this'.data[1..this'.size()]
particle-size: 227
particle-size: 227
statement: return this'.data.length
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return r
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 227
particle-size: 227
statement: return this'.data.length
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 225
statement: return ()
particle-size: 225
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3024
particle-size: 3024
statement: return this'.data.length
particle-size: 3024
particle-size: 3024
particle-size: 3024
particle-size: 3024
statement: this'.__S2.__run()
particle-size: 228
particle-size: 228
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.data = this'.data ~ [x]
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3024
particle-size: 3024
statement: return this'.data.length
particle-size: 3024
particle-size: 3024
particle-size: 3024
particle-size: 3024
statement: this'.__S3.__run()
particle-size: 417
particle-size: 417
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 417
particle-size: 417
statement: r := this'.front()
particle-size: 417
particle-size: 417
statement: return this'.data[0]
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: this'.popFront()
particle-size: 417
particle-size: 417
statement: this'.data = this'.data[1..this'.size()]
particle-size: 417
particle-size: 417
statement: return this'.data.length
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: return ()
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: return r
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 417
particle-size: 417
statement: return this'.data.length
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 414
statement: return ()
particle-size: 414
particle-size: 417
particle-size: 417
particle-size: 417
statement: return ()
particle-size: 417
particle-size: 417
particle-size: 417
particle-size: 417
statement: return ()
particle-size: 4500
particle-size: 4500
particle-size: 4500
particle-size: 1501
repetition: 16
statement: __d.__step()
particle-size: 1501
particle-size: 1501
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: return this'.data.length
particle-size: 1501
particle-size: 1501
particle-size: 1501
particle-size: 1501
statement: (action,node) := this'.scheduler()
particle-size: 1494
particle-size: 1494
statement: actions := ([]: (R × R)[])
particle-size: 1494
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 1157
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(1,i)]
particle-size: 132
loop-index: 1
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 357
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
loop-index: 2
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 161
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(1,i)]
particle-size: 490
loop-index: 3
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 216
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(1,i)]
particle-size: 231
loop-index: 4
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 232
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(1,i)]
particle-size: 228
loop-index: 5
particle-size: 1494
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(0,i)]
particle-size: 446
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: actions ~= [(1,i)]
particle-size: 391
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4041
particle-size: 4041
particle-size: 4041
particle-size: 4041
particle-size: 4041
particle-size: 4041
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 132
particle-size: 132
statement: r := this'.front()
particle-size: 132
particle-size: 132
statement: return this'.data[0]
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return r
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 132
particle-size: 132
particle-size: 132
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.data = this'.data ~ [x]
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 490
particle-size: 490
statement: r := this'.front()
particle-size: 490
particle-size: 490
statement: return this'.data[0]
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: this'.popFront()
particle-size: 490
particle-size: 490
statement: this'.data = this'.data[1..this'.size()]
particle-size: 490
particle-size: 490
statement: return this'.data.length
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: return ()
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: return r
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
particle-size: 490
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: this'.__H0.Q_in.pushBack((pkt,1))
particle-size: 102
particle-size: 102
particle-size: 102
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 102
particle-size: 102
particle-size: 102
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 154
particle-size: 154
particle-size: 154
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 234
particle-size: 234
particle-size: 234
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 234
particle-size: 234
statement: return this'.data.length
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 234
particle-size: 234
particle-size: 234
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 231
particle-size: 231
statement: r := this'.front()
particle-size: 231
particle-size: 231
statement: return this'.data[0]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.popFront()
particle-size: 231
particle-size: 231
statement: this'.data = this'.data[1..this'.size()]
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return r
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 231
particle-size: 231
particle-size: 231
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.data = this'.data ~ [x]
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 228
particle-size: 228
particle-size: 228
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 225
statement: return ()
particle-size: 225
particle-size: 228
particle-size: 228
particle-size: 228
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1472
particle-size: 1472
statement: return this'.data.length
particle-size: 1472
particle-size: 1472
particle-size: 1472
particle-size: 1472
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 391
particle-size: 391
statement: r := this'.front()
particle-size: 391
particle-size: 391
statement: return this'.data[0]
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: this'.popFront()
particle-size: 391
particle-size: 391
statement: this'.data = this'.data[1..this'.size()]
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: return ()
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: return r
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 391
particle-size: 391
particle-size: 391
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: this'.data = this'.data ~ [x]
particle-size: 391
statement: return ()
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2569
particle-size: 2569
statement: return this'.data.length
particle-size: 2569
particle-size: 2569
particle-size: 2569
particle-size: 2569
statement: this'.__H0.__run()
particle-size: 1157
particle-size: 1157
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1157
particle-size: 1157
statement: return this
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: this'.data = [x] ~ this'.data
particle-size: 1157
statement: return ()
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 1143
particle-size: 1143
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1143
particle-size: 1143
statement: return this'.data.length
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: return ()
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: this'.Q_in.popFront()
particle-size: 1143
particle-size: 1143
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1143
particle-size: 1143
statement: return this'.data.length
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: return ()
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: return ()
particle-size: 1157
particle-size: 1157
particle-size: 1157
particle-size: 1157
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2569
particle-size: 2569
statement: return this'.data.length
particle-size: 2569
particle-size: 2569
particle-size: 2569
particle-size: 2569
statement: this'.__H1.__run()
particle-size: 357
particle-size: 357
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 357
statement: this'.Q_in.popFront()
particle-size: 357
particle-size: 357
statement: this'.data = this'.data[1..this'.size()]
particle-size: 357
particle-size: 357
statement: return this'.data.length
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: return ()
particle-size: 357
particle-size: 357
particle-size: 357
particle-size: 357
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2569
particle-size: 2569
statement: return this'.data.length
particle-size: 2569
particle-size: 2569
particle-size: 2569
particle-size: 2569
statement: this'.__S0.__run()
particle-size: 161
particle-size: 161
statement: if this'.Q_in.data[0][1] == 1 {
    this'.route1 = ? + ? + ?;
    this'.route2 = ?;
    this'.route3 = ? + ?;
    this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3;
    this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3;
    this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2;
    this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3;
    for i in [1..3]{
        if (i == this'.nshortest) {
            this'.which = uniformInt(1,i);
        }
    }
    if this'.which == this'.shortest1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else if this'.which == this'.shortest1 + this'.shortest2 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
}
statement: this'.route1 = ? + ? + ?
particle-size: 161
statement: this'.route2 = ?
particle-size: 161
statement: this'.route3 = ? + ?
particle-size: 161
statement: this'.shortest1 = this'.route1 <= this'.route2 && this'.route2 <= this'.route3
particle-size: 161
statement: this'.shortest2 = this'.route2 <= this'.route1 && this'.route2 <= this'.route3
particle-size: 161
statement: this'.shortest3 = this'.route3 <= this'.route1 && this'.route3 <= this'.route2
particle-size: 161
statement: this'.nshortest = this'.shortest1 + this'.shortest2 + this'.shortest3
particle-size: 161
statement: for i in [1..3]{
    if (i == this'.nshortest) {
        this'.which = uniformInt(1,i);
    }
}
loop-index: 1
particle-size: 161
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 131
loop-index: 2
particle-size: 226
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 392
loop-index: 3
particle-size: 292
statement: if (i == this'.nshortest) {
    this'.which = uniformInt(1,i);
}
statement: this'.which = uniformInt(1,i)
particle-size: 282
statement: if this'.which == this'.shortest1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 94
particle-size: 94
statement: r := this'.front()
particle-size: 94
particle-size: 94
statement: return this'.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.popFront()
particle-size: 94
particle-size: 94
statement: this'.data = this'.data[1..this'.size()]
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.data = this'.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if this'.which == this'.shortest1 + this'.shortest2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 161
particle-size: 161
statement: r := this'.front()
particle-size: 161
particle-size: 161
statement: return this'.data[0]
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.popFront()
particle-size: 161
particle-size: 161
statement: this'.data = this'.data[1..this'.size()]
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return r
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.data = this'.data ~ [x]
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 356
particle-size: 356
statement: r := this'.front()
particle-size: 356
particle-size: 356
statement: return this'.data[0]
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: this'.popFront()
particle-size: 356
particle-size: 356
statement: this'.data = this'.data[1..this'.size()]
particle-size: 356
particle-size: 356
statement: return this'.data.length
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: return ()
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: return r
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 356
particle-size: 356
statement: return this'.data.length
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: this'.data = this'.data ~ [x]
particle-size: 356
statement: return ()
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: return ()
particle-size: 611
particle-size: 611
particle-size: 611
particle-size: 611
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3019
particle-size: 3019
statement: return this'.data.length
particle-size: 3019
particle-size: 3019
particle-size: 3019
particle-size: 3019
statement: this'.__S1.__run()
particle-size: 216
particle-size: 216
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 216
particle-size: 216
statement: r := this'.front()
particle-size: 216
particle-size: 216
statement: return this'.data[0]
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this'.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return r
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 214
statement: return ()
particle-size: 214
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3019
particle-size: 3019
statement: return this'.data.length
particle-size: 3019
particle-size: 3019
particle-size: 3019
particle-size: 3019
statement: this'.__S2.__run()
particle-size: 232
particle-size: 232
statement: if this'.Q_in.data[0][1] == 1 || this'.Q_in.data[0][1] == 2 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 232
particle-size: 232
statement: r := this'.front()
particle-size: 232
particle-size: 232
statement: return this'.data[0./run.sh: line 8: 49605 Segmentation fault      (core dumped) $PSI $1

real	518m27.996s
user	221m22.900s
sys	184m15.188s
